var WebGMEGlobal = WebGMEGlobal || {}; WebGMEGlobal.plugins = WebGMEGlobal.plugins || {};(function(){/** vim: et:ts=4:sw=4:sts=4
 * @license RequireJS 2.1.11 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/requirejs for details
 */
//Not using strict: uneven strict support in browsers, #392, and causes
//problems with requirejs.exec()/transpiler plugins that may not be strict.
/*jslint regexp: true, nomen: true, sloppy: true */
/*global window, navigator, document, importScripts, setTimeout, opera */

var requirejs, require, define;
(function (global) {
    var req, s, head, baseElement, dataMain, src,
        interactiveScript, currentlyAddingScript, mainScript, subPath,
        version = '2.1.11',
        commentRegExp = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
        cjsRequireRegExp = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
        jsSuffixRegExp = /\.js$/,
        currDirRegExp = /^\.\//,
        op = Object.prototype,
        ostring = op.toString,
        hasOwn = op.hasOwnProperty,
        ap = Array.prototype,
        apsp = ap.splice,
        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),
        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',
        //PS3 indicates loaded and complete, but need to wait for complete
        //specifically. Sequence is 'loading', 'loaded', execution,
        // then 'complete'. The UA check is unfortunate, but not sure how
        //to feature test w/o causing perf issues.
        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?
                      /^complete$/ : /^(complete|loaded)$/,
        defContextName = '_',
        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.
        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',
        contexts = {},
        cfg = {},
        globalDefQueue = [],
        useInteractive = false;

    function isFunction(it) {
        return ostring.call(it) === '[object Function]';
    }

    function isArray(it) {
        return ostring.call(it) === '[object Array]';
    }

    /**
     * Helper function for iterating over an array. If the func returns
     * a true value, it will break out of the loop.
     */
    function each(ary, func) {
        if (ary) {
            var i;
            for (i = 0; i < ary.length; i += 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    /**
     * Helper function for iterating over an array backwards. If the func
     * returns a true value, it will break out of the loop.
     */
    function eachReverse(ary, func) {
        if (ary) {
            var i;
            for (i = ary.length - 1; i > -1; i -= 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    function getOwn(obj, prop) {
        return hasProp(obj, prop) && obj[prop];
    }

    /**
     * Cycles over properties in an object and calls a function for each
     * property value. If the function returns a truthy value, then the
     * iteration is stopped.
     */
    function eachProp(obj, func) {
        var prop;
        for (prop in obj) {
            if (hasProp(obj, prop)) {
                if (func(obj[prop], prop)) {
                    break;
                }
            }
        }
    }

    /**
     * Simple function to mix in properties from source into target,
     * but only if target does not already have a property of the same name.
     */
    function mixin(target, source, force, deepStringMixin) {
        if (source) {
            eachProp(source, function (value, prop) {
                if (force || !hasProp(target, prop)) {
                    if (deepStringMixin && typeof value === 'object' && value &&
                        !isArray(value) && !isFunction(value) &&
                        !(value instanceof RegExp)) {

                        if (!target[prop]) {
                            target[prop] = {};
                        }
                        mixin(target[prop], value, force, deepStringMixin);
                    } else {
                        target[prop] = value;
                    }
                }
            });
        }
        return target;
    }

    //Similar to Function.prototype.bind, but the 'this' object is specified
    //first, since it is easier to read/figure out what 'this' will be.
    function bind(obj, fn) {
        return function () {
            return fn.apply(obj, arguments);
        };
    }

    function scripts() {
        return document.getElementsByTagName('script');
    }

    function defaultOnError(err) {
        throw err;
    }

    //Allow getting a global that is expressed in
    //dot notation, like 'a.b.c'.
    function getGlobal(value) {
        if (!value) {
            return value;
        }
        var g = global;
        each(value.split('.'), function (part) {
            g = g[part];
        });
        return g;
    }

    /**
     * Constructs an error with a pointer to an URL with more information.
     * @param {String} id the error ID that maps to an ID on a web page.
     * @param {String} message human readable error.
     * @param {Error} [err] the original error, if there is one.
     *
     * @returns {Error}
     */
    function makeError(id, msg, err, requireModules) {
        var e = new Error(msg + '\nhttp://requirejs.org/docs/errors.html#' + id);
        e.requireType = id;
        e.requireModules = requireModules;
        if (err) {
            e.originalError = err;
        }
        return e;
    }

    if (typeof define !== 'undefined') {
        //If a define is already in play via another AMD loader,
        //do not overwrite.
        return;
    }

    if (typeof requirejs !== 'undefined') {
        if (isFunction(requirejs)) {
            //Do not overwrite and existing requirejs instance.
            return;
        }
        cfg = requirejs;
        requirejs = undefined;
    }

    //Allow for a require config object
    if (typeof require !== 'undefined' && !isFunction(require)) {
        //assume it is a config object.
        cfg = require;
        require = undefined;
    }

    function newContext(contextName) {
        var inCheckLoaded, Module, context, handlers,
            checkLoadedTimeoutId,
            config = {
                //Defaults. Do not set a default for map
                //config to speed up normalize(), which
                //will run faster if there is no default.
                waitSeconds: 7,
                baseUrl: './',
                paths: {},
                bundles: {},
                pkgs: {},
                shim: {},
                config: {}
            },
            registry = {},
            //registry of just enabled modules, to speed
            //cycle breaking code when lots of modules
            //are registered, but not activated.
            enabledRegistry = {},
            undefEvents = {},
            defQueue = [],
            defined = {},
            urlFetched = {},
            bundlesMap = {},
            requireCounter = 1,
            unnormalizedCounter = 1;

        /**
         * Trims the . and .. from an array of path segments.
         * It will keep a leading path segment if a .. will become
         * the first path segment, to help with module name lookups,
         * which act like paths, but can be remapped. But the end result,
         * all paths that use this function should look normalized.
         * NOTE: this method MODIFIES the input array.
         * @param {Array} ary the array of path segments.
         */
        function trimDots(ary) {
            var i, part, length = ary.length;
            for (i = 0; i < length; i++) {
                part = ary[i];
                if (part === '.') {
                    ary.splice(i, 1);
                    i -= 1;
                } else if (part === '..') {
                    if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {
                        //End of the line. Keep at least one non-dot
                        //path segment at the front so it can be mapped
                        //correctly to disk. Otherwise, there is likely
                        //no path mapping for a path starting with '..'.
                        //This can still fail, but catches the most reasonable
                        //uses of ..
                        break;
                    } else if (i > 0) {
                        ary.splice(i - 1, 2);
                        i -= 2;
                    }
                }
            }
        }

        /**
         * Given a relative module name, like ./something, normalize it to
         * a real name that can be mapped to a path.
         * @param {String} name the relative name
         * @param {String} baseName a real name that the name arg is relative
         * to.
         * @param {Boolean} applyMap apply the map config to the value. Should
         * only be done if this normalization is for a dependency ID.
         * @returns {String} normalized name
         */
        function normalize(name, baseName, applyMap) {
            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,
                foundMap, foundI, foundStarMap, starI,
                baseParts = baseName && baseName.split('/'),
                normalizedBaseParts = baseParts,
                map = config.map,
                starMap = map && map['*'];

            //Adjust any relative paths.
            if (name && name.charAt(0) === '.') {
                //If have a base name, try to normalize against it,
                //otherwise, assume it is a top-level require that will
                //be relative to baseUrl in the end.
                if (baseName) {
                    //Convert baseName to array, and lop off the last part,
                    //so that . matches that 'directory' and not name of the baseName's
                    //module. For instance, baseName of 'one/two/three', maps to
                    //'one/two/three.js', but we want the directory, 'one/two' for
                    //this normalization.
                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
                    name = name.split('/');
                    lastIndex = name.length - 1;

                    // If wanting node ID compatibility, strip .js from end
                    // of IDs. Have to do this here, and not in nameToUrl
                    // because node allows either .js or non .js to map
                    // to same file.
                    if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                        name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                    }

                    name = normalizedBaseParts.concat(name);
                    trimDots(name);
                    name = name.join('/');
                } else if (name.indexOf('./') === 0) {
                    // No baseName, so this is ID is resolved relative
                    // to baseUrl, pull off the leading dot.
                    name = name.substring(2);
                }
            }

            //Apply map config if available.
            if (applyMap && map && (baseParts || starMap)) {
                nameParts = name.split('/');

                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {
                    nameSegment = nameParts.slice(0, i).join('/');

                    if (baseParts) {
                        //Find the longest baseName segment match in the config.
                        //So, do joins on the biggest to smallest lengths of baseParts.
                        for (j = baseParts.length; j > 0; j -= 1) {
                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));

                            //baseName segment has config, find if it has one for
                            //this name.
                            if (mapValue) {
                                mapValue = getOwn(mapValue, nameSegment);
                                if (mapValue) {
                                    //Match, update name to the new value.
                                    foundMap = mapValue;
                                    foundI = i;
                                    break outerLoop;
                                }
                            }
                        }
                    }

                    //Check for a star map match, but just hold on to it,
                    //if there is a shorter segment match later in a matching
                    //config, then favor over this star map.
                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {
                        foundStarMap = getOwn(starMap, nameSegment);
                        starI = i;
                    }
                }

                if (!foundMap && foundStarMap) {
                    foundMap = foundStarMap;
                    foundI = starI;
                }

                if (foundMap) {
                    nameParts.splice(0, foundI, foundMap);
                    name = nameParts.join('/');
                }
            }

            // If the name points to a package's name, use
            // the package main instead.
            pkgMain = getOwn(config.pkgs, name);

            return pkgMain ? pkgMain : name;
        }

        function removeScript(name) {
            if (isBrowser) {
                each(scripts(), function (scriptNode) {
                    if (scriptNode.getAttribute('data-requiremodule') === name &&
                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {
                        scriptNode.parentNode.removeChild(scriptNode);
                        return true;
                    }
                });
            }
        }

        function hasPathFallback(id) {
            var pathConfig = getOwn(config.paths, id);
            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {
                //Pop off the first array value, since it failed, and
                //retry
                pathConfig.shift();
                context.require.undef(id);
                context.require([id]);
                return true;
            }
        }

        //Turns a plugin!resource to [plugin, resource]
        //with the plugin being undefined if the name
        //did not have a plugin prefix.
        function splitPrefix(name) {
            var prefix,
                index = name ? name.indexOf('!') : -1;
            if (index > -1) {
                prefix = name.substring(0, index);
                name = name.substring(index + 1, name.length);
            }
            return [prefix, name];
        }

        /**
         * Creates a module mapping that includes plugin prefix, module
         * name, and path. If parentModuleMap is provided it will
         * also normalize the name via require.normalize()
         *
         * @param {String} name the module name
         * @param {String} [parentModuleMap] parent module map
         * for the module name, used to resolve relative names.
         * @param {Boolean} isNormalized: is the ID already normalized.
         * This is true if this call is done for a define() module ID.
         * @param {Boolean} applyMap: apply the map config to the ID.
         * Should only be true if this map is for a dependency.
         *
         * @returns {Object}
         */
        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {
            var url, pluginModule, suffix, nameParts,
                prefix = null,
                parentName = parentModuleMap ? parentModuleMap.name : null,
                originalName = name,
                isDefine = true,
                normalizedName = '';

            //If no name, then it means it is a require call, generate an
            //internal name.
            if (!name) {
                isDefine = false;
                name = '_@r' + (requireCounter += 1);
            }

            nameParts = splitPrefix(name);
            prefix = nameParts[0];
            name = nameParts[1];

            if (prefix) {
                prefix = normalize(prefix, parentName, applyMap);
                pluginModule = getOwn(defined, prefix);
            }

            //Account for relative paths if there is a base name.
            if (name) {
                if (prefix) {
                    if (pluginModule && pluginModule.normalize) {
                        //Plugin is loaded, use its normalize method.
                        normalizedName = pluginModule.normalize(name, function (name) {
                            return normalize(name, parentName, applyMap);
                        });
                    } else {
                        normalizedName = normalize(name, parentName, applyMap);
                    }
                } else {
                    //A regular module.
                    normalizedName = normalize(name, parentName, applyMap);

                    //Normalized name may be a plugin ID due to map config
                    //application in normalize. The map config values must
                    //already be normalized, so do not need to redo that part.
                    nameParts = splitPrefix(normalizedName);
                    prefix = nameParts[0];
                    normalizedName = nameParts[1];
                    isNormalized = true;

                    url = context.nameToUrl(normalizedName);
                }
            }

            //If the id is a plugin id that cannot be determined if it needs
            //normalization, stamp it with a unique ID so two matching relative
            //ids that may conflict can be separate.
            suffix = prefix && !pluginModule && !isNormalized ?
                     '_unnormalized' + (unnormalizedCounter += 1) :
                     '';

            return {
                prefix: prefix,
                name: normalizedName,
                parentMap: parentModuleMap,
                unnormalized: !!suffix,
                url: url,
                originalName: originalName,
                isDefine: isDefine,
                id: (prefix ?
                        prefix + '!' + normalizedName :
                        normalizedName) + suffix
            };
        }

        function getModule(depMap) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (!mod) {
                mod = registry[id] = new context.Module(depMap);
            }

            return mod;
        }

        function on(depMap, name, fn) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (hasProp(defined, id) &&
                    (!mod || mod.defineEmitComplete)) {
                if (name === 'defined') {
                    fn(defined[id]);
                }
            } else {
                mod = getModule(depMap);
                if (mod.error && name === 'error') {
                    fn(mod.error);
                } else {
                    mod.on(name, fn);
                }
            }
        }

        function onError(err, errback) {
            var ids = err.requireModules,
                notified = false;

            if (errback) {
                errback(err);
            } else {
                each(ids, function (id) {
                    var mod = getOwn(registry, id);
                    if (mod) {
                        //Set error on module, so it skips timeout checks.
                        mod.error = err;
                        if (mod.events.error) {
                            notified = true;
                            mod.emit('error', err);
                        }
                    }
                });

                if (!notified) {
                    req.onError(err);
                }
            }
        }

        /**
         * Internal method to transfer globalQueue items to this context's
         * defQueue.
         */
        function takeGlobalQueue() {
            //Push all the globalDefQueue items into the context's defQueue
            if (globalDefQueue.length) {
                //Array splice in the values since the context code has a
                //local var ref to defQueue, so cannot just reassign the one
                //on context.
                apsp.apply(defQueue,
                           [defQueue.length, 0].concat(globalDefQueue));
                globalDefQueue = [];
            }
        }

        handlers = {
            'require': function (mod) {
                if (mod.require) {
                    return mod.require;
                } else {
                    return (mod.require = context.makeRequire(mod.map));
                }
            },
            'exports': function (mod) {
                mod.usingExports = true;
                if (mod.map.isDefine) {
                    if (mod.exports) {
                        return (defined[mod.map.id] = mod.exports);
                    } else {
                        return (mod.exports = defined[mod.map.id] = {});
                    }
                }
            },
            'module': function (mod) {
                if (mod.module) {
                    return mod.module;
                } else {
                    return (mod.module = {
                        id: mod.map.id,
                        uri: mod.map.url,
                        config: function () {
                            return  getOwn(config.config, mod.map.id) || {};
                        },
                        exports: mod.exports || (mod.exports = {})
                    });
                }
            }
        };

        function cleanRegistry(id) {
            //Clean up machinery used for waiting modules.
            delete registry[id];
            delete enabledRegistry[id];
        }

        function breakCycle(mod, traced, processed) {
            var id = mod.map.id;

            if (mod.error) {
                mod.emit('error', mod.error);
            } else {
                traced[id] = true;
                each(mod.depMaps, function (depMap, i) {
                    var depId = depMap.id,
                        dep = getOwn(registry, depId);

                    //Only force things that have not completed
                    //being defined, so still in the registry,
                    //and only if it has not been matched up
                    //in the module already.
                    if (dep && !mod.depMatched[i] && !processed[depId]) {
                        if (getOwn(traced, depId)) {
                            mod.defineDep(i, defined[depId]);
                            mod.check(); //pass false?
                        } else {
                            breakCycle(dep, traced, processed);
                        }
                    }
                });
                processed[id] = true;
            }
        }

        function checkLoaded() {
            var err, usingPathFallback,
                waitInterval = config.waitSeconds * 1000,
                //It is possible to disable the wait interval by using waitSeconds of 0.
                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),
                noLoads = [],
                reqCalls = [],
                stillLoading = false,
                needCycleCheck = true;

            //Do not bother if this call was a result of a cycle break.
            if (inCheckLoaded) {
                return;
            }

            inCheckLoaded = true;

            //Figure out the state of all the modules.
            eachProp(enabledRegistry, function (mod) {
                var map = mod.map,
                    modId = map.id;

                //Skip things that are not enabled or in error state.
                if (!mod.enabled) {
                    return;
                }

                if (!map.isDefine) {
                    reqCalls.push(mod);
                }

                if (!mod.error) {
                    //If the module should be executed, and it has not
                    //been inited and time is up, remember it.
                    if (!mod.inited && expired) {
                        if (hasPathFallback(modId)) {
                            usingPathFallback = true;
                            stillLoading = true;
                        } else {
                            noLoads.push(modId);
                            removeScript(modId);
                        }
                    } else if (!mod.inited && mod.fetched && map.isDefine) {
                        stillLoading = true;
                        if (!map.prefix) {
                            //No reason to keep looking for unfinished
                            //loading. If the only stillLoading is a
                            //plugin resource though, keep going,
                            //because it may be that a plugin resource
                            //is waiting on a non-plugin cycle.
                            return (needCycleCheck = false);
                        }
                    }
                }
            });

            if (expired && noLoads.length) {
                //If wait time expired, throw error of unloaded modules.
                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);
                err.contextName = context.contextName;
                return onError(err);
            }

            //Not expired, check for a cycle.
            if (needCycleCheck) {
                each(reqCalls, function (mod) {
                    breakCycle(mod, {}, {});
                });
            }

            //If still waiting on loads, and the waiting load is something
            //other than a plugin resource, or there are still outstanding
            //scripts, then just try back later.
            if ((!expired || usingPathFallback) && stillLoading) {
                //Something is still waiting to load. Wait for it, but only
                //if a timeout is not already in effect.
                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {
                    checkLoadedTimeoutId = setTimeout(function () {
                        checkLoadedTimeoutId = 0;
                        checkLoaded();
                    }, 50);
                }
            }

            inCheckLoaded = false;
        }

        Module = function (map) {
            this.events = getOwn(undefEvents, map.id) || {};
            this.map = map;
            this.shim = getOwn(config.shim, map.id);
            this.depExports = [];
            this.depMaps = [];
            this.depMatched = [];
            this.pluginMaps = {};
            this.depCount = 0;

            /* this.exports this.factory
               this.depMaps = [],
               this.enabled, this.fetched
            */
        };

        Module.prototype = {
            init: function (depMaps, factory, errback, options) {
                options = options || {};

                //Do not do more inits if already done. Can happen if there
                //are multiple define calls for the same module. That is not
                //a normal, common case, but it is also not unexpected.
                if (this.inited) {
                    return;
                }

                this.factory = factory;

                if (errback) {
                    //Register for errors on this module.
                    this.on('error', errback);
                } else if (this.events.error) {
                    //If no errback already, but there are error listeners
                    //on this module, set up an errback to pass to the deps.
                    errback = bind(this, function (err) {
                        this.emit('error', err);
                    });
                }

                //Do a copy of the dependency array, so that
                //source inputs are not modified. For example
                //"shim" deps are passed in here directly, and
                //doing a direct modification of the depMaps array
                //would affect that config.
                this.depMaps = depMaps && depMaps.slice(0);

                this.errback = errback;

                //Indicate this module has be initialized
                this.inited = true;

                this.ignore = options.ignore;

                //Could have option to init this module in enabled mode,
                //or could have been previously marked as enabled. However,
                //the dependencies are not known until init is called. So
                //if enabled previously, now trigger dependencies as enabled.
                if (options.enabled || this.enabled) {
                    //Enable this module and dependencies.
                    //Will call this.check()
                    this.enable();
                } else {
                    this.check();
                }
            },

            defineDep: function (i, depExports) {
                //Because of cycles, defined callback for a given
                //export can be called more than once.
                if (!this.depMatched[i]) {
                    this.depMatched[i] = true;
                    this.depCount -= 1;
                    this.depExports[i] = depExports;
                }
            },

            fetch: function () {
                if (this.fetched) {
                    return;
                }
                this.fetched = true;

                context.startTime = (new Date()).getTime();

                var map = this.map;

                //If the manager is for a plugin managed resource,
                //ask the plugin to load it now.
                if (this.shim) {
                    context.makeRequire(this.map, {
                        enableBuildCallback: true
                    })(this.shim.deps || [], bind(this, function () {
                        return map.prefix ? this.callPlugin() : this.load();
                    }));
                } else {
                    //Regular dependency.
                    return map.prefix ? this.callPlugin() : this.load();
                }
            },

            load: function () {
                var url = this.map.url;

                //Regular dependency.
                if (!urlFetched[url]) {
                    urlFetched[url] = true;
                    context.load(this.map.id, url);
                }
            },

            /**
             * Checks if the module is ready to define itself, and if so,
             * define it.
             */
            check: function () {
                if (!this.enabled || this.enabling) {
                    return;
                }

                var err, cjsModule,
                    id = this.map.id,
                    depExports = this.depExports,
                    exports = this.exports,
                    factory = this.factory;

                if (!this.inited) {
                    this.fetch();
                } else if (this.error) {
                    this.emit('error', this.error);
                } else if (!this.defining) {
                    //The factory could trigger another require call
                    //that would result in checking this module to
                    //define itself again. If already in the process
                    //of doing that, skip this work.
                    this.defining = true;

                    if (this.depCount < 1 && !this.defined) {
                        if (isFunction(factory)) {
                            //If there is an error listener, favor passing
                            //to that instead of throwing an error. However,
                            //only do it for define()'d  modules. require
                            //errbacks should not be called for failures in
                            //their callbacks (#699). However if a global
                            //onError is set, use that.
                            if ((this.events.error && this.map.isDefine) ||
                                req.onError !== defaultOnError) {
                                try {
                                    exports = context.execCb(id, factory, depExports, exports);
                                } catch (e) {
                                    err = e;
                                }
                            } else {
                                exports = context.execCb(id, factory, depExports, exports);
                            }

                            // Favor return value over exports. If node/cjs in play,
                            // then will not have a return value anyway. Favor
                            // module.exports assignment over exports object.
                            if (this.map.isDefine && exports === undefined) {
                                cjsModule = this.module;
                                if (cjsModule) {
                                    exports = cjsModule.exports;
                                } else if (this.usingExports) {
                                    //exports already set the defined value.
                                    exports = this.exports;
                                }
                            }

                            if (err) {
                                err.requireMap = this.map;
                                err.requireModules = this.map.isDefine ? [this.map.id] : null;
                                err.requireType = this.map.isDefine ? 'define' : 'require';
                                return onError((this.error = err));
                            }

                        } else {
                            //Just a literal value
                            exports = factory;
                        }

                        this.exports = exports;

                        if (this.map.isDefine && !this.ignore) {
                            defined[id] = exports;

                            if (req.onResourceLoad) {
                                req.onResourceLoad(context, this.map, this.depMaps);
                            }
                        }

                        //Clean up
                        cleanRegistry(id);

                        this.defined = true;
                    }

                    //Finished the define stage. Allow calling check again
                    //to allow define notifications below in the case of a
                    //cycle.
                    this.defining = false;

                    if (this.defined && !this.defineEmitted) {
                        this.defineEmitted = true;
                        this.emit('defined', this.exports);
                        this.defineEmitComplete = true;
                    }

                }
            },

            callPlugin: function () {
                var map = this.map,
                    id = map.id,
                    //Map already normalized the prefix.
                    pluginMap = makeModuleMap(map.prefix);

                //Mark this as a dependency for this plugin, so it
                //can be traced for cycles.
                this.depMaps.push(pluginMap);

                on(pluginMap, 'defined', bind(this, function (plugin) {
                    var load, normalizedMap, normalizedMod,
                        bundleId = getOwn(bundlesMap, this.map.id),
                        name = this.map.name,
                        parentName = this.map.parentMap ? this.map.parentMap.name : null,
                        localRequire = context.makeRequire(map.parentMap, {
                            enableBuildCallback: true
                        });

                    //If current map is not normalized, wait for that
                    //normalized name to load instead of continuing.
                    if (this.map.unnormalized) {
                        //Normalize the ID if the plugin allows it.
                        if (plugin.normalize) {
                            name = plugin.normalize(name, function (name) {
                                return normalize(name, parentName, true);
                            }) || '';
                        }

                        //prefix and name should already be normalized, no need
                        //for applying map config again either.
                        normalizedMap = makeModuleMap(map.prefix + '!' + name,
                                                      this.map.parentMap);
                        on(normalizedMap,
                            'defined', bind(this, function (value) {
                                this.init([], function () { return value; }, null, {
                                    enabled: true,
                                    ignore: true
                                });
                            }));

                        normalizedMod = getOwn(registry, normalizedMap.id);
                        if (normalizedMod) {
                            //Mark this as a dependency for this plugin, so it
                            //can be traced for cycles.
                            this.depMaps.push(normalizedMap);

                            if (this.events.error) {
                                normalizedMod.on('error', bind(this, function (err) {
                                    this.emit('error', err);
                                }));
                            }
                            normalizedMod.enable();
                        }

                        return;
                    }

                    //If a paths config, then just load that file instead to
                    //resolve the plugin, as it is built into that paths layer.
                    if (bundleId) {
                        this.map.url = context.nameToUrl(bundleId);
                        this.load();
                        return;
                    }

                    load = bind(this, function (value) {
                        this.init([], function () { return value; }, null, {
                            enabled: true
                        });
                    });

                    load.error = bind(this, function (err) {
                        this.inited = true;
                        this.error = err;
                        err.requireModules = [id];

                        //Remove temp unnormalized modules for this module,
                        //since they will never be resolved otherwise now.
                        eachProp(registry, function (mod) {
                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {
                                cleanRegistry(mod.map.id);
                            }
                        });

                        onError(err);
                    });

                    //Allow plugins to load other code without having to know the
                    //context or how to 'complete' the load.
                    load.fromText = bind(this, function (text, textAlt) {
                        /*jslint evil: true */
                        var moduleName = map.name,
                            moduleMap = makeModuleMap(moduleName),
                            hasInteractive = useInteractive;

                        //As of 2.1.0, support just passing the text, to reinforce
                        //fromText only being called once per resource. Still
                        //support old style of passing moduleName but discard
                        //that moduleName in favor of the internal ref.
                        if (textAlt) {
                            text = textAlt;
                        }

                        //Turn off interactive script matching for IE for any define
                        //calls in the text, then turn it back on at the end.
                        if (hasInteractive) {
                            useInteractive = false;
                        }

                        //Prime the system by creating a module instance for
                        //it.
                        getModule(moduleMap);

                        //Transfer any config to this other module.
                        if (hasProp(config.config, id)) {
                            config.config[moduleName] = config.config[id];
                        }

                        try {
                            req.exec(text);
                        } catch (e) {
                            return onError(makeError('fromtexteval',
                                             'fromText eval for ' + id +
                                            ' failed: ' + e,
                                             e,
                                             [id]));
                        }

                        if (hasInteractive) {
                            useInteractive = true;
                        }

                        //Mark this as a dependency for the plugin
                        //resource
                        this.depMaps.push(moduleMap);

                        //Support anonymous modules.
                        context.completeLoad(moduleName);

                        //Bind the value of that module to the value for this
                        //resource ID.
                        localRequire([moduleName], load);
                    });

                    //Use parentName here since the plugin's name is not reliable,
                    //could be some weird string with no path that actually wants to
                    //reference the parentName's path.
                    plugin.load(map.name, localRequire, load, config);
                }));

                context.enable(pluginMap, this);
                this.pluginMaps[pluginMap.id] = pluginMap;
            },

            enable: function () {
                enabledRegistry[this.map.id] = this;
                this.enabled = true;

                //Set flag mentioning that the module is enabling,
                //so that immediate calls to the defined callbacks
                //for dependencies do not trigger inadvertent load
                //with the depCount still being zero.
                this.enabling = true;

                //Enable each dependency
                each(this.depMaps, bind(this, function (depMap, i) {
                    var id, mod, handler;

                    if (typeof depMap === 'string') {
                        //Dependency needs to be converted to a depMap
                        //and wired up to this module.
                        depMap = makeModuleMap(depMap,
                                               (this.map.isDefine ? this.map : this.map.parentMap),
                                               false,
                                               !this.skipMap);
                        this.depMaps[i] = depMap;

                        handler = getOwn(handlers, depMap.id);

                        if (handler) {
                            this.depExports[i] = handler(this);
                            return;
                        }

                        this.depCount += 1;

                        on(depMap, 'defined', bind(this, function (depExports) {
                            this.defineDep(i, depExports);
                            this.check();
                        }));

                        if (this.errback) {
                            on(depMap, 'error', bind(this, this.errback));
                        }
                    }

                    id = depMap.id;
                    mod = registry[id];

                    //Skip special modules like 'require', 'exports', 'module'
                    //Also, don't call enable if it is already enabled,
                    //important in circular dependency cases.
                    if (!hasProp(handlers, id) && mod && !mod.enabled) {
                        context.enable(depMap, this);
                    }
                }));

                //Enable each plugin that is used in
                //a dependency
                eachProp(this.pluginMaps, bind(this, function (pluginMap) {
                    var mod = getOwn(registry, pluginMap.id);
                    if (mod && !mod.enabled) {
                        context.enable(pluginMap, this);
                    }
                }));

                this.enabling = false;

                this.check();
            },

            on: function (name, cb) {
                var cbs = this.events[name];
                if (!cbs) {
                    cbs = this.events[name] = [];
                }
                cbs.push(cb);
            },

            emit: function (name, evt) {
                each(this.events[name], function (cb) {
                    cb(evt);
                });
                if (name === 'error') {
                    //Now that the error handler was triggered, remove
                    //the listeners, since this broken Module instance
                    //can stay around for a while in the registry.
                    delete this.events[name];
                }
            }
        };

        function callGetModule(args) {
            //Skip modules already defined.
            if (!hasProp(defined, args[0])) {
                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);
            }
        }

        function removeListener(node, func, name, ieName) {
            //Favor detachEvent because of IE9
            //issue, see attachEvent/addEventListener comment elsewhere
            //in this file.
            if (node.detachEvent && !isOpera) {
                //Probably IE. If not it will throw an error, which will be
                //useful to know.
                if (ieName) {
                    node.detachEvent(ieName, func);
                }
            } else {
                node.removeEventListener(name, func, false);
            }
        }

        /**
         * Given an event from a script node, get the requirejs info from it,
         * and then removes the event listeners on the node.
         * @param {Event} evt
         * @returns {Object}
         */
        function getScriptData(evt) {
            //Using currentTarget instead of target for Firefox 2.0's sake. Not
            //all old browsers will be supported, but this one was easy enough
            //to support and still makes sense.
            var node = evt.currentTarget || evt.srcElement;

            //Remove the listeners once here.
            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');
            removeListener(node, context.onScriptError, 'error');

            return {
                node: node,
                id: node && node.getAttribute('data-requiremodule')
            };
        }

        function intakeDefines() {
            var args;

            //Any defined modules in the global queue, intake them now.
            takeGlobalQueue();

            //Make sure any remaining defQueue items get properly processed.
            while (defQueue.length) {
                args = defQueue.shift();
                if (args[0] === null) {
                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));
                } else {
                    //args are id, deps, factory. Should be normalized by the
                    //define() function.
                    callGetModule(args);
                }
            }
        }

        context = {
            config: config,
            contextName: contextName,
            registry: registry,
            defined: defined,
            urlFetched: urlFetched,
            defQueue: defQueue,
            Module: Module,
            makeModuleMap: makeModuleMap,
            nextTick: req.nextTick,
            onError: onError,

            /**
             * Set a configuration for the context.
             * @param {Object} cfg config object to integrate.
             */
            configure: function (cfg) {
                //Make sure the baseUrl ends in a slash.
                if (cfg.baseUrl) {
                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {
                        cfg.baseUrl += '/';
                    }
                }

                //Save off the paths since they require special processing,
                //they are additive.
                var shim = config.shim,
                    objs = {
                        paths: true,
                        bundles: true,
                        config: true,
                        map: true
                    };

                eachProp(cfg, function (value, prop) {
                    if (objs[prop]) {
                        if (!config[prop]) {
                            config[prop] = {};
                        }
                        mixin(config[prop], value, true, true);
                    } else {
                        config[prop] = value;
                    }
                });

                //Reverse map the bundles
                if (cfg.bundles) {
                    eachProp(cfg.bundles, function (value, prop) {
                        each(value, function (v) {
                            if (v !== prop) {
                                bundlesMap[v] = prop;
                            }
                        });
                    });
                }

                //Merge shim
                if (cfg.shim) {
                    eachProp(cfg.shim, function (value, id) {
                        //Normalize the structure
                        if (isArray(value)) {
                            value = {
                                deps: value
                            };
                        }
                        if ((value.exports || value.init) && !value.exportsFn) {
                            value.exportsFn = context.makeShimExports(value);
                        }
                        shim[id] = value;
                    });
                    config.shim = shim;
                }

                //Adjust packages if necessary.
                if (cfg.packages) {
                    each(cfg.packages, function (pkgObj) {
                        var location, name;

                        pkgObj = typeof pkgObj === 'string' ? { name: pkgObj } : pkgObj;

                        name = pkgObj.name;
                        location = pkgObj.location;
                        if (location) {
                            config.paths[name] = pkgObj.location;
                        }

                        //Save pointer to main module ID for pkg name.
                        //Remove leading dot in main, so main paths are normalized,
                        //and remove any trailing .js, since different package
                        //envs have different conventions: some use a module name,
                        //some use a file name.
                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')
                                     .replace(currDirRegExp, '')
                                     .replace(jsSuffixRegExp, '');
                    });
                }

                //If there are any "waiting to execute" modules in the registry,
                //update the maps for them, since their info, like URLs to load,
                //may have changed.
                eachProp(registry, function (mod, id) {
                    //If module already has init called, since it is too
                    //late to modify them, and ignore unnormalized ones
                    //since they are transient.
                    if (!mod.inited && !mod.map.unnormalized) {
                        mod.map = makeModuleMap(id);
                    }
                });

                //If a deps array or a config callback is specified, then call
                //require with those args. This is useful when require is defined as a
                //config object before require.js is loaded.
                if (cfg.deps || cfg.callback) {
                    context.require(cfg.deps || [], cfg.callback);
                }
            },

            makeShimExports: function (value) {
                function fn() {
                    var ret;
                    if (value.init) {
                        ret = value.init.apply(global, arguments);
                    }
                    return ret || (value.exports && getGlobal(value.exports));
                }
                return fn;
            },

            makeRequire: function (relMap, options) {
                options = options || {};

                function localRequire(deps, callback, errback) {
                    var id, map, requireMod;

                    if (options.enableBuildCallback && callback && isFunction(callback)) {
                        callback.__requireJsBuild = true;
                    }

                    if (typeof deps === 'string') {
                        if (isFunction(callback)) {
                            //Invalid call
                            return onError(makeError('requireargs', 'Invalid require call'), errback);
                        }

                        //If require|exports|module are requested, get the
                        //value for them from the special handlers. Caveat:
                        //this only works while module is being defined.
                        if (relMap && hasProp(handlers, deps)) {
                            return handlers[deps](registry[relMap.id]);
                        }

                        //Synchronous access to one module. If require.get is
                        //available (as in the Node adapter), prefer that.
                        if (req.get) {
                            return req.get(context, deps, relMap, localRequire);
                        }

                        //Normalize module name, if it contains . or ..
                        map = makeModuleMap(deps, relMap, false, true);
                        id = map.id;

                        if (!hasProp(defined, id)) {
                            return onError(makeError('notloaded', 'Module name "' +
                                        id +
                                        '" has not been loaded yet for context: ' +
                                        contextName +
                                        (relMap ? '' : '. Use require([])')));
                        }
                        return defined[id];
                    }

                    //Grab defines waiting in the global queue.
                    intakeDefines();

                    //Mark all the dependencies as needing to be loaded.
                    context.nextTick(function () {
                        //Some defines could have been added since the
                        //require call, collect them.
                        intakeDefines();

                        requireMod = getModule(makeModuleMap(null, relMap));

                        //Store if map config should be applied to this require
                        //call for dependencies.
                        requireMod.skipMap = options.skipMap;

                        requireMod.init(deps, callback, errback, {
                            enabled: true
                        });

                        checkLoaded();
                    });

                    return localRequire;
                }

                mixin(localRequire, {
                    isBrowser: isBrowser,

                    /**
                     * Converts a module name + .extension into an URL path.
                     * *Requires* the use of a module name. It does not support using
                     * plain URLs like nameToUrl.
                     */
                    toUrl: function (moduleNamePlusExt) {
                        var ext,
                            index = moduleNamePlusExt.lastIndexOf('.'),
                            segment = moduleNamePlusExt.split('/')[0],
                            isRelative = segment === '.' || segment === '..';

                        //Have a file extension alias, and it is not the
                        //dots from a relative path.
                        if (index !== -1 && (!isRelative || index > 1)) {
                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);
                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);
                        }

                        return context.nameToUrl(normalize(moduleNamePlusExt,
                                                relMap && relMap.id, true), ext,  true);
                    },

                    defined: function (id) {
                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);
                    },

                    specified: function (id) {
                        id = makeModuleMap(id, relMap, false, true).id;
                        return hasProp(defined, id) || hasProp(registry, id);
                    }
                });

                //Only allow undef on top level require calls
                if (!relMap) {
                    localRequire.undef = function (id) {
                        //Bind any waiting define() calls to this context,
                        //fix for #408
                        takeGlobalQueue();

                        var map = makeModuleMap(id, relMap, true),
                            mod = getOwn(registry, id);

                        removeScript(id);

                        delete defined[id];
                        delete urlFetched[map.url];
                        delete undefEvents[id];

                        //Clean queued defines too. Go backwards
                        //in array so that the splices do not
                        //mess up the iteration.
                        eachReverse(defQueue, function(args, i) {
                            if(args[0] === id) {
                                defQueue.splice(i, 1);
                            }
                        });

                        if (mod) {
                            //Hold on to listeners in case the
                            //module will be attempted to be reloaded
                            //using a different config.
                            if (mod.events.defined) {
                                undefEvents[id] = mod.events;
                            }

                            cleanRegistry(id);
                        }
                    };
                }

                return localRequire;
            },

            /**
             * Called to enable a module if it is still in the registry
             * awaiting enablement. A second arg, parent, the parent module,
             * is passed in for context, when this method is overridden by
             * the optimizer. Not shown here to keep code compact.
             */
            enable: function (depMap) {
                var mod = getOwn(registry, depMap.id);
                if (mod) {
                    getModule(depMap).enable();
                }
            },

            /**
             * Internal method used by environment adapters to complete a load event.
             * A load event could be a script load or just a load pass from a synchronous
             * load call.
             * @param {String} moduleName the name of the module to potentially complete.
             */
            completeLoad: function (moduleName) {
                var found, args, mod,
                    shim = getOwn(config.shim, moduleName) || {},
                    shExports = shim.exports;

                takeGlobalQueue();

                while (defQueue.length) {
                    args = defQueue.shift();
                    if (args[0] === null) {
                        args[0] = moduleName;
                        //If already found an anonymous module and bound it
                        //to this name, then this is some other anon module
                        //waiting for its completeLoad to fire.
                        if (found) {
                            break;
                        }
                        found = true;
                    } else if (args[0] === moduleName) {
                        //Found matching define call for this script!
                        found = true;
                    }

                    callGetModule(args);
                }

                //Do this after the cycle of callGetModule in case the result
                //of those calls/init calls changes the registry.
                mod = getOwn(registry, moduleName);

                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {
                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {
                        if (hasPathFallback(moduleName)) {
                            return;
                        } else {
                            return onError(makeError('nodefine',
                                             'No define call for ' + moduleName,
                                             null,
                                             [moduleName]));
                        }
                    } else {
                        //A script that does not call define(), so just simulate
                        //the call for it.
                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);
                    }
                }

                checkLoaded();
            },

            /**
             * Converts a module name to a file path. Supports cases where
             * moduleName may actually be just an URL.
             * Note that it **does not** call normalize on the moduleName,
             * it is assumed to have already been normalized. This is an
             * internal API, not a public one. Use toUrl for the public API.
             */
            nameToUrl: function (moduleName, ext, skipExt) {
                var paths, syms, i, parentModule, url,
                    parentPath, bundleId,
                    pkgMain = getOwn(config.pkgs, moduleName);

                if (pkgMain) {
                    moduleName = pkgMain;
                }

                bundleId = getOwn(bundlesMap, moduleName);

                if (bundleId) {
                    return context.nameToUrl(bundleId, ext, skipExt);
                }

                //If a colon is in the URL, it indicates a protocol is used and it is just
                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)
                //or ends with .js, then assume the user meant to use an url and not a module id.
                //The slash is important for protocol-less URLs as well as full paths.
                if (req.jsExtRegExp.test(moduleName)) {
                    //Just a plain path, not module name lookup, so just return it.
                    //Add extension if it is included. This is a bit wonky, only non-.js things pass
                    //an extension, this method probably needs to be reworked.
                    url = moduleName + (ext || '');
                } else {
                    //A module that needs to be converted to a path.
                    paths = config.paths;

                    syms = moduleName.split('/');
                    //For each module name segment, see if there is a path
                    //registered for it. Start with most specific name
                    //and work up from it.
                    for (i = syms.length; i > 0; i -= 1) {
                        parentModule = syms.slice(0, i).join('/');

                        parentPath = getOwn(paths, parentModule);
                        if (parentPath) {
                            //If an array, it means there are a few choices,
                            //Choose the one that is desired
                            if (isArray(parentPath)) {
                                parentPath = parentPath[0];
                            }
                            syms.splice(0, i, parentPath);
                            break;
                        }
                    }

                    //Join the path parts together, then figure out if baseUrl is needed.
                    url = syms.join('/');
                    url += (ext || (/^data\:|\?/.test(url) || skipExt ? '' : '.js'));
                    url = (url.charAt(0) === '/' || url.match(/^[\w\+\.\-]+:/) ? '' : config.baseUrl) + url;
                }

                return config.urlArgs ? url +
                                        ((url.indexOf('?') === -1 ? '?' : '&') +
                                         config.urlArgs) : url;
            },

            //Delegates to req.load. Broken out as a separate function to
            //allow overriding in the optimizer.
            load: function (id, url) {
                req.load(context, id, url);
            },

            /**
             * Executes a module callback function. Broken out as a separate function
             * solely to allow the build system to sequence the files in the built
             * layer in the right sequence.
             *
             * @private
             */
            execCb: function (name, callback, args, exports) {
                return callback.apply(exports, args);
            },

            /**
             * callback for script loads, used to check status of loading.
             *
             * @param {Event} evt the event from the browser for the script
             * that was loaded.
             */
            onScriptLoad: function (evt) {
                //Using currentTarget instead of target for Firefox 2.0's sake. Not
                //all old browsers will be supported, but this one was easy enough
                //to support and still makes sense.
                if (evt.type === 'load' ||
                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {
                    //Reset interactive script so a script node is not held onto for
                    //to long.
                    interactiveScript = null;

                    //Pull out the name of the module and the context.
                    var data = getScriptData(evt);
                    context.completeLoad(data.id);
                }
            },

            /**
             * Callback for script errors.
             */
            onScriptError: function (evt) {
                var data = getScriptData(evt);
                if (!hasPathFallback(data.id)) {
                    return onError(makeError('scripterror', 'Script error for: ' + data.id, evt, [data.id]));
                }
            }
        };

        context.require = context.makeRequire();
        return context;
    }

    /**
     * Main entry point.
     *
     * If the only argument to require is a string, then the module that
     * is represented by that string is fetched for the appropriate context.
     *
     * If the first argument is an array, then it will be treated as an array
     * of dependency string names to fetch. An optional function callback can
     * be specified to execute when all of those dependencies are available.
     *
     * Make a local req variable to help Caja compliance (it assumes things
     * on a require that are not standardized), and to give a short
     * name for minification/local scope use.
     */
    req = requirejs = function (deps, callback, errback, optional) {

        //Find the right context, use default
        var context, config,
            contextName = defContextName;

        // Determine if have config object in the call.
        if (!isArray(deps) && typeof deps !== 'string') {
            // deps is a config object
            config = deps;
            if (isArray(callback)) {
                // Adjust args if there are dependencies
                deps = callback;
                callback = errback;
                errback = optional;
            } else {
                deps = [];
            }
        }

        if (config && config.context) {
            contextName = config.context;
        }

        context = getOwn(contexts, contextName);
        if (!context) {
            context = contexts[contextName] = req.s.newContext(contextName);
        }

        if (config) {
            context.configure(config);
        }

        return context.require(deps, callback, errback);
    };

    /**
     * Support require.config() to make it easier to cooperate with other
     * AMD loaders on globally agreed names.
     */
    req.config = function (config) {
        return req(config);
    };

    /**
     * Execute something after the current tick
     * of the event loop. Override for other envs
     * that have a better solution than setTimeout.
     * @param  {Function} fn function to execute later.
     */
    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {
        setTimeout(fn, 4);
    } : function (fn) { fn(); };

    /**
     * Export require as a global, but only if it does not already exist.
     */
    if (!require) {
        require = req;
    }

    req.version = version;

    //Used to filter out dependencies that are already paths.
    req.jsExtRegExp = /^\/|:|\?|\.js$/;
    req.isBrowser = isBrowser;
    s = req.s = {
        contexts: contexts,
        newContext: newContext
    };

    //Create default context.
    req({});

    //Exports some context-sensitive methods on global require.
    each([
        'toUrl',
        'undef',
        'defined',
        'specified'
    ], function (prop) {
        //Reference from contexts instead of early binding to default context,
        //so that during builds, the latest instance of the default context
        //with its config gets used.
        req[prop] = function () {
            var ctx = contexts[defContextName];
            return ctx.require[prop].apply(ctx, arguments);
        };
    });

    if (isBrowser) {
        head = s.head = document.getElementsByTagName('head')[0];
        //If BASE tag is in play, using appendChild is a problem for IE6.
        //When that browser dies, this can be removed. Details in this jQuery bug:
        //http://dev.jquery.com/ticket/2709
        baseElement = document.getElementsByTagName('base')[0];
        if (baseElement) {
            head = s.head = baseElement.parentNode;
        }
    }

    /**
     * Any errors that require explicitly generates will be passed to this
     * function. Intercept/override it if you want custom error handling.
     * @param {Error} err the error object.
     */
    req.onError = defaultOnError;

    /**
     * Creates the node for the load command. Only used in browser envs.
     */
    req.createNode = function (config, moduleName, url) {
        var node = config.xhtml ?
                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :
                document.createElement('script');
        node.type = config.scriptType || 'text/javascript';
        node.charset = 'utf-8';
        node.async = true;
        return node;
    };

    /**
     * Does the request to load a module for the browser case.
     * Make this a separate function to allow other environments
     * to override it.
     *
     * @param {Object} context the require context to find state.
     * @param {String} moduleName the name of the module.
     * @param {Object} url the URL to the module.
     */
    req.load = function (context, moduleName, url) {
        var config = (context && context.config) || {},
            node;
        if (isBrowser) {
            //In the browser so use a script tag
            node = req.createNode(config, moduleName, url);

            node.setAttribute('data-requirecontext', context.contextName);
            node.setAttribute('data-requiremodule', moduleName);

            //Set up load listener. Test attachEvent first because IE9 has
            //a subtle issue in its addEventListener and script onload firings
            //that do not match the behavior of all other browsers with
            //addEventListener support, which fire the onload event for a
            //script right after the script execution. See:
            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution
            //UNFORTUNATELY Opera implements attachEvent but does not follow the script
            //script execution mode.
            if (node.attachEvent &&
                    //Check if node.attachEvent is artificially added by custom script or
                    //natively supported by browser
                    //read https://github.com/jrburke/requirejs/issues/187
                    //if we can NOT find [native code] then it must NOT natively supported.
                    //in IE8, node.attachEvent does not have toString()
                    //Note the test for "[native code" with no closing brace, see:
                    //https://github.com/jrburke/requirejs/issues/273
                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&
                    !isOpera) {
                //Probably IE. IE (at least 6-8) do not fire
                //script onload right after executing the script, so
                //we cannot tie the anonymous define call to a name.
                //However, IE reports the script as being in 'interactive'
                //readyState at the time of the define call.
                useInteractive = true;

                node.attachEvent('onreadystatechange', context.onScriptLoad);
                //It would be great to add an error handler here to catch
                //404s in IE9+. However, onreadystatechange will fire before
                //the error handler, so that does not help. If addEventListener
                //is used, then IE will fire error before load, but we cannot
                //use that pathway given the connect.microsoft.com issue
                //mentioned above about not doing the 'script execute,
                //then fire the script load event listener before execute
                //next script' that other browsers do.
                //Best hope: IE10 fixes the issues,
                //and then destroys all installs of IE 6-9.
                //node.attachEvent('onerror', context.onScriptError);
            } else {
                node.addEventListener('load', context.onScriptLoad, false);
                node.addEventListener('error', context.onScriptError, false);
            }
            node.src = url;

            //For some cache cases in IE 6-8, the script executes before the end
            //of the appendChild execution, so to tie an anonymous define
            //call to the module name (which is stored on the node), hold on
            //to a reference to this node, but clear after the DOM insertion.
            currentlyAddingScript = node;
            if (baseElement) {
                head.insertBefore(node, baseElement);
            } else {
                head.appendChild(node);
            }
            currentlyAddingScript = null;

            return node;
        } else if (isWebWorker) {
            try {
                //In a web worker, use importScripts. This is not a very
                //efficient use of importScripts, importScripts will block until
                //its script is downloaded and evaluated. However, if web workers
                //are in play, the expectation that a build has been done so that
                //only one script needs to be loaded anyway. This may need to be
                //reevaluated if other use cases become common.
                importScripts(url);

                //Account for anonymous modules
                context.completeLoad(moduleName);
            } catch (e) {
                context.onError(makeError('importscripts',
                                'importScripts failed for ' +
                                    moduleName + ' at ' + url,
                                e,
                                [moduleName]));
            }
        }
    };

    function getInteractiveScript() {
        if (interactiveScript && interactiveScript.readyState === 'interactive') {
            return interactiveScript;
        }

        eachReverse(scripts(), function (script) {
            if (script.readyState === 'interactive') {
                return (interactiveScript = script);
            }
        });
        return interactiveScript;
    }

    //Look for a data-main script attribute, which could also adjust the baseUrl.
    if (isBrowser && !cfg.skipDataMain) {
        //Figure out baseUrl. Get it from the script tag with require.js in it.
        eachReverse(scripts(), function (script) {
            //Set the 'head' where we can append children by
            //using the script's parent.
            if (!head) {
                head = script.parentNode;
            }

            //Look for a data-main attribute to set main script for the page
            //to load. If it is there, the path to data main becomes the
            //baseUrl, if it is not already set.
            dataMain = script.getAttribute('data-main');
            if (dataMain) {
                //Preserve dataMain in case it is a path (i.e. contains '?')
                mainScript = dataMain;

                //Set final baseUrl if there is not already an explicit one.
                if (!cfg.baseUrl) {
                    //Pull off the directory of data-main for use as the
                    //baseUrl.
                    src = mainScript.split('/');
                    mainScript = src.pop();
                    subPath = src.length ? src.join('/')  + '/' : './';

                    cfg.baseUrl = subPath;
                }

                //Strip off any trailing .js since mainScript is now
                //like a module name.
                mainScript = mainScript.replace(jsSuffixRegExp, '');

                 //If mainScript is still a path, fall back to dataMain
                if (req.jsExtRegExp.test(mainScript)) {
                    mainScript = dataMain;
                }

                //Put the data-main script in the files to load.
                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];

                return true;
            }
        });
    }

    /**
     * The function that handles definitions of modules. Differs from
     * require() in that a string for the module should be the first argument,
     * and the function to execute after dependencies are loaded should
     * return a value to define the module corresponding to the first argument's
     * name.
     */
    define = function (name, deps, callback) {
        var node, context;

        //Allow for anonymous modules
        if (typeof name !== 'string') {
            //Adjust args appropriately
            callback = deps;
            deps = name;
            name = null;
        }

        //This module may not have dependencies
        if (!isArray(deps)) {
            callback = deps;
            deps = null;
        }

        //If no name, and callback is a function, then figure out if it a
        //CommonJS thing with dependencies.
        if (!deps && isFunction(callback)) {
            deps = [];
            //Remove comments from the callback string,
            //look for require calls, and pull them into the dependencies,
            //but only if there are function args.
            if (callback.length) {
                callback
                    .toString()
                    .replace(commentRegExp, '')
                    .replace(cjsRequireRegExp, function (match, dep) {
                        deps.push(dep);
                    });

                //May be a CommonJS thing even without require calls, but still
                //could use exports, and module. Avoid doing exports and module
                //work though if it just needs require.
                //REQUIRES the function to expect the CommonJS variables in the
                //order listed below.
                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);
            }
        }

        //If in IE 6-8 and hit an anonymous define() call, do the interactive
        //work.
        if (useInteractive) {
            node = currentlyAddingScript || getInteractiveScript();
            if (node) {
                if (!name) {
                    name = node.getAttribute('data-requiremodule');
                }
                context = contexts[node.getAttribute('data-requirecontext')];
            }
        }

        //Always save off evaluating the def call until the script onload handler.
        //This allows multiple modules to be in a file without prematurely
        //tracing dependencies, and allows for anonymous module support,
        //where the module name is not known until the script onload event
        //occurs. If no context, use the global queue, and get it processed
        //in the onscript load callback.
        (context ? context.defQueue : globalDefQueue).push([name, deps, callback]);
    };

    define.amd = {
        jQuery: true
    };


    /**
     * Executes the text. Normally just uses eval, but can be modified
     * to use a better, environment-specific call. Only used for transpiling
     * loader plugins, not for plain JS modules.
     * @param {String} text the text to execute/evaluate.
     */
    req.exec = function (text) {
        /*jslint evil: true */
        return eval(text);
    };

    //Set up with config info.
    req(cfg);
}(this));

define("node_modules/requirejs/require", function(){});

// wrapper for non-node envs
define ('sax',[], function () {
    var sax = {};
    sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }
    sax.SAXParser = SAXParser
    sax.SAXStream = SAXStream
    sax.createStream = createStream

// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.
// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),
// since that's the earliest that a buffer overrun could occur.  This way, checks are
// as rare as required, but as often as necessary to ensure never crossing this bound.
// Furthermore, buffers are only tested at most once per write(), so passing a very
// large string into write() might have undesirable effects, but this is manageable by
// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme
// edge case, result in creating at most one complete copy of the string passed in.
// Set to Infinity to have unlimited buffers.
    sax.MAX_BUFFER_LENGTH = 64 * 1024

    var buffers = [
        "comment", "sgmlDecl", "textNode", "tagName", "doctype",
        "procInstName", "procInstBody", "entity", "attribName",
        "attribValue", "cdata", "script"
    ]

    sax.EVENTS = // for discoverability.
        [ "text"
            , "processinginstruction"
            , "sgmldeclaration"
            , "doctype"
            , "comment"
            , "attribute"
            , "opentag"
            , "closetag"
            , "opencdata"
            , "cdata"
            , "closecdata"
            , "error"
            , "end"
            , "ready"
            , "script"
            , "opennamespace"
            , "closenamespace"
        ]

    function SAXParser (strict, opt) {
        if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)

        var parser = this
        clearBuffers(parser)
        parser.q = parser.c = ""
        parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH
        parser.opt = opt || {}
        parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags
        parser.looseCase = parser.opt.lowercase ? "toLowerCase" : "toUpperCase"
        parser.tags = []
        parser.closed = parser.closedRoot = parser.sawRoot = false
        parser.tag = parser.error = null
        parser.strict = !!strict
        parser.noscript = !!(strict || parser.opt.noscript)
        parser.state = S.BEGIN
        parser.ENTITIES = Object.create(sax.ENTITIES)
        parser.attribList = []

        // namespaces form a prototype chain.
        // it always points at the current tag,
        // which protos to its parent tag.
        if (parser.opt.xmlns) parser.ns = Object.create(rootNS)

        // mostly just for error reporting
        parser.trackPosition = parser.opt.position !== false
        if (parser.trackPosition) {
            parser.position = parser.line = parser.column = 0
        }
        emit(parser, "onready")
    }

    if (!Object.create) Object.create = function (o) {
        function f () { this.__proto__ = o }
        f.prototype = o
        return new f
    }

    if (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {
        return o.__proto__
    }

    if (!Object.keys) Object.keys = function (o) {
        var a = []
        for (var i in o) if (o.hasOwnProperty(i)) a.push(i)
        return a
    }

    function checkBufferLength (parser) {
        var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)
            , maxActual = 0
        for (var i = 0, l = buffers.length; i < l; i ++) {
            var len = parser[buffers[i]].length
            if (len > maxAllowed) {
                // Text/cdata nodes can get big, and since they're buffered,
                // we can get here under normal conditions.
                // Avoid issues by emitting the text node now,
                // so at least it won't get any bigger.
                switch (buffers[i]) {
                    case "textNode":
                        closeText(parser)
                        break

                    case "cdata":
                        emitNode(parser, "oncdata", parser.cdata)
                        parser.cdata = ""
                        break

                    case "script":
                        emitNode(parser, "onscript", parser.script)
                        parser.script = ""
                        break

                    default:
                        error(parser, "Max buffer length exceeded: "+buffers[i])
                }
            }
            maxActual = Math.max(maxActual, len)
        }
        // schedule the next check for the earliest possible buffer overrun.
        parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)
            + parser.position
    }

    function clearBuffers (parser) {
        for (var i = 0, l = buffers.length; i < l; i ++) {
            parser[buffers[i]] = ""
        }
    }

    function flushBuffers (parser) {
        closeText(parser)
        if (parser.cdata !== "") {
            emitNode(parser, "oncdata", parser.cdata)
            parser.cdata = ""
        }
        if (parser.script !== "") {
            emitNode(parser, "onscript", parser.script)
            parser.script = ""
        }
    }

    SAXParser.prototype =
    { end: function () { end(this) }
        , write: write
        , resume: function () { this.error = null; return this }
        , close: function () { return this.write(null) }
        , flush: function () { flushBuffers(this) }
    }

    try {
        var Stream = require("stream").Stream
    } catch (ex) {
        var Stream = function () {}
    }


    var streamWraps = sax.EVENTS.filter(function (ev) {
        return ev !== "error" && ev !== "end"
    })

    function createStream (strict, opt) {
        return new SAXStream(strict, opt)
    }

    function SAXStream (strict, opt) {
        if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)

        Stream.apply(this)

        this._parser = new SAXParser(strict, opt)
        this.writable = true
        this.readable = true


        var me = this

        this._parser.onend = function () {
            me.emit("end")
        }

        this._parser.onerror = function (er) {
            me.emit("error", er)

            // if didn't throw, then means error was handled.
            // go ahead and clear error, so we can write again.
            me._parser.error = null
        }

        this._decoder = null;

        streamWraps.forEach(function (ev) {
            Object.defineProperty(me, "on" + ev, {
                get: function () { return me._parser["on" + ev] },
                set: function (h) {
                    if (!h) {
                        me.removeAllListeners(ev)
                        return me._parser["on"+ev] = h
                    }
                    me.on(ev, h)
                },
                enumerable: true,
                configurable: false
            })
        })
    }

    SAXStream.prototype = Object.create(Stream.prototype,
        { constructor: { value: SAXStream } })

    SAXStream.prototype.write = function (data) {
        if (typeof Buffer === 'function' &&
            typeof Buffer.isBuffer === 'function' &&
            Buffer.isBuffer(data)) {
            if (!this._decoder) {
                var SD = require('string_decoder').StringDecoder
                this._decoder = new SD('utf8')
            }
            data = this._decoder.write(data);
        }

        this._parser.write(data.toString())
        this.emit("data", data)
        return true
    }

    SAXStream.prototype.end = function (chunk) {
        if (chunk && chunk.length) this.write(chunk)
        this._parser.end()
        return true
    }

    SAXStream.prototype.on = function (ev, handler) {
        var me = this
        if (!me._parser["on"+ev] && streamWraps.indexOf(ev) !== -1) {
            me._parser["on"+ev] = function () {
                var args = arguments.length === 1 ? [arguments[0]]
                    : Array.apply(null, arguments)
                args.splice(0, 0, ev)
                me.emit.apply(me, args)
            }
        }

        return Stream.prototype.on.call(me, ev, handler)
    }



// character classes and tokens
    var whitespace = "\r\n\t "
    // this really needs to be replaced with character classes.
    // XML allows all manner of ridiculous numbers and digits.
        , number = "0124356789"
        , letter = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
    // (Letter | "_" | ":")
        , quote = "'\""
        , entity = number+letter+"#"
        , attribEnd = whitespace + ">"
        , CDATA = "[CDATA["
        , DOCTYPE = "DOCTYPE"
        , XML_NAMESPACE = "http://www.w3.org/XML/1998/namespace"
        , XMLNS_NAMESPACE = "http://www.w3.org/2000/xmlns/"
        , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }

// turn all the string character sets into character class objects.
    whitespace = charClass(whitespace)
    number = charClass(number)
    letter = charClass(letter)

// http://www.w3.org/TR/REC-xml/#NT-NameStartChar
// This implementation works on strings, a single character at a time
// as such, it cannot ever support astral-plane characters (10000-EFFFF)
// without a significant breaking change to either this  parser, or the
// JavaScript language.  Implementation of an emoji-capable xml parser
// is left as an exercise for the reader.
    var nameStart = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/

    var nameBody = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/

    quote = charClass(quote)
    entity = charClass(entity)
    attribEnd = charClass(attribEnd)

    function charClass (str) {
        return str.split("").reduce(function (s, c) {
            s[c] = true
            return s
        }, {})
    }

    function isRegExp (c) {
        return Object.prototype.toString.call(c) === '[object RegExp]'
    }

    function is (charclass, c) {
        return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]
    }

    function not (charclass, c) {
        return !is(charclass, c)
    }

    var S = 0
    sax.STATE =
    { BEGIN                     : S++
        , TEXT                      : S++ // general stuff
        , TEXT_ENTITY               : S++ // &amp and such.
        , OPEN_WAKA                 : S++ // <
        , SGML_DECL                 : S++ // <!BLARG
        , SGML_DECL_QUOTED          : S++ // <!BLARG foo "bar
        , DOCTYPE                   : S++ // <!DOCTYPE
        , DOCTYPE_QUOTED            : S++ // <!DOCTYPE "//blah
        , DOCTYPE_DTD               : S++ // <!DOCTYPE "//blah" [ ...
        , DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE "//blah" [ "foo
        , COMMENT_STARTING          : S++ // <!-
        , COMMENT                   : S++ // <!--
        , COMMENT_ENDING            : S++ // <!-- blah -
        , COMMENT_ENDED             : S++ // <!-- blah --
        , CDATA                     : S++ // <![CDATA[ something
        , CDATA_ENDING              : S++ // ]
        , CDATA_ENDING_2            : S++ // ]]
        , PROC_INST                 : S++ // <?hi
        , PROC_INST_BODY            : S++ // <?hi there
        , PROC_INST_ENDING          : S++ // <?hi "there" ?
        , OPEN_TAG                  : S++ // <strong
        , OPEN_TAG_SLASH            : S++ // <strong /
        , ATTRIB                    : S++ // <a
        , ATTRIB_NAME               : S++ // <a foo
        , ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _
        , ATTRIB_VALUE              : S++ // <a foo=
        , ATTRIB_VALUE_QUOTED       : S++ // <a foo="bar
        , ATTRIB_VALUE_CLOSED       : S++ // <a foo="bar"
        , ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar
        , ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar="&quot;"
        , ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;
        , CLOSE_TAG                 : S++ // </a
        , CLOSE_TAG_SAW_WHITE       : S++ // </a   >
        , SCRIPT                    : S++ // <script> ...
        , SCRIPT_ENDING             : S++ // <script> ... <
    }

    sax.ENTITIES =
    { "amp" : "&"
        , "gt" : ">"
        , "lt" : "<"
        , "quot" : "\""
        , "apos" : "'"
        , "AElig" : 198
        , "Aacute" : 193
        , "Acirc" : 194
        , "Agrave" : 192
        , "Aring" : 197
        , "Atilde" : 195
        , "Auml" : 196
        , "Ccedil" : 199
        , "ETH" : 208
        , "Eacute" : 201
        , "Ecirc" : 202
        , "Egrave" : 200
        , "Euml" : 203
        , "Iacute" : 205
        , "Icirc" : 206
        , "Igrave" : 204
        , "Iuml" : 207
        , "Ntilde" : 209
        , "Oacute" : 211
        , "Ocirc" : 212
        , "Ograve" : 210
        , "Oslash" : 216
        , "Otilde" : 213
        , "Ouml" : 214
        , "THORN" : 222
        , "Uacute" : 218
        , "Ucirc" : 219
        , "Ugrave" : 217
        , "Uuml" : 220
        , "Yacute" : 221
        , "aacute" : 225
        , "acirc" : 226
        , "aelig" : 230
        , "agrave" : 224
        , "aring" : 229
        , "atilde" : 227
        , "auml" : 228
        , "ccedil" : 231
        , "eacute" : 233
        , "ecirc" : 234
        , "egrave" : 232
        , "eth" : 240
        , "euml" : 235
        , "iacute" : 237
        , "icirc" : 238
        , "igrave" : 236
        , "iuml" : 239
        , "ntilde" : 241
        , "oacute" : 243
        , "ocirc" : 244
        , "ograve" : 242
        , "oslash" : 248
        , "otilde" : 245
        , "ouml" : 246
        , "szlig" : 223
        , "thorn" : 254
        , "uacute" : 250
        , "ucirc" : 251
        , "ugrave" : 249
        , "uuml" : 252
        , "yacute" : 253
        , "yuml" : 255
        , "copy" : 169
        , "reg" : 174
        , "nbsp" : 160
        , "iexcl" : 161
        , "cent" : 162
        , "pound" : 163
        , "curren" : 164
        , "yen" : 165
        , "brvbar" : 166
        , "sect" : 167
        , "uml" : 168
        , "ordf" : 170
        , "laquo" : 171
        , "not" : 172
        , "shy" : 173
        , "macr" : 175
        , "deg" : 176
        , "plusmn" : 177
        , "sup1" : 185
        , "sup2" : 178
        , "sup3" : 179
        , "acute" : 180
        , "micro" : 181
        , "para" : 182
        , "middot" : 183
        , "cedil" : 184
        , "ordm" : 186
        , "raquo" : 187
        , "frac14" : 188
        , "frac12" : 189
        , "frac34" : 190
        , "iquest" : 191
        , "times" : 215
        , "divide" : 247
        , "OElig" : 338
        , "oelig" : 339
        , "Scaron" : 352
        , "scaron" : 353
        , "Yuml" : 376
        , "fnof" : 402
        , "circ" : 710
        , "tilde" : 732
        , "Alpha" : 913
        , "Beta" : 914
        , "Gamma" : 915
        , "Delta" : 916
        , "Epsilon" : 917
        , "Zeta" : 918
        , "Eta" : 919
        , "Theta" : 920
        , "Iota" : 921
        , "Kappa" : 922
        , "Lambda" : 923
        , "Mu" : 924
        , "Nu" : 925
        , "Xi" : 926
        , "Omicron" : 927
        , "Pi" : 928
        , "Rho" : 929
        , "Sigma" : 931
        , "Tau" : 932
        , "Upsilon" : 933
        , "Phi" : 934
        , "Chi" : 935
        , "Psi" : 936
        , "Omega" : 937
        , "alpha" : 945
        , "beta" : 946
        , "gamma" : 947
        , "delta" : 948
        , "epsilon" : 949
        , "zeta" : 950
        , "eta" : 951
        , "theta" : 952
        , "iota" : 953
        , "kappa" : 954
        , "lambda" : 955
        , "mu" : 956
        , "nu" : 957
        , "xi" : 958
        , "omicron" : 959
        , "pi" : 960
        , "rho" : 961
        , "sigmaf" : 962
        , "sigma" : 963
        , "tau" : 964
        , "upsilon" : 965
        , "phi" : 966
        , "chi" : 967
        , "psi" : 968
        , "omega" : 969
        , "thetasym" : 977
        , "upsih" : 978
        , "piv" : 982
        , "ensp" : 8194
        , "emsp" : 8195
        , "thinsp" : 8201
        , "zwnj" : 8204
        , "zwj" : 8205
        , "lrm" : 8206
        , "rlm" : 8207
        , "ndash" : 8211
        , "mdash" : 8212
        , "lsquo" : 8216
        , "rsquo" : 8217
        , "sbquo" : 8218
        , "ldquo" : 8220
        , "rdquo" : 8221
        , "bdquo" : 8222
        , "dagger" : 8224
        , "Dagger" : 8225
        , "bull" : 8226
        , "hellip" : 8230
        , "permil" : 8240
        , "prime" : 8242
        , "Prime" : 8243
        , "lsaquo" : 8249
        , "rsaquo" : 8250
        , "oline" : 8254
        , "frasl" : 8260
        , "euro" : 8364
        , "image" : 8465
        , "weierp" : 8472
        , "real" : 8476
        , "trade" : 8482
        , "alefsym" : 8501
        , "larr" : 8592
        , "uarr" : 8593
        , "rarr" : 8594
        , "darr" : 8595
        , "harr" : 8596
        , "crarr" : 8629
        , "lArr" : 8656
        , "uArr" : 8657
        , "rArr" : 8658
        , "dArr" : 8659
        , "hArr" : 8660
        , "forall" : 8704
        , "part" : 8706
        , "exist" : 8707
        , "empty" : 8709
        , "nabla" : 8711
        , "isin" : 8712
        , "notin" : 8713
        , "ni" : 8715
        , "prod" : 8719
        , "sum" : 8721
        , "minus" : 8722
        , "lowast" : 8727
        , "radic" : 8730
        , "prop" : 8733
        , "infin" : 8734
        , "ang" : 8736
        , "and" : 8743
        , "or" : 8744
        , "cap" : 8745
        , "cup" : 8746
        , "int" : 8747
        , "there4" : 8756
        , "sim" : 8764
        , "cong" : 8773
        , "asymp" : 8776
        , "ne" : 8800
        , "equiv" : 8801
        , "le" : 8804
        , "ge" : 8805
        , "sub" : 8834
        , "sup" : 8835
        , "nsub" : 8836
        , "sube" : 8838
        , "supe" : 8839
        , "oplus" : 8853
        , "otimes" : 8855
        , "perp" : 8869
        , "sdot" : 8901
        , "lceil" : 8968
        , "rceil" : 8969
        , "lfloor" : 8970
        , "rfloor" : 8971
        , "lang" : 9001
        , "rang" : 9002
        , "loz" : 9674
        , "spades" : 9824
        , "clubs" : 9827
        , "hearts" : 9829
        , "diams" : 9830
    }

    Object.keys(sax.ENTITIES).forEach(function (key) {
        var e = sax.ENTITIES[key]
        var s = typeof e === 'number' ? String.fromCharCode(e) : e
        sax.ENTITIES[key] = s
    })

    for (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S

// shorthand
    S = sax.STATE

    function emit (parser, event, data) {
        parser[event] && parser[event](data)
    }

    function emitNode (parser, nodeType, data) {
        if (parser.textNode) closeText(parser)
        emit(parser, nodeType, data)
    }

    function closeText (parser) {
        parser.textNode = textopts(parser.opt, parser.textNode)
        if (parser.textNode) emit(parser, "ontext", parser.textNode)
        parser.textNode = ""
    }

    function textopts (opt, text) {
        if (opt.trim) text = text.trim()
        if (opt.normalize) text = text.replace(/\s+/g, " ")
        return text
    }

    function error (parser, er) {
        closeText(parser)
        if (parser.trackPosition) {
            er += "\nLine: "+parser.line+
                "\nColumn: "+parser.column+
                "\nChar: "+parser.c
        }
        er = new Error(er)
        parser.error = er
        emit(parser, "onerror", er)
        return parser
    }

    function end (parser) {
        if (!parser.closedRoot) strictFail(parser, "Unclosed root tag")
        if ((parser.state !== S.BEGIN) && (parser.state !== S.TEXT)) error(parser, "Unexpected end")
        closeText(parser)
        parser.c = ""
        parser.closed = true
        emit(parser, "onend")
        SAXParser.call(parser, parser.strict, parser.opt)
        return parser
    }

    function strictFail (parser, message) {
        if (typeof parser !== 'object' || !(parser instanceof SAXParser))
            throw new Error('bad call to strictFail');
        if (parser.strict) error(parser, message)
    }

    function newTag (parser) {
        if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()
        var parent = parser.tags[parser.tags.length - 1] || parser
            , tag = parser.tag = { name : parser.tagName, attributes : {} }

        // will be overridden if tag contails an xmlns="foo" or xmlns:foo="bar"
        if (parser.opt.xmlns) tag.ns = parent.ns
        parser.attribList.length = 0
    }

    function qname (name, attribute) {
        var i = name.indexOf(":")
            , qualName = i < 0 ? [ "", name ] : name.split(":")
            , prefix = qualName[0]
            , local = qualName[1]

        // <x "xmlns"="http://foo">
        if (attribute && name === "xmlns") {
            prefix = "xmlns"
            local = ""
        }

        return { prefix: prefix, local: local }
    }

    function attrib (parser) {
        if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()

        if (parser.attribList.indexOf(parser.attribName) !== -1 ||
            parser.tag.attributes.hasOwnProperty(parser.attribName)) {
            return parser.attribName = parser.attribValue = ""
        }

        if (parser.opt.xmlns) {
            var qn = qname(parser.attribName, true)
                , prefix = qn.prefix
                , local = qn.local

            if (prefix === "xmlns") {
                // namespace binding attribute; push the binding into scope
                if (local === "xml" && parser.attribValue !== XML_NAMESPACE) {
                    strictFail( parser
                        , "xml: prefix must be bound to " + XML_NAMESPACE + "\n"
                            + "Actual: " + parser.attribValue )
                } else if (local === "xmlns" && parser.attribValue !== XMLNS_NAMESPACE) {
                    strictFail( parser
                        , "xmlns: prefix must be bound to " + XMLNS_NAMESPACE + "\n"
                            + "Actual: " + parser.attribValue )
                } else {
                    var tag = parser.tag
                        , parent = parser.tags[parser.tags.length - 1] || parser
                    if (tag.ns === parent.ns) {
                        tag.ns = Object.create(parent.ns)
                    }
                    tag.ns[local] = parser.attribValue
                }
            }

            // defer onattribute events until all attributes have been seen
            // so any new bindings can take effect; preserve attribute order
            // so deferred events can be emitted in document order
            parser.attribList.push([parser.attribName, parser.attribValue])
        } else {
            // in non-xmlns mode, we can emit the event right away
            parser.tag.attributes[parser.attribName] = parser.attribValue
            emitNode( parser
                , "onattribute"
                , { name: parser.attribName
                    , value: parser.attribValue } )
        }

        parser.attribName = parser.attribValue = ""
    }

    function openTag (parser, selfClosing) {
        if (parser.opt.xmlns) {
            // emit namespace binding events
            var tag = parser.tag

            // add namespace info to tag
            var qn = qname(parser.tagName)
            tag.prefix = qn.prefix
            tag.local = qn.local
            tag.uri = tag.ns[qn.prefix] || ""

            if (tag.prefix && !tag.uri) {
                strictFail(parser, "Unbound namespace prefix: "
                    + JSON.stringify(parser.tagName))
                tag.uri = qn.prefix
            }

            var parent = parser.tags[parser.tags.length - 1] || parser
            if (tag.ns && parent.ns !== tag.ns) {
                Object.keys(tag.ns).forEach(function (p) {
                    emitNode( parser
                        , "onopennamespace"
                        , { prefix: p , uri: tag.ns[p] } )
                })
            }

            // handle deferred onattribute events
            // Note: do not apply default ns to attributes:
            //   http://www.w3.org/TR/REC-xml-names/#defaulting
            for (var i = 0, l = parser.attribList.length; i < l; i ++) {
                var nv = parser.attribList[i]
                var name = nv[0]
                    , value = nv[1]
                    , qualName = qname(name, true)
                    , prefix = qualName.prefix
                    , local = qualName.local
                    , uri = prefix == "" ? "" : (tag.ns[prefix] || "")
                    , a = { name: name
                        , value: value
                        , prefix: prefix
                        , local: local
                        , uri: uri
                    }

                // if there's any attributes with an undefined namespace,
                // then fail on them now.
                if (prefix && prefix != "xmlns" && !uri) {
                    strictFail(parser, "Unbound namespace prefix: "
                        + JSON.stringify(prefix))
                    a.uri = prefix
                }
                parser.tag.attributes[name] = a
                emitNode(parser, "onattribute", a)
            }
            parser.attribList.length = 0
        }

        parser.tag.isSelfClosing = !!selfClosing

        // process the tag
        parser.sawRoot = true
        parser.tags.push(parser.tag)
        emitNode(parser, "onopentag", parser.tag)
        if (!selfClosing) {
            // special case for <script> in non-strict mode.
            if (!parser.noscript && parser.tagName.toLowerCase() === "script") {
                parser.state = S.SCRIPT
            } else {
                parser.state = S.TEXT
            }
            parser.tag = null
            parser.tagName = ""
        }
        parser.attribName = parser.attribValue = ""
        parser.attribList.length = 0
    }

    function closeTag (parser) {
        if (!parser.tagName) {
            strictFail(parser, "Weird empty close tag.")
            parser.textNode += "</>"
            parser.state = S.TEXT
            return
        }

        if (parser.script) {
            if (parser.tagName !== "script") {
                parser.script += "</" + parser.tagName + ">"
                parser.tagName = ""
                parser.state = S.SCRIPT
                return
            }
            emitNode(parser, "onscript", parser.script)
            parser.script = ""
        }

        // first make sure that the closing tag actually exists.
        // <a><b></c></b></a> will close everything, otherwise.
        var t = parser.tags.length
        var tagName = parser.tagName
        if (!parser.strict) tagName = tagName[parser.looseCase]()
        var closeTo = tagName
        while (t --) {
            var close = parser.tags[t]
            if (close.name !== closeTo) {
                // fail the first time in strict mode
                strictFail(parser, "Unexpected close tag")
            } else break
        }

        // didn't find it.  we already failed for strict, so just abort.
        if (t < 0) {
            strictFail(parser, "Unmatched closing tag: "+parser.tagName)
            parser.textNode += "</" + parser.tagName + ">"
            parser.state = S.TEXT
            return
        }
        parser.tagName = tagName
        var s = parser.tags.length
        while (s --> t) {
            var tag = parser.tag = parser.tags.pop()
            parser.tagName = parser.tag.name
            emitNode(parser, "onclosetag", parser.tagName)

            var x = {}
            for (var i in tag.ns) x[i] = tag.ns[i]

            var parent = parser.tags[parser.tags.length - 1] || parser
            if (parser.opt.xmlns && tag.ns !== parent.ns) {
                // remove namespace bindings introduced by tag
                Object.keys(tag.ns).forEach(function (p) {
                    var n = tag.ns[p]
                    emitNode(parser, "onclosenamespace", { prefix: p, uri: n })
                })
            }
        }
        if (t === 0) parser.closedRoot = true
        parser.tagName = parser.attribValue = parser.attribName = ""
        parser.attribList.length = 0
        parser.state = S.TEXT
    }

    function parseEntity (parser) {
        var entity = parser.entity
            , entityLC = entity.toLowerCase()
            , num
            , numStr = ""
        if (parser.ENTITIES[entity])
            return parser.ENTITIES[entity]
        if (parser.ENTITIES[entityLC])
            return parser.ENTITIES[entityLC]
        entity = entityLC
        if (entity.charAt(0) === "#") {
            if (entity.charAt(1) === "x") {
                entity = entity.slice(2)
                num = parseInt(entity, 16)
                numStr = num.toString(16)
            } else {
                entity = entity.slice(1)
                num = parseInt(entity, 10)
                numStr = num.toString(10)
            }
        }
        entity = entity.replace(/^0+/, "")
        if (numStr.toLowerCase() !== entity) {
            strictFail(parser, "Invalid character entity")
            return "&"+parser.entity + ";"
        }

        return String.fromCodePoint(num)
    }

    function write (chunk) {
        var parser = this
        if (this.error) throw this.error
        if (parser.closed) return error(parser,
            "Cannot write after close. Assign an onready handler.")
        if (chunk === null) return end(parser)
        var i = 0, c = ""
        while (parser.c = c = chunk.charAt(i++)) {
            if (parser.trackPosition) {
                parser.position ++
                if (c === "\n") {
                    parser.line ++
                    parser.column = 0
                } else parser.column ++
            }
            switch (parser.state) {

                case S.BEGIN:
                    if (c === "<") {
                        parser.state = S.OPEN_WAKA
                        parser.startTagPosition = parser.position
                    } else if (not(whitespace,c)) {
                        // have to process this as a text node.
                        // weird, but happens.
                        strictFail(parser, "Non-whitespace before first tag.")
                        parser.textNode = c
                        parser.state = S.TEXT
                    }
                    continue

                case S.TEXT:
                    if (parser.sawRoot && !parser.closedRoot) {
                        var starti = i-1
                        while (c && c!=="<" && c!=="&") {
                            c = chunk.charAt(i++)
                            if (c && parser.trackPosition) {
                                parser.position ++
                                if (c === "\n") {
                                    parser.line ++
                                    parser.column = 0
                                } else parser.column ++
                            }
                        }
                        parser.textNode += chunk.substring(starti, i-1)
                    }
                    if (c === "<") {
                        parser.state = S.OPEN_WAKA
                        parser.startTagPosition = parser.position
                    } else {
                        if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))
                            strictFail(parser, "Text data outside of root node.")
                        if (c === "&") parser.state = S.TEXT_ENTITY
                        else parser.textNode += c
                    }
                    continue

                case S.SCRIPT:
                    // only non-strict
                    if (c === "<") {
                        parser.state = S.SCRIPT_ENDING
                    } else parser.script += c
                    continue

                case S.SCRIPT_ENDING:
                    if (c === "/") {
                        parser.state = S.CLOSE_TAG
                    } else {
                        parser.script += "<" + c
                        parser.state = S.SCRIPT
                    }
                    continue

                case S.OPEN_WAKA:
                    // either a /, ?, !, or text is coming next.
                    if (c === "!") {
                        parser.state = S.SGML_DECL
                        parser.sgmlDecl = ""
                    } else if (is(whitespace, c)) {
                        // wait for it...
                    } else if (is(nameStart,c)) {
                        parser.state = S.OPEN_TAG
                        parser.tagName = c
                    } else if (c === "/") {
                        parser.state = S.CLOSE_TAG
                        parser.tagName = ""
                    } else if (c === "?") {
                        parser.state = S.PROC_INST
                        parser.procInstName = parser.procInstBody = ""
                    } else {
                        strictFail(parser, "Unencoded <")
                        // if there was some whitespace, then add that in.
                        if (parser.startTagPosition + 1 < parser.position) {
                            var pad = parser.position - parser.startTagPosition
                            c = new Array(pad).join(" ") + c
                        }
                        parser.textNode += "<" + c
                        parser.state = S.TEXT
                    }
                    continue

                case S.SGML_DECL:
                    if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {
                        emitNode(parser, "onopencdata")
                        parser.state = S.CDATA
                        parser.sgmlDecl = ""
                        parser.cdata = ""
                    } else if (parser.sgmlDecl+c === "--") {
                        parser.state = S.COMMENT
                        parser.comment = ""
                        parser.sgmlDecl = ""
                    } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {
                        parser.state = S.DOCTYPE
                        if (parser.doctype || parser.sawRoot) strictFail(parser,
                            "Inappropriately located doctype declaration")
                        parser.doctype = ""
                        parser.sgmlDecl = ""
                    } else if (c === ">") {
                        emitNode(parser, "onsgmldeclaration", parser.sgmlDecl)
                        parser.sgmlDecl = ""
                        parser.state = S.TEXT
                    } else if (is(quote, c)) {
                        parser.state = S.SGML_DECL_QUOTED
                        parser.sgmlDecl += c
                    } else parser.sgmlDecl += c
                    continue

                case S.SGML_DECL_QUOTED:
                    if (c === parser.q) {
                        parser.state = S.SGML_DECL
                        parser.q = ""
                    }
                    parser.sgmlDecl += c
                    continue

                case S.DOCTYPE:
                    if (c === ">") {
                        parser.state = S.TEXT
                        emitNode(parser, "ondoctype", parser.doctype)
                        parser.doctype = true // just remember that we saw it.
                    } else {
                        parser.doctype += c
                        if (c === "[") parser.state = S.DOCTYPE_DTD
                        else if (is(quote, c)) {
                            parser.state = S.DOCTYPE_QUOTED
                            parser.q = c
                        }
                    }
                    continue

                case S.DOCTYPE_QUOTED:
                    parser.doctype += c
                    if (c === parser.q) {
                        parser.q = ""
                        parser.state = S.DOCTYPE
                    }
                    continue

                case S.DOCTYPE_DTD:
                    parser.doctype += c
                    if (c === "]") parser.state = S.DOCTYPE
                    else if (is(quote,c)) {
                        parser.state = S.DOCTYPE_DTD_QUOTED
                        parser.q = c
                    }
                    continue

                case S.DOCTYPE_DTD_QUOTED:
                    parser.doctype += c
                    if (c === parser.q) {
                        parser.state = S.DOCTYPE_DTD
                        parser.q = ""
                    }
                    continue

                case S.COMMENT:
                    if (c === "-") parser.state = S.COMMENT_ENDING
                    else parser.comment += c
                    continue

                case S.COMMENT_ENDING:
                    if (c === "-") {
                        parser.state = S.COMMENT_ENDED
                        parser.comment = textopts(parser.opt, parser.comment)
                        if (parser.comment) emitNode(parser, "oncomment", parser.comment)
                        parser.comment = ""
                    } else {
                        parser.comment += "-" + c
                        parser.state = S.COMMENT
                    }
                    continue

                case S.COMMENT_ENDED:
                    if (c !== ">") {
                        strictFail(parser, "Malformed comment")
                        // allow <!-- blah -- bloo --> in non-strict mode,
                        // which is a comment of " blah -- bloo "
                        parser.comment += "--" + c
                        parser.state = S.COMMENT
                    } else parser.state = S.TEXT
                    continue

                case S.CDATA:
                    if (c === "]") parser.state = S.CDATA_ENDING
                    else parser.cdata += c
                    continue

                case S.CDATA_ENDING:
                    if (c === "]") parser.state = S.CDATA_ENDING_2
                    else {
                        parser.cdata += "]" + c
                        parser.state = S.CDATA
                    }
                    continue

                case S.CDATA_ENDING_2:
                    if (c === ">") {
                        if (parser.cdata) emitNode(parser, "oncdata", parser.cdata)
                        emitNode(parser, "onclosecdata")
                        parser.cdata = ""
                        parser.state = S.TEXT
                    } else if (c === "]") {
                        parser.cdata += "]"
                    } else {
                        parser.cdata += "]]" + c
                        parser.state = S.CDATA
                    }
                    continue

                case S.PROC_INST:
                    if (c === "?") parser.state = S.PROC_INST_ENDING
                    else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY
                    else parser.procInstName += c
                    continue

                case S.PROC_INST_BODY:
                    if (!parser.procInstBody && is(whitespace, c)) continue
                    else if (c === "?") parser.state = S.PROC_INST_ENDING
                    else parser.procInstBody += c
                    continue

                case S.PROC_INST_ENDING:
                    if (c === ">") {
                        emitNode(parser, "onprocessinginstruction", {
                            name : parser.procInstName,
                            body : parser.procInstBody
                        })
                        parser.procInstName = parser.procInstBody = ""
                        parser.state = S.TEXT
                    } else {
                        parser.procInstBody += "?" + c
                        parser.state = S.PROC_INST_BODY
                    }
                    continue

                case S.OPEN_TAG:
                    if (is(nameBody, c)) parser.tagName += c
                    else {
                        newTag(parser)
                        if (c === ">") openTag(parser)
                        else if (c === "/") parser.state = S.OPEN_TAG_SLASH
                        else {
                            if (not(whitespace, c)) strictFail(
                                parser, "Invalid character in tag name")
                            parser.state = S.ATTRIB
                        }
                    }
                    continue

                case S.OPEN_TAG_SLASH:
                    if (c === ">") {
                        openTag(parser, true)
                        closeTag(parser)
                    } else {
                        strictFail(parser, "Forward-slash in opening tag not followed by >")
                        parser.state = S.ATTRIB
                    }
                    continue

                case S.ATTRIB:
                    // haven't read the attribute name yet.
                    if (is(whitespace, c)) continue
                    else if (c === ">") openTag(parser)
                    else if (c === "/") parser.state = S.OPEN_TAG_SLASH
                    else if (is(nameStart, c)) {
                        parser.attribName = c
                        parser.attribValue = ""
                        parser.state = S.ATTRIB_NAME
                    } else strictFail(parser, "Invalid attribute name")
                    continue

                case S.ATTRIB_NAME:
                    if (c === "=") parser.state = S.ATTRIB_VALUE
                    else if (c === ">") {
                        strictFail(parser, "Attribute without value")
                        parser.attribValue = parser.attribName
                        attrib(parser)
                        openTag(parser)
                    }
                    else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE
                    else if (is(nameBody, c)) parser.attribName += c
                    else strictFail(parser, "Invalid attribute name")
                    continue

                case S.ATTRIB_NAME_SAW_WHITE:
                    if (c === "=") parser.state = S.ATTRIB_VALUE
                    else if (is(whitespace, c)) continue
                    else {
                        strictFail(parser, "Attribute without value")
                        parser.tag.attributes[parser.attribName] = ""
                        parser.attribValue = ""
                        emitNode(parser, "onattribute",
                            { name : parser.attribName, value : "" })
                        parser.attribName = ""
                        if (c === ">") openTag(parser)
                        else if (is(nameStart, c)) {
                            parser.attribName = c
                            parser.state = S.ATTRIB_NAME
                        } else {
                            strictFail(parser, "Invalid attribute name")
                            parser.state = S.ATTRIB
                        }
                    }
                    continue

                case S.ATTRIB_VALUE:
                    if (is(whitespace, c)) continue
                    else if (is(quote, c)) {
                        parser.q = c
                        parser.state = S.ATTRIB_VALUE_QUOTED
                    } else {
                        strictFail(parser, "Unquoted attribute value")
                        parser.state = S.ATTRIB_VALUE_UNQUOTED
                        parser.attribValue = c
                    }
                    continue

                case S.ATTRIB_VALUE_QUOTED:
                    if (c !== parser.q) {
                        if (c === "&") parser.state = S.ATTRIB_VALUE_ENTITY_Q
                        else parser.attribValue += c
                        continue
                    }
                    attrib(parser)
                    parser.q = ""
                    parser.state = S.ATTRIB_VALUE_CLOSED
                    continue

                case S.ATTRIB_VALUE_CLOSED:
                    if (is(whitespace, c)) {
                        parser.state = S.ATTRIB
                    } else if (c === ">") openTag(parser)
                    else if (c === "/") parser.state = S.OPEN_TAG_SLASH
                    else if (is(nameStart, c)) {
                        strictFail(parser, "No whitespace between attributes")
                        parser.attribName = c
                        parser.attribValue = ""
                        parser.state = S.ATTRIB_NAME
                    } else strictFail(parser, "Invalid attribute name")
                    continue

                case S.ATTRIB_VALUE_UNQUOTED:
                    if (not(attribEnd,c)) {
                        if (c === "&") parser.state = S.ATTRIB_VALUE_ENTITY_U
                        else parser.attribValue += c
                        continue
                    }
                    attrib(parser)
                    if (c === ">") openTag(parser)
                    else parser.state = S.ATTRIB
                    continue

                case S.CLOSE_TAG:
                    if (!parser.tagName) {
                        if (is(whitespace, c)) continue
                        else if (not(nameStart, c)) {
                            if (parser.script) {
                                parser.script += "</" + c
                                parser.state = S.SCRIPT
                            } else {
                                strictFail(parser, "Invalid tagname in closing tag.")
                            }
                        } else parser.tagName = c
                    }
                    else if (c === ">") closeTag(parser)
                    else if (is(nameBody, c)) parser.tagName += c
                    else if (parser.script) {
                        parser.script += "</" + parser.tagName
                        parser.tagName = ""
                        parser.state = S.SCRIPT
                    } else {
                        if (not(whitespace, c)) strictFail(parser,
                            "Invalid tagname in closing tag")
                        parser.state = S.CLOSE_TAG_SAW_WHITE
                    }
                    continue

                case S.CLOSE_TAG_SAW_WHITE:
                    if (is(whitespace, c)) continue
                    if (c === ">") closeTag(parser)
                    else strictFail(parser, "Invalid characters in closing tag")
                    continue

                case S.TEXT_ENTITY:
                case S.ATTRIB_VALUE_ENTITY_Q:
                case S.ATTRIB_VALUE_ENTITY_U:
                    switch(parser.state) {
                        case S.TEXT_ENTITY:
                            var returnState = S.TEXT, buffer = "textNode"
                            break

                        case S.ATTRIB_VALUE_ENTITY_Q:
                            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = "attribValue"
                            break

                        case S.ATTRIB_VALUE_ENTITY_U:
                            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = "attribValue"
                            break
                    }
                    if (c === ";") {
                        parser[buffer] += parseEntity(parser)
                        parser.entity = ""
                        parser.state = returnState
                    }
                    else if (is(entity, c)) parser.entity += c
                    else {
                        strictFail(parser, "Invalid character entity")
                        parser[buffer] += "&" + parser.entity + c
                        parser.entity = ""
                        parser.state = returnState
                    }
                    continue

                default:
                    throw new Error(parser, "Unknown state: " + parser.state)
            }
        } // while
        // cdata blocks can get very big under normal conditions. emit and move on.
        // if (parser.state === S.CDATA && parser.cdata) {
        //   emitNode(parser, "oncdata", parser.cdata)
        //   parser.cdata = ""
        // }
        if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)
        return parser
    }

    /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
    if (!String.fromCodePoint) {
        (function() {
            var stringFromCharCode = String.fromCharCode;
            var floor = Math.floor;
            var fromCodePoint = function() {
                var MAX_SIZE = 0x4000;
                var codeUnits = [];
                var highSurrogate;
                var lowSurrogate;
                var index = -1;
                var length = arguments.length;
                if (!length) {
                    return '';
                }
                var result = '';
                while (++index < length) {
                    var codePoint = Number(arguments[index]);
                    if (
                        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
                        codePoint < 0 || // not a valid Unicode code point
                        codePoint > 0x10FFFF || // not a valid Unicode code point
                        floor(codePoint) != codePoint // not an integer
                        ) {
                        throw RangeError('Invalid code point: ' + codePoint);
                    }
                    if (codePoint <= 0xFFFF) { // BMP code point
                        codeUnits.push(codePoint);
                    } else { // Astral code point; split in surrogate halves
                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
                        codePoint -= 0x10000;
                        highSurrogate = (codePoint >> 10) + 0xD800;
                        lowSurrogate = (codePoint % 0x400) + 0xDC00;
                        codeUnits.push(highSurrogate, lowSurrogate);
                    }
                    if (index + 1 == length || codeUnits.length > MAX_SIZE) {
                        result += stringFromCharCode.apply(null, codeUnits);
                        codeUnits.length = 0;
                    }
                }
                return result;
            };
            if (Object.defineProperty) {
                Object.defineProperty(String, 'fromCodePoint', {
                    'value': fromCodePoint,
                    'configurable': true,
                    'writable': true
                });
            } else {
                String.fromCodePoint = fromCodePoint;
            }
        }());
    }

    return sax;
});
/*
 * Copyright (C) 2014 Vanderbilt University, All rights reserved.
 *
 * Author: Patrik Meijer
 *
 * Converter from XML to Json using sax parser. See the doc of constructor for info on how to use.
 */

define('xmljsonconverter',['sax'], function (sax) {
    

    /**
     * XML2JSON converter, when instantiated invoke convert(xmlString) to get the corresponding JavaScript object.
     * @param {object} options - optional options.
     * @param {object} options.arrayElements - Dictionary where keys evaluated to true are treated as arrays in the
     *  generated javascript object. If not provided these will be inferred by number of occurrences of the elements.
     * @param {string} options.attrTag - will be prepended to attributes keys, default "@".
     * @param {string} options.textTag - the key values for text items, default "#text".
     * @param {boolean} options.skipWSText - if true then text made up of only white-space (including \n, \r, etc.)
     *  will not be generated as text-items in the javascript object, default false.
     * @constructor
     */
    var XML2JSON = function (options) {
        var self = this,
            opts = options || {},
            attrTag = opts.attrTag,
            textTag = opts.textTag || '#text',
            skipWS = opts.skipWSText;
        if (attrTag === undefined) {
            attrTag = '@';
        }
        self.rootNode = {};
        self.stack = [];
        self.nsStack = [];
        self.parser = sax.parser(true);
        // TODO make this configurable
        self.nsMap = {
            "http://www.w3.org/2001/XMLSchema-instance": "xsi",
            "http://www.w3.org/2001/XMLSchema": "xsd",
            };

        self.parser.ontext = function (text) {
            if (self.stack.length > 0) {
                if (skipWS) {
                    if (text.replace(/\s+?/g, '')) {
                        self.stack[self.stack.length - 1][textTag] = text;
                    }
                } else {
                    self.stack[self.stack.length - 1][textTag] = text;
                }
            }
        };

        function mapNamespace(ns, value) {
            var colon = value.indexOf(':');
            if (colon === -1) {
                return value;
            }
            var namespace = value.substr(0, colon);
            if (namespace in ns) {
                return (self.nsMap[ns[namespace]] || ns[namespace]) + ':' + value.substr(colon + 1);
            }
            return value;
        };
        self.parser.onopentag = function (node) {
            var key,
                i,
                parentNode,
                node_name,
                jsonNode = {};

            var ns = {};
            for (key in node.attributes) {
                if (node.attributes.hasOwnProperty(key)) {
                    if (key.substr(0, 6) === 'xmlns:') {
                        ns[key.substr('xmlns:'.length)] = node.attributes[key];
                    }
                    if (key === 'xmlns') {
                        ns[''] = node.attributes['xmlns'];
                    }
                }
            }
            if (Object.getOwnPropertyNames(ns).length === 0) {
                if (self.nsStack.length > 0) {
                    ns = self.nsStack[self.nsStack.length - 1];
                }
                self.nsStack.push(ns);
            } else {
                for (i = self.nsStack.length - 1; i >= 0; i--) {
                    for (key in self.nsStack[i]) {
                        if (!ns.hasOwnProperty(key) && self.nsStack[i].hasOwnProperty(key)) {
                            ns[key] = self.nsStack[i][key];
                        }
                    }
                }
                self.nsStack.push(ns);
            }
            node_name = mapNamespace(ns, node.name);
            if (self.stack.length === 0) {
                self.rootNode[node_name] = jsonNode;
            } else {
                parentNode = self.stack[self.stack.length - 1];
                if (opts.arrayElements) {
                    self.arrayElements = opts.arrayElements;
                    if (self.arrayElements[node_name]) {
                        if (parentNode.hasOwnProperty(node_name)) {
                            parentNode[node_name].push(jsonNode);
                        } else {
                            parentNode[node_name] = [jsonNode];
                        }
                    } else {
                        parentNode[node_name] = jsonNode;
                    }
                } else {
                    if (parentNode.hasOwnProperty(node_name)) {
                        if (parentNode[node_name] instanceof Array) {
                            parentNode[node_name].push(jsonNode);
                        } else {
                            parentNode[node_name] = [parentNode[node_name], jsonNode];
                        }
                    } else {
                        parentNode[node_name] = jsonNode;
                    }
                }
            }
            self.stack.push(jsonNode);
            for (key in node.attributes) {
                if (node.attributes.hasOwnProperty(key)) {
                    var namespaceKey = mapNamespace(ns, key);
                    if (namespaceKey === "xsi:type") {
                        // the attribute value should be mapped too
                        jsonNode[attrTag + namespaceKey] = mapNamespace(ns, node.attributes[key]);
                    } else {
                        jsonNode[attrTag + namespaceKey] = node.attributes[key];
                    }
                }
            }
        };

        self.parser.onclosetag = function (node) {
            self.stack.pop();
            self.nsStack.pop();
        };

        self.parser.onerror = function (error) {
            self.rootNode = error;
            self.parser.error = null;
        };
    };

    /**
     * Converts the xml in the given string to a javascript object. For bigger xmls use convertFromBuffer instead.
     * @param {string} xmlString - xml string representation to convert.
     * @returns {object|Error} - Javascript object inferred from the xml, Error object if failed.
     */
    XML2JSON.prototype.convertFromString = function (xmlString) {
        this.rootNode = {};
        this.stack = [];
        this.parser.write(xmlString).close();
        return this.rootNode;
    };

    /**
     * Converts the xml to a javascript object (JSON).
     * @param xmlBuffer {ArrayBuffer} - xml to convert.
     * @param options {object} - optional options.
     * @param options.segmentSize {int} - length of string segments, default 10000.
     * @param options.encoding {TypedArray constructor} - encoding of the ArrayBuffer, default Uint8Array.
     * @returns {object|Error} - Javascript object inferred from the xml, Error object if failed.
     */
    XML2JSON.prototype.convertFromBuffer = function (xmlBuffer, options) {
        var opts = options || {},
            segmentSize = opts.segmentSize || 10000,
            encode = opts.encoding || Uint8Array,
            data = new encode(xmlBuffer),
            dataSegment,
            nbrOfIterations = Math.ceil(data.length / segmentSize),
            startIndex = 0,
            i;
        this.rootNode = {};
        this.stack = [];
        for (i = 0; i < nbrOfIterations; i += 1) {
            dataSegment = data.subarray(startIndex, startIndex + segmentSize);
            startIndex += segmentSize;
            if (i < nbrOfIterations - 1) {
                this.parser.write(String.fromCharCode.apply(null, dataSegment));
            } else {
                this.parser.write(String.fromCharCode.apply(null, dataSegment)).close();
            }
        }
        return this.rootNode;
    };

    /**
     * XML2JSON converter, when instantiated invoke convert(xmlString) to get the corresponding JavaScript object.
     * @param {object} options - optional options.
     * @param {string} options.attrTag - keys with this will be treated as attributes, default "@".
     * @param {string} options.textTag - the key values for text items, default "#text".
     * @param {string} options.xmlDeclaration - the xmlDeclaration, default "<?xml version="1.0"?>".
     * @constructor
     */
    var JSON2XML = function (options) {
        var opts = options || {},
            attrTag = opts.attrTag,
            textTag = opts.textTag || '#text',
            xmlDeclaration = opts.xmlDeclaration || '<?xml version="1.0"?>';
        if (attrTag === undefined) {
            attrTag = '@';
        }
        this.attrTag = attrTag;
        this.attrTagIndex = this.attrTag.length;
        this.textTag = textTag;
        this.xmlDeclaration = xmlDeclaration;
    };

    JSON2XML.prototype._convertToStringRec = function (key, value) {
        var subKeys,
            elemTag = '',
            i,
            content = '';
        if (value instanceof Array) {
            for (i = 0; i < value.length; i += 1) {
                content += this._convertToStringRec(key, value[i]);
            }
            return content;
        }
        if (value instanceof Object) {
            subKeys = Object.keys(value);
            for (i = 0; i < subKeys.length; i += 1) {
                if (value[subKeys[i]] instanceof Object) {
                    content += this._convertToStringRec(subKeys[i], value[subKeys[i]]);
                } else {
                    if (subKeys[i].slice(0, this.attrTag.length) === this.attrTag) {
                        if (value[subKeys[i]] === null) {
                            elemTag += ' ' + subKeys[i].substr(this.attrTagIndex) + '=""';
                        } else {
                            elemTag += ' ' + subKeys[i].substr(this.attrTagIndex) + '="' + value[subKeys[i]].toString() + '"';
                        }
                    } else if (subKeys[i] === this.textTag) {
                        content += value[subKeys[i]].toString();
                    } else {
                        content += this._convertToStringRec(subKeys[i], value[subKeys[i]]);
                    }
                }
            }
        } else if (value) {
            content += '<' + value.toString() + '></' + value.toString() + '>';
        }

        if (content) {
            return '<' + key + elemTag + '>' + content + '</' + key + '>';
        }

        return '<' + key + elemTag + '/>';
    };

    JSON2XML.prototype.convertToString = function (jsonObj) {
        var keys = Object.keys(jsonObj),
            i;
        this.xml = this.xmlDeclaration;
        for (i = 0; i < keys.length; i += 1) {
            this.xml += this._convertToStringRec(keys[i], jsonObj[keys[i]]);
        }
        return this.xml;
    };

    return {
        Xml2json: XML2JSON,
        Json2xml: JSON2XML
    };
});
;(function(){

/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module._resolving && !module.exports) {
    var mod = {};
    mod.exports = {};
    mod.client = mod.component = true;
    module._resolving = true;
    module.call(this, mod.exports, require.relative(resolved), mod);
    delete module._resolving;
    module.exports = mod.exports;
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("component-emitter/index.js", function(exports, require, module){

/**
 * Expose `Emitter`.
 */

module.exports = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  var self = this;
  this._callbacks = this._callbacks || {};

  function on() {
    self.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks[event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks[event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks[event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks[event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

});
require.register("component-reduce/index.js", function(exports, require, module){

/**
 * Reduce `arr` with `fn`.
 *
 * @param {Array} arr
 * @param {Function} fn
 * @param {Mixed} initial
 *
 * TODO: combatible error handling?
 */

module.exports = function(arr, fn, initial){  
  var idx = 0;
  var len = arr.length;
  var curr = arguments.length == 3
    ? initial
    : arr[idx++];

  while (idx < len) {
    curr = fn.call(null, curr, arr[idx], ++idx, arr);
  }
  
  return curr;
};
});
require.register("superagent/lib/client.js", function(exports, require, module){
/**
 * Module dependencies.
 */

var Emitter = require('emitter');
var reduce = require('reduce');

/**
 * Root reference for iframes.
 */

var root = 'undefined' == typeof window
  ? this
  : window;

/**
 * Noop.
 */

function noop(){};

/**
 * Check if `obj` is a host object,
 * we don't want to serialize these :)
 *
 * TODO: future proof, move to compoent land
 *
 * @param {Object} obj
 * @return {Boolean}
 * @api private
 */

function isHost(obj) {
  var str = {}.toString.call(obj);

  switch (str) {
    case '[object File]':
    case '[object Blob]':
    case '[object FormData]':
      return true;
    default:
      return false;
  }
}

/**
 * Determine XHR.
 */

function getXHR() {
  if (root.XMLHttpRequest
    && ('file:' != root.location.protocol || !root.ActiveXObject)) {
    return new XMLHttpRequest;
  } else {
    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}
    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}
    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}
    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}
  }
  return false;
}

/**
 * Removes leading and trailing whitespace, added to support IE.
 *
 * @param {String} s
 * @return {String}
 * @api private
 */

var trim = ''.trim
  ? function(s) { return s.trim(); }
  : function(s) { return s.replace(/(^\s*|\s*$)/g, ''); };

/**
 * Check if `obj` is an object.
 *
 * @param {Object} obj
 * @return {Boolean}
 * @api private
 */

function isObject(obj) {
  return obj === Object(obj);
}

/**
 * Serialize the given `obj`.
 *
 * @param {Object} obj
 * @return {String}
 * @api private
 */

function serialize(obj) {
  if (!isObject(obj)) return obj;
  var pairs = [];
  for (var key in obj) {
    if (null != obj[key]) {
      pairs.push(encodeURIComponent(key)
        + '=' + encodeURIComponent(obj[key]));
    }
  }
  return pairs.join('&');
}

/**
 * Expose serialization method.
 */

 request.serializeObject = serialize;

 /**
  * Parse the given x-www-form-urlencoded `str`.
  *
  * @param {String} str
  * @return {Object}
  * @api private
  */

function parseString(str) {
  var obj = {};
  var pairs = str.split('&');
  var parts;
  var pair;

  for (var i = 0, len = pairs.length; i < len; ++i) {
    pair = pairs[i];
    parts = pair.split('=');
    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);
  }

  return obj;
}

/**
 * Expose parser.
 */

request.parseString = parseString;

/**
 * Default MIME type map.
 *
 *     superagent.types.xml = 'application/xml';
 *
 */

request.types = {
  html: 'text/html',
  json: 'application/json',
  xml: 'application/xml',
  urlencoded: 'application/x-www-form-urlencoded',
  'form': 'application/x-www-form-urlencoded',
  'form-data': 'application/x-www-form-urlencoded'
};

/**
 * Default serialization map.
 *
 *     superagent.serialize['application/xml'] = function(obj){
 *       return 'generated xml here';
 *     };
 *
 */

 request.serialize = {
   'application/x-www-form-urlencoded': serialize,
   'application/json': JSON.stringify
 };

 /**
  * Default parsers.
  *
  *     superagent.parse['application/xml'] = function(str){
  *       return { object parsed from str };
  *     };
  *
  */

request.parse = {
  'application/x-www-form-urlencoded': parseString,
  'application/json': JSON.parse
};

/**
 * Parse the given header `str` into
 * an object containing the mapped fields.
 *
 * @param {String} str
 * @return {Object}
 * @api private
 */

function parseHeader(str) {
  var lines = str.split(/\r?\n/);
  var fields = {};
  var index;
  var line;
  var field;
  var val;

  lines.pop(); // trailing CRLF

  for (var i = 0, len = lines.length; i < len; ++i) {
    line = lines[i];
    index = line.indexOf(':');
    field = line.slice(0, index).toLowerCase();
    val = trim(line.slice(index + 1));
    fields[field] = val;
  }

  return fields;
}

/**
 * Return the mime type for the given `str`.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

function type(str){
  return str.split(/ *; */).shift();
};

/**
 * Return header field parameters.
 *
 * @param {String} str
 * @return {Object}
 * @api private
 */

function params(str){
  return reduce(str.split(/ *; */), function(obj, str){
    var parts = str.split(/ *= */)
      , key = parts.shift()
      , val = parts.shift();

    if (key && val) obj[key] = val;
    return obj;
  }, {});
};

/**
 * Initialize a new `Response` with the given `xhr`.
 *
 *  - set flags (.ok, .error, etc)
 *  - parse header
 *
 * Examples:
 *
 *  Aliasing `superagent` as `request` is nice:
 *
 *      request = superagent;
 *
 *  We can use the promise-like API, or pass callbacks:
 *
 *      request.get('/').end(function(res){});
 *      request.get('/', function(res){});
 *
 *  Sending data can be chained:
 *
 *      request
 *        .post('/user')
 *        .send({ name: 'tj' })
 *        .end(function(res){});
 *
 *  Or passed to `.send()`:
 *
 *      request
 *        .post('/user')
 *        .send({ name: 'tj' }, function(res){});
 *
 *  Or passed to `.post()`:
 *
 *      request
 *        .post('/user', { name: 'tj' })
 *        .end(function(res){});
 *
 * Or further reduced to a single call for simple cases:
 *
 *      request
 *        .post('/user', { name: 'tj' }, function(res){});
 *
 * @param {XMLHTTPRequest} xhr
 * @param {Object} options
 * @api private
 */

function Response(req, options) {
  options = options || {};
  this.req = req;
  this.xhr = this.req.xhr;
  this.text = this.xhr.responseText;
  this.setStatusProperties(this.xhr.status);
  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
  // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but
  // getResponseHeader still works. so we get content-type even if getting
  // other headers fails.
  this.header['content-type'] = this.xhr.getResponseHeader('content-type');
  this.setHeaderProperties(this.header);
  this.body = this.req.method != 'HEAD'
    ? this.parseBody(this.text)
    : null;
}

/**
 * Get case-insensitive `field` value.
 *
 * @param {String} field
 * @return {String}
 * @api public
 */

Response.prototype.get = function(field){
  return this.header[field.toLowerCase()];
};

/**
 * Set header related properties:
 *
 *   - `.type` the content type without params
 *
 * A response of "Content-Type: text/plain; charset=utf-8"
 * will provide you with a `.type` of "text/plain".
 *
 * @param {Object} header
 * @api private
 */

Response.prototype.setHeaderProperties = function(header){
  // content-type
  var ct = this.header['content-type'] || '';
  this.type = type(ct);

  // params
  var obj = params(ct);
  for (var key in obj) this[key] = obj[key];
};

/**
 * Parse the given body `str`.
 *
 * Used for auto-parsing of bodies. Parsers
 * are defined on the `superagent.parse` object.
 *
 * @param {String} str
 * @return {Mixed}
 * @api private
 */

Response.prototype.parseBody = function(str){
  var parse = request.parse[this.type];
  return parse
    ? parse(str)
    : null;
};

/**
 * Set flags such as `.ok` based on `status`.
 *
 * For example a 2xx response will give you a `.ok` of __true__
 * whereas 5xx will be __false__ and `.error` will be __true__. The
 * `.clientError` and `.serverError` are also available to be more
 * specific, and `.statusType` is the class of error ranging from 1..5
 * sometimes useful for mapping respond colors etc.
 *
 * "sugar" properties are also defined for common cases. Currently providing:
 *
 *   - .noContent
 *   - .badRequest
 *   - .unauthorized
 *   - .notAcceptable
 *   - .notFound
 *
 * @param {Number} status
 * @api private
 */

Response.prototype.setStatusProperties = function(status){
  var type = status / 100 | 0;

  // status / class
  this.status = status;
  this.statusType = type;

  // basics
  this.info = 1 == type;
  this.ok = 2 == type;
  this.clientError = 4 == type;
  this.serverError = 5 == type;
  this.error = (4 == type || 5 == type)
    ? this.toError()
    : false;

  // sugar
  this.accepted = 202 == status;
  this.noContent = 204 == status || 1223 == status;
  this.badRequest = 400 == status;
  this.unauthorized = 401 == status;
  this.notAcceptable = 406 == status;
  this.notFound = 404 == status;
  this.forbidden = 403 == status;
};

/**
 * Return an `Error` representative of this response.
 *
 * @return {Error}
 * @api public
 */

Response.prototype.toError = function(){
  var req = this.req;
  var method = req.method;
  var url = req.url;

  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
  var err = new Error(msg);
  err.status = this.status;
  err.method = method;
  err.url = url;

  return err;
};

/**
 * Expose `Response`.
 */

request.Response = Response;

/**
 * Initialize a new `Request` with the given `method` and `url`.
 *
 * @param {String} method
 * @param {String} url
 * @api public
 */

function Request(method, url) {
  var self = this;
  Emitter.call(this);
  this._query = this._query || [];
  this.method = method;
  this.url = url;
  this.header = {};
  this._header = {};
  this.on('end', function(){
    var res = new Response(self);
    if ('HEAD' == method) res.text = null;
    self.callback(null, res);
  });
}

/**
 * Mixin `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Allow for extension
 */

Request.prototype.use = function(fn) {
  fn(this);
  return this;
}

/**
 * Set timeout to `ms`.
 *
 * @param {Number} ms
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.timeout = function(ms){
  this._timeout = ms;
  return this;
};

/**
 * Clear previous timeout.
 *
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.clearTimeout = function(){
  this._timeout = 0;
  clearTimeout(this._timer);
  return this;
};

/**
 * Abort the request, and clear potential timeout.
 *
 * @return {Request}
 * @api public
 */

Request.prototype.abort = function(){
  if (this.aborted) return;
  this.aborted = true;
  this.xhr.abort();
  this.clearTimeout();
  this.emit('abort');
  return this;
};

/**
 * Set header `field` to `val`, or multiple fields with one object.
 *
 * Examples:
 *
 *      req.get('/')
 *        .set('Accept', 'application/json')
 *        .set('X-API-Key', 'foobar')
 *        .end(callback);
 *
 *      req.get('/')
 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
 *        .end(callback);
 *
 * @param {String|Object} field
 * @param {String} val
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.set = function(field, val){
  if (isObject(field)) {
    for (var key in field) {
      this.set(key, field[key]);
    }
    return this;
  }
  this._header[field.toLowerCase()] = val;
  this.header[field] = val;
  return this;
};

/**
 * Get case-insensitive header `field` value.
 *
 * @param {String} field
 * @return {String}
 * @api private
 */

Request.prototype.getHeader = function(field){
  return this._header[field.toLowerCase()];
};

/**
 * Set Content-Type to `type`, mapping values from `request.types`.
 *
 * Examples:
 *
 *      superagent.types.xml = 'application/xml';
 *
 *      request.post('/')
 *        .type('xml')
 *        .send(xmlstring)
 *        .end(callback);
 *
 *      request.post('/')
 *        .type('application/xml')
 *        .send(xmlstring)
 *        .end(callback);
 *
 * @param {String} type
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.type = function(type){
  this.set('Content-Type', request.types[type] || type);
  return this;
};

/**
 * Set Accept to `type`, mapping values from `request.types`.
 *
 * Examples:
 *
 *      superagent.types.json = 'application/json';
 *
 *      request.get('/agent')
 *        .accept('json')
 *        .end(callback);
 *
 *      request.get('/agent')
 *        .accept('application/json')
 *        .end(callback);
 *
 * @param {String} accept
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.accept = function(type){
  this.set('Accept', request.types[type] || type);
  return this;
};

/**
 * Set Authorization field value with `user` and `pass`.
 *
 * @param {String} user
 * @param {String} pass
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.auth = function(user, pass){
  var str = btoa(user + ':' + pass);
  this.set('Authorization', 'Basic ' + str);
  return this;
};

/**
* Add query-string `val`.
*
* Examples:
*
*   request.get('/shoes')
*     .query('size=10')
*     .query({ color: 'blue' })
*
* @param {Object|String} val
* @return {Request} for chaining
* @api public
*/

Request.prototype.query = function(val){
  if ('string' != typeof val) val = serialize(val);
  if (val) this._query.push(val);
  return this;
};

/**
 * Write the field `name` and `val` for "multipart/form-data"
 * request bodies.
 *
 * ``` js
 * request.post('/upload')
 *   .field('foo', 'bar')
 *   .end(callback);
 * ```
 *
 * @param {String} name
 * @param {String|Blob|File} val
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.field = function(name, val){
  if (!this._formData) this._formData = new FormData();
  this._formData.append(name, val);
  return this;
};

/**
 * Queue the given `file` as an attachment to the specified `field`,
 * with optional `filename`.
 *
 * ``` js
 * request.post('/upload')
 *   .attach(new Blob(['<a id="a"><b id="b">hey!</b></a>'], { type: "text/html"}))
 *   .end(callback);
 * ```
 *
 * @param {String} field
 * @param {Blob|File} file
 * @param {String} filename
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.attach = function(field, file, filename){
  if (!this._formData) this._formData = new FormData();
  this._formData.append(field, file, filename);
  return this;
};

/**
 * Send `data`, defaulting the `.type()` to "json" when
 * an object is given.
 *
 * Examples:
 *
 *       // querystring
 *       request.get('/search')
 *         .end(callback)
 *
 *       // multiple data "writes"
 *       request.get('/search')
 *         .send({ search: 'query' })
 *         .send({ range: '1..5' })
 *         .send({ order: 'desc' })
 *         .end(callback)
 *
 *       // manual json
 *       request.post('/user')
 *         .type('json')
 *         .send('{"name":"tj"})
 *         .end(callback)
 *
 *       // auto json
 *       request.post('/user')
 *         .send({ name: 'tj' })
 *         .end(callback)
 *
 *       // manual x-www-form-urlencoded
 *       request.post('/user')
 *         .type('form')
 *         .send('name=tj')
 *         .end(callback)
 *
 *       // auto x-www-form-urlencoded
 *       request.post('/user')
 *         .type('form')
 *         .send({ name: 'tj' })
 *         .end(callback)
 *
 *       // defaults to x-www-form-urlencoded
  *      request.post('/user')
  *        .send('name=tobi')
  *        .send('species=ferret')
  *        .end(callback)
 *
 * @param {String|Object} data
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.send = function(data){
  var obj = isObject(data);
  var type = this.getHeader('Content-Type');

  // merge
  if (obj && isObject(this._data)) {
    for (var key in data) {
      this._data[key] = data[key];
    }
  } else if ('string' == typeof data) {
    if (!type) this.type('form');
    type = this.getHeader('Content-Type');
    if ('application/x-www-form-urlencoded' == type) {
      this._data = this._data
        ? this._data + '&' + data
        : data;
    } else {
      this._data = (this._data || '') + data;
    }
  } else {
    this._data = data;
  }

  if (!obj) return this;
  if (!type) this.type('json');
  return this;
};

/**
 * Invoke the callback with `err` and `res`
 * and handle arity check.
 *
 * @param {Error} err
 * @param {Response} res
 * @api private
 */

Request.prototype.callback = function(err, res){
  var fn = this._callback;
  if (2 == fn.length) return fn(err, res);
  if (err) return this.emit('error', err);
  fn(res);
};

/**
 * Invoke callback with x-domain error.
 *
 * @api private
 */

Request.prototype.crossDomainError = function(){
  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');
  err.crossDomain = true;
  this.callback(err);
};

/**
 * Invoke callback with timeout error.
 *
 * @api private
 */

Request.prototype.timeoutError = function(){
  var timeout = this._timeout;
  var err = new Error('timeout of ' + timeout + 'ms exceeded');
  err.timeout = timeout;
  this.callback(err);
};

/**
 * Enable transmission of cookies with x-domain requests.
 *
 * Note that for this to work the origin must not be
 * using "Access-Control-Allow-Origin" with a wildcard,
 * and also must set "Access-Control-Allow-Credentials"
 * to "true".
 *
 * @api public
 */

Request.prototype.withCredentials = function(){
  this._withCredentials = true;
  return this;
};

/**
 * Initiate request, invoking callback `fn(res)`
 * with an instanceof `Response`.
 *
 * @param {Function} fn
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.end = function(fn){
  var self = this;
  var xhr = this.xhr = getXHR();
  var query = this._query.join('&');
  var timeout = this._timeout;
  var data = this._formData || this._data;

  // store callback
  this._callback = fn || noop;

  // state change
  xhr.onreadystatechange = function(){
    if (4 != xhr.readyState) return;
    if (0 == xhr.status) {
      if (self.aborted) return self.timeoutError();
      return self.crossDomainError();
    }
    self.emit('end');
  };

  // progress
  if (xhr.upload) {
    xhr.upload.onprogress = function(e){
      e.percent = e.loaded / e.total * 100;
      self.emit('progress', e);
    };
  }

  // timeout
  if (timeout && !this._timer) {
    this._timer = setTimeout(function(){
      self.abort();
    }, timeout);
  }

  // querystring
  if (query) {
    query = request.serializeObject(query);
    this.url += ~this.url.indexOf('?')
      ? '&' + query
      : '?' + query;
  }

  // initiate request
  xhr.open(this.method, this.url, true);

  // CORS
  if (this._withCredentials) xhr.withCredentials = true;

  // body
  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {
    // serialize stuff
    var serialize = request.serialize[this.getHeader('Content-Type')];
    if (serialize) data = serialize(data);
  }

  // set header fields
  for (var field in this.header) {
    if (null == this.header[field]) continue;
    xhr.setRequestHeader(field, this.header[field]);
  }

  // send stuff
  this.emit('request', this);
  xhr.send(data);
  return this;
};

/**
 * Expose `Request`.
 */

request.Request = Request;

/**
 * Issue a request:
 *
 * Examples:
 *
 *    request('GET', '/users').end(callback)
 *    request('/users').end(callback)
 *    request('/users', callback)
 *
 * @param {String} method
 * @param {String|Function} url or callback
 * @return {Request}
 * @api public
 */

function request(method, url) {
  // callback
  if ('function' == typeof url) {
    return new Request('GET', method).end(url);
  }

  // url first
  if (1 == arguments.length) {
    return new Request('GET', method);
  }

  return new Request(method, url);
}

/**
 * GET `url` with optional callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed|Function} data or fn
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.get = function(url, data, fn){
  var req = request('GET', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.query(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * HEAD `url` with optional callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed|Function} data or fn
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.head = function(url, data, fn){
  var req = request('HEAD', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * DELETE `url` with optional callback `fn(res)`.
 *
 * @param {String} url
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.del = function(url, fn){
  var req = request('DELETE', url);
  if (fn) req.end(fn);
  return req;
};

/**
 * PATCH `url` with optional `data` and callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed} data
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.patch = function(url, data, fn){
  var req = request('PATCH', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * POST `url` with optional `data` and callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed} data
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.post = function(url, data, fn){
  var req = request('POST', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * PUT `url` with optional `data` and callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed|Function} data or fn
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.put = function(url, data, fn){
  var req = request('PUT', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * Expose `request`.
 */

module.exports = request;

});




require.alias("component-emitter/index.js", "superagent/deps/emitter/index.js");
require.alias("component-emitter/index.js", "emitter/index.js");

require.alias("component-reduce/index.js", "superagent/deps/reduce/index.js");
require.alias("component-reduce/index.js", "reduce/index.js");

require.alias("superagent/lib/client.js", "superagent/index.js");if (typeof exports == "object") {
  module.exports = require("superagent");
} else if (typeof define == "function" && define.amd) {
  define('superagent',[], function(){ return require("superagent"); });
} else {
  this["superagent"] = require("superagent");
}})();
/**
 * Created by Zsolt on 5/21/2014.
 * 
 * THIS IS A THROW AWAY CODE AND IMPLEMENTATION.
 *
 * TEMPORARY CODE AND IMPLEMENTATION.
 *
 */


define('executor/ExecutorClient',['superagent'], function (superagent) {

    var ExecutorClient = function (parameters) {
        this.isNodeJS = (typeof window === 'undefined') && (typeof process === "object");
        this.isNodeWebkit = (typeof window === 'object') && (typeof process === "object");

        //console.log(isNode);
        if (this.isNodeJS) {
            var config = webGMEGlobal.getConfig();
            this.server = '127.0.0.1';
            this.serverPort = config.port;
            this.httpsecure = config.httpsecure;

            this._clientSession = null; // parameters.sessionId;;
        }
        if (parameters) {
            this.server = parameters.server || this.server;
            this.serverPort = parameters.serverPort || this.serverPort;
            this.httpsecure = (parameters.httpsecure !== undefined) ? parameters.httpsecure : this.httpsecure;
        }
        if (this.isNodeJS) {
            this.http = this.httpsecure ? require('https') : require('http');
        }
        this.executorUrl = '';
        if (this.httpsecure !== undefined && this.server && this.serverPort) {
            this.executorUrl = (this.httpsecure ? 'https://' : 'http://') + this.server + ':' + this.serverPort;
        }
        // TODO: TOKEN???
        this.executorUrl = this.executorUrl + '/rest/external/executor/'; // TODO: any ways to ask for this or get it from the configuration?

    };

    ExecutorClient.prototype.getInfoURL = function (hash) {
        var metadataBase = this.executorUrl + 'info';
        if (hash) {
            return metadataBase + '/' + hash;
        } else {
            return metadataBase;
        }
    };


    ExecutorClient.prototype.getCreateURL = function (hash) {
        var metadataBase = this.executorUrl + 'create';
        if (hash) {
            return metadataBase + '/' + hash;
        } else {
            return metadataBase;
        }
    };

    ExecutorClient.prototype.createJob = function (jobInfo, callback) {
        if (typeof jobInfo === 'string') {
            jobInfo = { hash: jobInfo }; // old API
        }
        this.sendHttpRequestWithData('POST', this.getCreateURL(jobInfo.hash), jobInfo, function (err, response) {
            if (err) {
                callback(err);
                return;
            }

            callback(null, JSON.parse(response));
        });
    };

    ExecutorClient.prototype.updateJob = function (jobInfo, callback) {
        this.sendHttpRequestWithData('POST', this.executorUrl + 'update/' + jobInfo.hash, jobInfo, function (err, response) {
            if (err) {
                callback(err);
                return;
            }

            callback(null, response);
        });
    };

    ExecutorClient.prototype.getInfo = function (hash, callback) {
        this.sendHttpRequest('GET', this.getInfoURL(hash), function (err, response) {
            if (err) {
                callback(err);
                return;
            }

            callback(null, JSON.parse(response));
        });
    };

    ExecutorClient.prototype.getAllInfo = function (callback) {

        this.sendHttpRequest('GET', this.getInfoURL(), function (err, response) {
            if (err) {
                callback(err);
                return;
            }

            callback(null, JSON.parse(response));
        });
    };

    ExecutorClient.prototype.getInfoByStatus = function (status, callback) {

        this.sendHttpRequest('GET', this.executorUrl + '?status=' + status, function (err, response) {
            if (err) {
                callback(err);
                return;
            }

            callback(null, JSON.parse(response));
        });
    };

    ExecutorClient.prototype.getWorkersInfo = function (callback) {

        this.sendHttpRequest('GET', this.executorUrl + 'worker', function (err, response) {
            if (err) {
                callback(err);
                return;
            }

            callback(null, JSON.parse(response));
        });
    };

    ExecutorClient.prototype.sendHttpRequest = function (method, url, callback) {
        return this.sendHttpRequestWithData(method, url, null, callback);
    };

    ExecutorClient.prototype.sendHttpRequestWithData = function (method, url, data, callback) {
        var req = new superagent.Request(method, url);
        if (data) {
            req.send(data);
        }
        req.end(function (err, res) {
            if (err) {
                callback(err);
                return;
            }
            if (res.status > 399) {
                callback(res.status, res.text);
            } else {
                callback(null, res.text);
            }
        });
    };

    ExecutorClient.prototype._ensureAuthenticated = function (options, callback) {
        //this function enables the session of the client to be authenticated
        //TODO currently this user does not have a session, so it has to upgrade the options always!!!
//        if (options.headers) {
//            options.headers.webgmeclientsession = this._clientSession;
//        } else {
//            options.headers = {
//                'webgmeclientsession': this._clientSession
//            }
//        }
        callback(null, options);
    };

    return ExecutorClient;
});
/*
 * Copyright (C) 2014 Vanderbilt University, All rights reserved.
 *
 * Author: Zsolt Lattmann
 */


define('plugin/PluginConfig',[], function () {

    /**
     * Initializes a new instance of plugin configuration.
     *
     * Note: this object is JSON serializable see serialize method.
     *
     * @param config - deserializes an existing configuration to this object.
     * @constructor
     */
    var PluginConfig = function (config) {
        if (config) {
            var keys = Object.keys(config);
            for (var i = 0; i < keys.length; i += 1) {
                // TODO: check for type on deserialization
                this[keys[i]] = config[keys[i]];
            }
        }
    };

    /**
     * Serializes this object to a JSON representation.
     *
     * @returns {{}}
     */
    PluginConfig.prototype.serialize = function () {
        var keys = Object.keys(this);
        var result = {};

        for (var i = 0; i < keys.length; i += 1) {
            // TODO: check for type on serialization
            result[keys[i]] = this[keys[i]];
        }

        return result;
    };


    return PluginConfig;
});
/*
 * Copyright (C) 2014 Vanderbilt University, All rights reserved.
 *
 * Author: Zsolt Lattmann
 */


define('plugin/PluginNodeDescription',[], function () {

    /**
     * Initializes a new instance of plugin node description object.
     *
     * Note: this object is JSON serializable see serialize method.
     *
     * @param config - deserializes an existing configuration to this object.
     * @constructor
     */
    var PluginNodeDescription = function (config) {
        if (config) {
            this.name = config.name;
            this.id = config.id;
        } else {
            this.name = '';
            this.id = '';
        }
    };

    /**
     * Serializes this object to a JSON representation.
     *
     * @returns {{}}
     */
    PluginNodeDescription.prototype.serialize = function() {
        var keys = Object.keys(this);
        var result = {};

        for (var i = 0; i < keys.length; i += 1) {
            // TODO: check for type on serialization
            result[keys[i]] = this[keys[i]];
        }

        return result;
    };

    return PluginNodeDescription;
});
/*
 * Copyright (C) 2014 Vanderbilt University, All rights reserved.
 *
 * Author: Zsolt Lattmann
 */


define('plugin/PluginMessage',['plugin/PluginNodeDescription'], function (PluginNodeDescription) {

    /**
     * Initializes a new instance of plugin message.
     *
     * Note: this object is JSON serializable see serialize method.
     *
     * @param config - deserializes an existing configuration to this object.
     * @constructor
     */
    var PluginMessage = function (config) {
        if (config) {
            this.commitHash = config.commitHash;
            if (config.activeNode instanceof PluginNodeDescription) {
                this.activeNode = config.activeNode;
            } else {
                this.activeNode = new PluginNodeDescription(config.activeNode);
            }

            this.message = config.message;
            if (config.severity) {
                this.severity = config.severity;
            } else {
                this.severity = 'info';
            }
        } else {
            this.commitHash = '';
            this.activeNode = new PluginNodeDescription();
            this.message = '';
            this.severity = 'info';
        }
    };

    /**
     * Serializes this object to a JSON representation.
     *
     * @returns {{}}
     */
    PluginMessage.prototype.serialize = function () {
        var result = {
            commitHash: this.commitHash,
            activeNode: this.activeNode.serialize(),
            message: this.message,
            severity: this.severity
        };

        return result;
    };

    return PluginMessage;
});
/**
 * Created by zsolt on 3/20/14.
 */


define('plugin/PluginResult',['plugin/PluginMessage'], function (PluginMessage) {

    /**
     * Initializes a new instance of a plugin result object.
     *
     * Note: this object is JSON serializable see serialize method.
     *
     * @param config - deserializes an existing configuration to this object.
     * @constructor
     */
    var PluginResult = function (config) {
        if (config) {
            this.success = config.success;
            this.pluginName = config.pluginName;
            this.startTime = config.startTime;
            this.finishTime = config.finishTime;
            this.messages = [];
            this.artifacts = config.artifacts;
            this.error = config.error;

            for (var i = 0; i < config.messages.length; i += 1) {
                var pluginMessage;
                if (config.messages[i] instanceof PluginMessage) {
                    pluginMessage = config.messages[i];
                } else {
                    pluginMessage = new PluginMessage(config.messages[i]);
                }
                this.messages.push(pluginMessage);
            }
        } else {
            this.success = false;
            this.messages = []; // array of PluginMessages
            this.artifacts = []; // array of hashes
            this.pluginName = 'PluginName N/A';
            this.startTime = null;
            this.finishTime = null;
            this.error = null;
        }
    };

    /**
     * Gets the success flag of this result object
     *
     * @returns {boolean}
     */
    PluginResult.prototype.getSuccess = function () {
        return this.success;
    };

    /**
     * Sets the success flag of this result.
     *
     * @param {boolean} value
     */
    PluginResult.prototype.setSuccess = function (value) {
        this.success = value;
    };

    /**
     * Returns with the plugin messages.
     *
     * @returns {plugin.PluginMessage[]}
     */
    PluginResult.prototype.getMessages = function () {
        return this.messages;
    };

    /**
     * Adds a new plugin message to the messages list.
     *
     * @param {plugin.PluginMessage} pluginMessage
     */
    PluginResult.prototype.addMessage = function (pluginMessage) {
        this.messages.push(pluginMessage);
    };

    PluginResult.prototype.getArtifacts = function () {
        return this.artifacts;
    };

    PluginResult.prototype.addArtifact = function (hash) {
        this.artifacts.push(hash);
    };

    /**
     * Gets the name of the plugin to which the result object belongs to.
     *
     * @returns {string}
     */
    PluginResult.prototype.getPluginName = function () {
        return this.pluginName;
    };

    //------------------------------------------------------------------------------------------------------------------
    //--------------- Methods used by the plugin manager

    /**
     * Sets the name of the plugin to which the result object belongs to.
     *
     * @param pluginName - name of the plugin
     */
    PluginResult.prototype.setPluginName = function (pluginName) {
        this.pluginName = pluginName;
    };

    /**
     * Gets the ISO 8601 representation of the time when the plugin started its execution.
     *
     * @returns {string}
     */
    PluginResult.prototype.getStartTime = function () {
        return this.startTime;
    };

    /**
     * Sets the ISO 8601 representation of the time when the plugin started its execution.
     *
     * @param {string} time
     */
    PluginResult.prototype.setStartTime = function (time) {
        this.startTime = time;
    };

    /**
     * Gets the ISO 8601 representation of the time when the plugin finished its execution.
     *
     * @returns {string}
     */
    PluginResult.prototype.getFinishTime = function () {
        return this.finishTime;
    };

    /**
     * Sets the ISO 8601 representation of the time when the plugin finished its execution.
     *
     * @param {string} time
     */
    PluginResult.prototype.setFinishTime = function (time) {
        this.finishTime = time;
    };

    /**
     * Gets error if any error occured during execution.
     * FIXME: should this be an Error object?
     * @returns {string}
     */
    PluginResult.prototype.getError = function () {
        return this.error;
    };

    /**
     * Sets the error string if any error occured during execution.
     * FIXME: should this be an Error object?
     * @param {string} time
     */
    PluginResult.prototype.setError = function (error) {
        this.error = error;
    };

    /**
     * Serializes this object to a JSON representation.
     *
     * @returns {{success: boolean, messages: plugin.PluginMessage[], pluginName: string, finishTime: stirng}}
     */
    PluginResult.prototype.serialize = function () {
        var result = {
            success: this.success,
            messages: [],
            artifacts: this.artifacts,
            pluginName: this.pluginName,
            startTime: this.startTime,
            finishTime: this.finishTime,
            error: this.error
        };

        for (var i = 0; i < this.messages.length; i += 1) {
            result.messages.push(this.messages[i].serialize());
        }

        return result;
    };

    return PluginResult;
});
/*
 * Copyright (C) 2014 Vanderbilt University, All rights reserved.
 *
 * Author: Zsolt Lattmann
 */


define('plugin/PluginBase',['plugin/PluginConfig',
    'plugin/PluginResult',
    'plugin/PluginMessage',
    'plugin/PluginNodeDescription'],
    function (PluginConfig, PluginResult, PluginMessage, PluginNodeDescription) {


        /**
         * Initializes a new instance of a plugin object, which should be a derived class.
         *
         * @constructor
         */
        var PluginBase = function () {
            // set by initialize
            this.logger = null;
            this.blobClient = null;
            this._currentConfig = null;

            // set by configure
            this.core = null;
            this.project = null;
            this.projectName = null;
            this.branchName = null;
            this.branchHash = null;
            this.commitHash = null;
            this.currentHash = null;
            this.rootNode = null;
            this.activeNode = null;
            this.activeSelection = [];
            this.META = null;

            this.result = null;
            this.isConfigured = false;
        };

        //--------------------------------------------------------------------------------------------------------------
        //---------- Methods must be overridden by the derived classes

        /**
         * Main function for the plugin to execute. This will perform the execution.
         * Notes:
         * - do NOT use console.log use this.logger.[error,warning,info,debug] instead
         * - do NOT put any user interaction logic UI, etc. inside this function
         * - callback always have to be called even if error happened
         *
         * @param {function(string, plugin.PluginResult)} callback - the result callback
         */
        PluginBase.prototype.main = function (callback) {
            throw new Error('implement this function in the derived class');
        };

        /**
         * Readable name of this plugin that can contain spaces.
         *
         * @returns {string}
         */
        PluginBase.prototype.getName = function () {
            throw new Error('implement this function in the derived class - getting type automatically is a bad idea,' +
                'when the js scripts are minified names are useless.');
        };

        //--------------------------------------------------------------------------------------------------------------
        //---------- Methods could be overridden by the derived classes

        /**
         * Current version of this plugin using semantic versioning.
         * @returns {string}
         */
        PluginBase.prototype.getVersion = function () {
            return '0.1.0';
        };

        /**
         * A detailed description of this plugin and its purpose. It can be one or more sentences.
         *
         * @returns {string}
         */
        PluginBase.prototype.getDescription = function () {
            return '';
        };

        /**
         * Configuration structure with names, descriptions, minimum, maximum values, default values and
         * type definitions.
         *
         * Example:
         *
         * [{
         *    "name": "logChildrenNames",
         *    "displayName": "Log Children Names",
         *    "description": '',
         *    "value": true, // this is the 'default config'
         *    "valueType": "boolean",
         *    "readOnly": false
         * },{
         *    "name": "logLevel",
         *    "displayName": "Logger level",
         *    "description": '',
         *    "value": "info",
         *    "valueType": "string",
         *    "valueItems": [
         *          "debug",
         *          "info",
         *          "warn",
         *          "error"
         *      ],
         *    "readOnly": false
         * },{
         *    "name": "maxChildrenToLog",
         *    "displayName": "Maximum children to log",
         *    "description": 'Set this parameter to blabla',
         *    "value": 4,
         *    "minValue": 1,
         *    "valueType": "number",
         *    "readOnly": false
         * }]
         *
         * @returns {object[]}
         */
        PluginBase.prototype.getConfigStructure = function () {
            return [];
        };

        //--------------------------------------------------------------------------------------------------------------
        //---------- Methods that can be used by the derived classes

        /**
         * Updates the current success flag with a new value.
         *
         * NewValue = OldValue && Value
         *
         * @param {boolean} value - apply this flag on current success value
         * @param {string|null} message - optional detailed message
         */
        PluginBase.prototype.updateSuccess = function (value, message) {
            var prevSuccess = this.result.getSuccess();
            var newSuccessValue = prevSuccess && value;

            this.result.setSuccess(newSuccessValue);
            var msg = '';
            if (message) {
                msg = ' - ' + message;
            }

            this.logger.debug('Success was updated from ' + prevSuccess + ' to ' + newSuccessValue + msg);
        };

        /**
         * WebGME can export the META types as path and this method updates the generated domain specific types with
         * webgme node objects. These can be used to define the base class of new objects created through the webgme API.
         *
         * @param {object} generatedMETA
         */
        PluginBase.prototype.updateMETA = function (generatedMETA) {
            var name;
            for (name in this.META) {
                if (this.META.hasOwnProperty(name)) {
                    generatedMETA[name] = this.META[name];
                }
            }

            // TODO: check if names are not the same
            // TODO: log if META is out of date
        };

        /**
         * Checks if the given node is of the given meta-type.
         * Usage: <tt>self.isMetaTypeOf(aNode, self.META['FCO']);</tt>
         * @param node - Node to be checked for type.
         * @param metaNode - Node object defining the meta type.
         * @returns {boolean} - True if the given object was of the META type.
         */
        PluginBase.prototype.isMetaTypeOf = function (node, metaNode) {
            var self = this;
            while (node) {
                if (self.core.getGuid(node) === self.core.getGuid(metaNode)) {
                    return true;
                }
                node = self.core.getBase(node);
            }
            return false;
        };

        /**
         * Finds and returns the node object defining the meta type for the given node.
         * @param node - Node to be checked for type.
         * @returns {Object} - Node object defining the meta type of node.
         */
        PluginBase.prototype.getMetaType = function (node) {
            var self = this,
                name;
            while (node) {
                name = self.core.getAttribute(node, 'name');
                if (self.META.hasOwnProperty(name) && self.core.getGuid(node) === self.core.getGuid(self.META[name])) {
                    break;
                }
                node = self.core.getBase(node);
            }
            return node;
        };

        /**
         * Returns true if node is a direct instance of a meta-type node (or a meta-type node itself).
         * @param node - Node to be checked.
         * @returns {boolean}
         */
        PluginBase.prototype.baseIsMeta = function (node) {
            var self = this,
                baseName,
                baseNode = self.core.getBase(node);
            if (!baseNode) {
                // FCO does not have a base node, by definition function returns true.
                return true;
            }
            baseName = self.core.getAttribute(baseNode, 'name');
            return self.META.hasOwnProperty(baseName) && self.core.getGuid(self.META[baseName]) === self.core.getGuid(baseNode);
        };

        /**
         * Gets the current configuration of the plugin that was set by the user and plugin manager.
         *
         * @returns {object}
         */
        PluginBase.prototype.getCurrentConfig = function () {
            return this._currentConfig;
        };

        /**
         * Creates a new message for the user and adds it to the result.
         *
         * @param {object} node - webgme object which is related to the message
         * @param {string} message - feedback to the user
         * @param {string} severity - severity level of the message: 'debug', 'info' (default), 'warning', 'error'.
         */
        PluginBase.prototype.createMessage = function (node, message, severity) {
            var severityLevel = severity || 'info';
            //this occurence of the function will always handle a single node

            var descriptor = new PluginNodeDescription({
                    name: node ? this.core.getAttribute(node, 'name') : "",
                    id: node ? this.core.getPath(node) : ""
                });
            var pluginMessage = new PluginMessage({
                    commitHash: this.currentHash,
                    activeNode: descriptor,
                    message: message,
                    severity: severityLevel
                });

            this.result.addMessage(pluginMessage);
        };

        /**
         * Saves all current changes if there is any to a new commit.
         * If the changes were started from a branch, then tries to fast forward the branch to the new commit.
         * Note: Does NOT handle any merges at this point.
         *
         * @param {string|null} message - commit message
         * @param callback
         */
        PluginBase.prototype.save = function (message, callback) {
            var self = this;

            this.logger.debug('Saving project');

            this.core.persist(this.rootNode,function(err){if (err) {self.logger.error(err);}});
            var newRootHash = self.core.getHash(self.rootNode);

            var commitMessage = '[Plugin] ' + self.getName() + ' (v' + self.getVersion() + ') updated the model.';
            if (message) {
                commitMessage += ' - ' + message;
            }
            self.currentHash = self.project.makeCommit([self.currentHash], newRootHash, commitMessage, function (err) {if (err) {self.logger.error(err);}});

            if (self.branchName) {
                // try to fast forward branch if there was a branch name defined

                // FIXME: what if master branch is already in a different state?

                self.project.getBranchNames(function (err, branchNames) {
                    if (branchNames.hasOwnProperty(self.branchName)) {
                        var branchHash = branchNames[self.branchName];
                        if (branchHash === self.branchHash) {
                            // the branch does not have any new commits
                            // try to fast forward branch to the current commit
                            self.project.setBranchHash(self.branchName, self.branchHash, self.currentHash, function (err) {
                                if (err) {
                                    // fast forward failed
                                    self.logger.error(err);
                                    self.logger.info('"' + self.branchName + '" was NOT updated');
                                    self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                                } else {
                                    // successful fast forward of branch to the new commit
                                    self.logger.info('"' + self.branchName + '" was updated to the new commit.');
                                    // roll starting point on success
                                    self.branchHash = self.currentHash;
                                }
                                callback(err);
                            });
                        } else {
                            // branch has changes a merge is required
                            // TODO: try auto-merge, if fails ...
                            self.logger.warn('Cannot fast forward "' + self.branchName + '" branch. Merge is required but not supported yet.');
                            self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                            callback(null);
                        }
                    } else {
                        // branch was deleted or not found, do nothing
                        self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                        callback(null);
                    }
                });
                // FIXME: is this call async??
                // FIXME: we are not tracking all commits that we make

            } else {
                // making commits, we have not started from a branch
                self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                callback(null);
            }

            // Commit changes.
/*            this.core.persist(this.rootNode, function (err) {
                // TODO: any error here?
                if (err) {
                    self.logger.error(err);
                }

                var newRootHash = self.core.getHash(self.rootNode);

                var commitMessage = '[Plugin] ' + self.getName() + ' (v' + self.getVersion() + ') updated the model.';
                if (message) {
                    commitMessage += ' - ' + message;
                }

                self.currentHash = self.project.makeCommit([self.currentHash], newRootHash, commitMessage, function (err) {
                    // TODO: any error handling here?
                    if (err) {
                        self.logger.error(err);
                    }

                    if (self.branchName) {
                        // try to fast forward branch if there was a branch name defined

                        // FIXME: what if master branch is already in a different state?

                        self.project.getBranchNames(function (err, branchNames) {
                            if (branchNames.hasOwnProperty(self.branchName)) {
                                var branchHash = branchNames[self.branchName];
                                if (branchHash === self.branchHash) {
                                    // the branch does not have any new commits
                                    // try to fast forward branch to the current commit
                                    self.project.setBranchHash(self.branchName, self.branchHash, self.currentHash, function (err) {
                                        if (err) {
                                            // fast forward failed
                                            self.logger.error(err);
                                            self.logger.info('"' + self.branchName + '" was NOT updated');
                                            self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                                        } else {
                                            // successful fast forward of branch to the new commit
                                            self.logger.info('"' + self.branchName + '" was updated to the new commit.');
                                            // roll starting point on success
                                            self.branchHash = self.currentHash;
                                        }
                                        callback(err);
                                    });
                                } else {
                                    // branch has changes a merge is required
                                    // TODO: try auto-merge, if fails ...
                                    self.logger.warn('Cannot fast forward "' + self.branchName + '" branch. Merge is required but not supported yet.');
                                    self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                                    callback(null);
                                }
                            } else {
                                // branch was deleted or not found, do nothing
                                self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                                callback(null);
                            }
                        });
                        // FIXME: is this call async??
                        // FIXME: we are not tracking all commits that we make

                    } else {
                        // making commits, we have not started from a branch
                        self.logger.info('Project was saved to ' + self.currentHash + ' commit.');
                        callback(null);
                    }
                });

            });*/
        };

        //--------------------------------------------------------------------------------------------------------------
        //---------- Methods that are used by the Plugin Manager. Derived classes should not use these methods

        /**
         * Initializes the plugin with objects that can be reused within the same plugin instance.
         *
         * @param {logManager} logger - logging capability to console (or file) based on PluginManager configuration
         * @param {blob.BlobClient} blobClient - virtual file system where files can be generated then saved as a zip file.
         */
        PluginBase.prototype.initialize = function (logger, blobClient) {
            if (logger) {
                this.logger = logger;
            } else {
                this.logger = console;
            }

            this.blobClient = blobClient;

            this._currentConfig = null;
            // initialize default configuration
            this.setCurrentConfig(this.getDefaultConfig());

            this.isConfigured = false;
        };

        /**
         * Configures this instance of the plugin for a specific execution. This function is called before the main by
         * the PluginManager.
         * Initializes the result with a new object.
         *
         * @param {PluginContext} config - specific context: project, branch, core, active object and active selection.
         */
        PluginBase.prototype.configure = function (config) {
            this.core = config.core;
            this.project = config.project;
            this.projectName = config.projectName;
            this.branchName = config.branchName;
            this.branchHash = config.branchName ? config.commitHash : null;
            this.commitHash = config.commitHash;
            this.currentHash = config.commitHash;
            this.rootNode = config.rootNode;
            this.activeNode = config.activeNode;
            this.activeSelection = config.activeSelection;
            this.META = config.META;

            this.result = new PluginResult();


            this.isConfigured = true;
        };

        /**
         * Gets the default configuration based on the configuration structure for this plugin.
         *
         * @returns {plugin.PluginConfig}
         */
        PluginBase.prototype.getDefaultConfig = function () {
            var configStructure = this.getConfigStructure();

            var defaultConfig = new PluginConfig();

            for (var i = 0; i < configStructure.length; i += 1) {
                defaultConfig[configStructure[i].name] = configStructure[i].value;
            }

            return defaultConfig;
        };

        /**
         * Sets the current configuration of the plugin.
         *
         * @param {object} newConfig - this is the actual configuration and NOT the configuration structure.
         */
        PluginBase.prototype.setCurrentConfig = function (newConfig) {
            this._currentConfig = newConfig;
        };

        return PluginBase;
    });
/**
* Generated by PluginGenerator from webgme on Wed Nov 19 2014 17:26:52 GMT-0600 (Central Standard Time).
*/

define('plugin/AcmImporter/AcmImporter/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'AssemblyRoot': '/1008889918/1502717053',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'ExactLayoutConstraint': '/1008889918/749469140',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'LayoutConstraint': '/1008889918/236224320',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'RangeLayoutConstraint': '/1008889918/1669293789',
        'RelativeLayoutConstraint': '/1008889918/24011457',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'WorkSpace': '/1008889918/1826321976',
        'Workflow': '/1008889918/891929219',
    };
});
/*!

JSZip - A Javascript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

JSZip uses the library zlib.js released under the following license :
zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License
*/
!function(e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define('jszip',e):"undefined"!=typeof window?window.JSZip=e():"undefined"!=typeof global?global.JSZip=e():"undefined"!=typeof self&&(self.JSZip=e())}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

// private property
var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";


// public method for encoding
exports.encode = function(input, utf8) {
    var output = "";
    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
    var i = 0;

    while (i < input.length) {

        chr1 = input.charCodeAt(i++);
        chr2 = input.charCodeAt(i++);
        chr3 = input.charCodeAt(i++);

        enc1 = chr1 >> 2;
        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
        enc4 = chr3 & 63;

        if (isNaN(chr2)) {
            enc3 = enc4 = 64;
        }
        else if (isNaN(chr3)) {
            enc4 = 64;
        }

        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);

    }

    return output;
};

// public method for decoding
exports.decode = function(input, utf8) {
    var output = "";
    var chr1, chr2, chr3;
    var enc1, enc2, enc3, enc4;
    var i = 0;

    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

    while (i < input.length) {

        enc1 = _keyStr.indexOf(input.charAt(i++));
        enc2 = _keyStr.indexOf(input.charAt(i++));
        enc3 = _keyStr.indexOf(input.charAt(i++));
        enc4 = _keyStr.indexOf(input.charAt(i++));

        chr1 = (enc1 << 2) | (enc2 >> 4);
        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
        chr3 = ((enc3 & 3) << 6) | enc4;

        output = output + String.fromCharCode(chr1);

        if (enc3 != 64) {
            output = output + String.fromCharCode(chr2);
        }
        if (enc4 != 64) {
            output = output + String.fromCharCode(chr3);
        }

    }

    return output;

};

},{}],2:[function(require,module,exports){

function CompressedObject() {
    this.compressedSize = 0;
    this.uncompressedSize = 0;
    this.crc32 = 0;
    this.compressionMethod = null;
    this.compressedContent = null;
}

CompressedObject.prototype = {
    /**
     * Return the decompressed content in an unspecified format.
     * The format will depend on the decompressor.
     * @return {Object} the decompressed content.
     */
    getContent: function() {
        return null; // see implementation
    },
    /**
     * Return the compressed content in an unspecified format.
     * The format will depend on the compressed conten source.
     * @return {Object} the compressed content.
     */
    getCompressedContent: function() {
        return null; // see implementation
    }
};
module.exports = CompressedObject;

},{}],3:[function(require,module,exports){

exports.STORE = {
    magic: "\x00\x00",
    compress: function(content) {
        return content; // no compression
    },
    uncompress: function(content) {
        return content; // no compression
    },
    compressInputType: null,
    uncompressInputType: null
};
exports.DEFLATE = require('./flate');

},{"./flate":6}],4:[function(require,module,exports){

var utils = require('./utils');

function DataReader(data) {
    this.data = null; // type : see implementation
    this.length = 0;
    this.index = 0;
}
DataReader.prototype = {
    /**
     * Check that the offset will not go too far.
     * @param {string} offset the additional offset to check.
     * @throws {Error} an Error if the offset is out of bounds.
     */
    checkOffset: function(offset) {
        this.checkIndex(this.index + offset);
    },
    /**
     * Check that the specifed index will not be too far.
     * @param {string} newIndex the index to check.
     * @throws {Error} an Error if the index is out of bounds.
     */
    checkIndex: function(newIndex) {
        if (this.length < newIndex || newIndex < 0) {
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + (newIndex) + "). Corrupted zip ?");
        }
    },
    /**
     * Change the index.
     * @param {number} newIndex The new index.
     * @throws {Error} if the new index is out of the data.
     */
    setIndex: function(newIndex) {
        this.checkIndex(newIndex);
        this.index = newIndex;
    },
    /**
     * Skip the next n bytes.
     * @param {number} n the number of bytes to skip.
     * @throws {Error} if the new index is out of the data.
     */
    skip: function(n) {
        this.setIndex(this.index + n);
    },
    /**
     * Get the byte at the specified index.
     * @param {number} i the index to use.
     * @return {number} a byte.
     */
    byteAt: function(i) {
        // see implementations
    },
    /**
     * Get the next number with a given byte size.
     * @param {number} size the number of bytes to read.
     * @return {number} the corresponding number.
     */
    readInt: function(size) {
        var result = 0,
            i;
        this.checkOffset(size);
        for (i = this.index + size - 1; i >= this.index; i--) {
            result = (result << 8) + this.byteAt(i);
        }
        this.index += size;
        return result;
    },
    /**
     * Get the next string with a given byte size.
     * @param {number} size the number of bytes to read.
     * @return {string} the corresponding string.
     */
    readString: function(size) {
        return utils.transformTo("string", this.readData(size));
    },
    /**
     * Get raw data without conversion, <size> bytes.
     * @param {number} size the number of bytes to read.
     * @return {Object} the raw data, implementation specific.
     */
    readData: function(size) {
        // see implementations
    },
    /**
     * Find the last occurence of a zip signature (4 bytes).
     * @param {string} sig the signature to find.
     * @return {number} the index of the last occurence, -1 if not found.
     */
    lastIndexOfSignature: function(sig) {
        // see implementations
    },
    /**
     * Get the next date.
     * @return {Date} the date.
     */
    readDate: function() {
        var dostime = this.readInt(4);
        return new Date(
        ((dostime >> 25) & 0x7f) + 1980, // year
        ((dostime >> 21) & 0x0f) - 1, // month
        (dostime >> 16) & 0x1f, // day
        (dostime >> 11) & 0x1f, // hour
        (dostime >> 5) & 0x3f, // minute
        (dostime & 0x1f) << 1); // second
    }
};
module.exports = DataReader;

},{"./utils":14}],5:[function(require,module,exports){

exports.base64 = false;
exports.binary = false;
exports.dir = false;
exports.date = null;
exports.compression = null;

},{}],6:[function(require,module,exports){

var USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');

var  ZlibDeflate = require('zlibjs/bin/rawdeflate.min').Zlib;
var  ZlibInflate = require('zlibjs/bin/rawinflate.min').Zlib;
exports.uncompressInputType = USE_TYPEDARRAY ? "uint8array" : "array";
exports.compressInputType = USE_TYPEDARRAY ? "uint8array" : "array";

exports.magic = "\x08\x00";
exports.compress = function(input) {
    var deflate = new ZlibDeflate.RawDeflate(input);
    return deflate.compress();
};
exports.uncompress =  function(input) {
    var inflate = new ZlibInflate.RawInflate(input);
    return inflate.decompress();
};

},{"zlibjs/bin/rawdeflate.min":19,"zlibjs/bin/rawinflate.min":20}],7:[function(require,module,exports){

/**
Usage:
   zip = new JSZip();
   zip.file("hello.txt", "Hello, World!").file("tempfile", "nothing");
   zip.folder("images").file("smile.gif", base64Data, {base64: true});
   zip.file("Xmas.txt", "Ho ho ho !", {date : new Date("December 25, 2007 00:00:01")});
   zip.remove("tempfile");

   base64zip = zip.generate();

**/

/**
 * Representation a of zip file in js
 * @constructor
 * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).
 * @param {Object=} options the options for creating this objects (optional).
 */
function JSZip(data, options) {
    // if this constructor is used without `new`, it adds `new` before itself:
    if(!(this instanceof JSZip)) return new JSZip(data, options);
    
    // object containing the files :
    // {
    //   "folder/" : {...},
    //   "folder/data.txt" : {...}
    // }
    this.files = {};

    // Where we are in the hierarchy
    this.root = "";
    if (data) {
        this.load(data, options);
    }
    this.clone = function() {
        var newObj = new JSZip();
        for (var i in this) {
            if (typeof this[i] !== "function") {
                newObj[i] = this[i];
            }
        }
        return newObj;
    };
}
JSZip.prototype = require('./object');
JSZip.prototype.load = require('./load');
JSZip.support = require('./support');
JSZip.defaults = require('./defaults');
JSZip.utils = require('./utils');
JSZip.base64 = require('./base64');
JSZip.compressions = require('./compressions');
module.exports = JSZip;

},{"./base64":1,"./compressions":3,"./defaults":5,"./load":8,"./object":9,"./support":12,"./utils":14}],8:[function(require,module,exports){

var base64 = require('./base64');
var ZipEntries = require('./zipEntries');
module.exports = function(data, options) {
    var files, zipEntries, i, input;
    options = options || {};
    if (options.base64) {
        data = base64.decode(data);
    }

    zipEntries = new ZipEntries(data, options);
    files = zipEntries.files;
    for (i = 0; i < files.length; i++) {
        input = files[i];
        this.file(input.fileName, input.decompressed, {
            binary: true,
            optimizedBinaryString: true,
            date: input.date,
            dir: input.dir
        });
    }

    return this;
};

},{"./base64":1,"./zipEntries":15}],9:[function(require,module,exports){

var support = require('./support');
var utils = require('./utils');
var signature = require('./signature');
var defaults = require('./defaults');
var base64 = require('./base64');
var compressions = require('./compressions');
var CompressedObject = require('./compressedObject');
var nodeBuffer = require('./nodeBuffer');
/**
 * Returns the raw data of a ZipObject, decompress the content if necessary.
 * @param {ZipObject} file the file to use.
 * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.
 */

var textEncoder, textDecoder;
if (
    support.uint8array &&
    typeof TextEncoder === "function" &&
    typeof TextDecoder === "function"
) {
    textEncoder = new TextEncoder("utf-8");
    textDecoder = new TextDecoder("utf-8");
}

var getRawData = function(file) {
    if (file._data instanceof CompressedObject) {
        file._data = file._data.getContent();
        file.options.binary = true;
        file.options.base64 = false;

        if (utils.getTypeOf(file._data) === "uint8array") {
            var copy = file._data;
            // when reading an arraybuffer, the CompressedObject mechanism will keep it and subarray() a Uint8Array.
            // if we request a file in the same format, we might get the same Uint8Array or its ArrayBuffer (the original zip file).
            file._data = new Uint8Array(copy.length);
            // with an empty Uint8Array, Opera fails with a "Offset larger than array size"
            if (copy.length !== 0) {
                file._data.set(copy, 0);
            }
        }
    }
    return file._data;
};

/**
 * Returns the data of a ZipObject in a binary form. If the content is an unicode string, encode it.
 * @param {ZipObject} file the file to use.
 * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.
 */
var getBinaryData = function(file) {
    var result = getRawData(file),
        type = utils.getTypeOf(result);
    if (type === "string") {
        if (!file.options.binary) {
            // unicode text !
            // unicode string => binary string is a painful process, check if we can avoid it.
            if (textEncoder) {
                return textEncoder.encode(result);
            }
            if (support.nodebuffer) {
                return nodeBuffer(result, "utf-8");
            }
        }
        return file.asBinary();
    }
    return result;
};

/**
 * Transform this._data into a string.
 * @param {function} filter a function String -> String, applied if not null on the result.
 * @return {String} the string representing this._data.
 */
var dataToString = function(asUTF8) {
    var result = getRawData(this);
    if (result === null || typeof result === "undefined") {
        return "";
    }
    // if the data is a base64 string, we decode it before checking the encoding !
    if (this.options.base64) {
        result = base64.decode(result);
    }
    if (asUTF8 && this.options.binary) {
        // JSZip.prototype.utf8decode supports arrays as input
        // skip to array => string step, utf8decode will do it.
        result = out.utf8decode(result);
    }
    else {
        // no utf8 transformation, do the array => string step.
        result = utils.transformTo("string", result);
    }

    if (!asUTF8 && !this.options.binary) {
        result = out.utf8encode(result);
    }
    return result;
};
/**
 * A simple object representing a file in the zip file.
 * @constructor
 * @param {string} name the name of the file
 * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data
 * @param {Object} options the options of the file
 */
var ZipObject = function(name, data, options) {
    this.name = name;
    this._data = data;
    this.options = options;
};

ZipObject.prototype = {
    /**
     * Return the content as UTF8 string.
     * @return {string} the UTF8 string.
     */
    asText: function() {
        return dataToString.call(this, true);
    },
    /**
     * Returns the binary content.
     * @return {string} the content as binary.
     */
    asBinary: function() {
        return dataToString.call(this, false);
    },
    /**
     * Returns the content as a nodejs Buffer.
     * @return {Buffer} the content as a Buffer.
     */
    asNodeBuffer: function() {
        var result = getBinaryData(this);
        return utils.transformTo("nodebuffer", result);
    },
    /**
     * Returns the content as an Uint8Array.
     * @return {Uint8Array} the content as an Uint8Array.
     */
    asUint8Array: function() {
        var result = getBinaryData(this);
        return utils.transformTo("uint8array", result);
    },
    /**
     * Returns the content as an ArrayBuffer.
     * @return {ArrayBuffer} the content as an ArrayBufer.
     */
    asArrayBuffer: function() {
        return this.asUint8Array().buffer;
    }
};

/**
 * Transform an integer into a string in hexadecimal.
 * @private
 * @param {number} dec the number to convert.
 * @param {number} bytes the number of bytes to generate.
 * @returns {string} the result.
 */
var decToHex = function(dec, bytes) {
    var hex = "",
        i;
    for (i = 0; i < bytes; i++) {
        hex += String.fromCharCode(dec & 0xff);
        dec = dec >>> 8;
    }
    return hex;
};

/**
 * Merge the objects passed as parameters into a new one.
 * @private
 * @param {...Object} var_args All objects to merge.
 * @return {Object} a new object with the data of the others.
 */
var extend = function() {
    var result = {}, i, attr;
    for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers
        for (attr in arguments[i]) {
            if (arguments[i].hasOwnProperty(attr) && typeof result[attr] === "undefined") {
                result[attr] = arguments[i][attr];
            }
        }
    }
    return result;
};

/**
 * Transforms the (incomplete) options from the user into the complete
 * set of options to create a file.
 * @private
 * @param {Object} o the options from the user.
 * @return {Object} the complete set of options.
 */
var prepareFileAttrs = function(o) {
    o = o || {};
    if (o.base64 === true && (o.binary === null || o.binary === undefined)) {
        o.binary = true;
    }
    o = extend(o, defaults);
    o.date = o.date || new Date();
    if (o.compression !== null) o.compression = o.compression.toUpperCase();

    return o;
};

/**
 * Add a file in the current folder.
 * @private
 * @param {string} name the name of the file
 * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file
 * @param {Object} o the options of the file
 * @return {Object} the new file.
 */
var fileAdd = function(name, data, o) {
    // be sure sub folders exist
    var parent = parentFolder(name),
        dataType = utils.getTypeOf(data);
    if (parent) {
        folderAdd.call(this, parent);
    }

    o = prepareFileAttrs(o);

    if (o.dir || data === null || typeof data === "undefined") {
        o.base64 = false;
        o.binary = false;
        data = null;
    }
    else if (dataType === "string") {
        if (o.binary && !o.base64) {
            // optimizedBinaryString == true means that the file has already been filtered with a 0xFF mask
            if (o.optimizedBinaryString !== true) {
                // this is a string, not in a base64 format.
                // Be sure that this is a correct "binary string"
                data = utils.string2binary(data);
            }
        }
    }
    else { // arraybuffer, uint8array, ...
        o.base64 = false;
        o.binary = true;

        if (!dataType && !(data instanceof CompressedObject)) {
            throw new Error("The data of '" + name + "' is in an unsupported format !");
        }

        // special case : it's way easier to work with Uint8Array than with ArrayBuffer
        if (dataType === "arraybuffer") {
            data = utils.transformTo("uint8array", data);
        }
    }

    var object = new ZipObject(name, data, o);
    this.files[name] = object;
    return object;
};


/**
 * Find the parent folder of the path.
 * @private
 * @param {string} path the path to use
 * @return {string} the parent folder, or ""
 */
var parentFolder = function(path) {
    if (path.slice(-1) == '/') {
        path = path.substring(0, path.length - 1);
    }
    var lastSlash = path.lastIndexOf('/');
    return (lastSlash > 0) ? path.substring(0, lastSlash) : "";
};

/**
 * Add a (sub) folder in the current folder.
 * @private
 * @param {string} name the folder's name
 * @return {Object} the new folder.
 */
var folderAdd = function(name) {
    // Check the name ends with a /
    if (name.slice(-1) != "/") {
        name += "/"; // IE doesn't like substr(-1)
    }

    // Does this folder already exist?
    if (!this.files[name]) {
        fileAdd.call(this, name, null, {
            dir: true
        });
    }
    return this.files[name];
};

/**
 * Generate a JSZip.CompressedObject for a given zipOject.
 * @param {ZipObject} file the object to read.
 * @param {JSZip.compression} compression the compression to use.
 * @return {JSZip.CompressedObject} the compressed result.
 */
var generateCompressedObjectFrom = function(file, compression) {
    var result = new CompressedObject(),
        content;

    // the data has not been decompressed, we might reuse things !
    if (file._data instanceof CompressedObject) {
        result.uncompressedSize = file._data.uncompressedSize;
        result.crc32 = file._data.crc32;

        if (result.uncompressedSize === 0 || file.options.dir) {
            compression = compressions['STORE'];
            result.compressedContent = "";
            result.crc32 = 0;
        }
        else if (file._data.compressionMethod === compression.magic) {
            result.compressedContent = file._data.getCompressedContent();
        }
        else {
            content = file._data.getContent();
            // need to decompress / recompress
            result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content));
        }
    }
    else {
        // have uncompressed data
        content = getBinaryData(file);
        if (!content || content.length === 0 || file.options.dir) {
            compression = compressions['STORE'];
            content = "";
        }
        result.uncompressedSize = content.length;
        result.crc32 = this.crc32(content);
        result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content));
    }

    result.compressedSize = result.compressedContent.length;
    result.compressionMethod = compression.magic;

    return result;
};

/**
 * Generate the various parts used in the construction of the final zip file.
 * @param {string} name the file name.
 * @param {ZipObject} file the file content.
 * @param {JSZip.CompressedObject} compressedObject the compressed object.
 * @param {number} offset the current offset from the start of the zip file.
 * @return {object} the zip parts.
 */
var generateZipParts = function(name, file, compressedObject, offset) {
    var data = compressedObject.compressedContent,
        utfEncodedFileName = this.utf8encode(file.name),
        useUTF8 = utfEncodedFileName !== file.name,
        o = file.options,
        dosTime,
        dosDate,
        extraFields = "",
        unicodePathExtraField = "";

    // date
    // @see http://www.delorie.com/djgpp/doc/rbinter/it/52/13.html
    // @see http://www.delorie.com/djgpp/doc/rbinter/it/65/16.html
    // @see http://www.delorie.com/djgpp/doc/rbinter/it/66/16.html

    dosTime = o.date.getHours();
    dosTime = dosTime << 6;
    dosTime = dosTime | o.date.getMinutes();
    dosTime = dosTime << 5;
    dosTime = dosTime | o.date.getSeconds() / 2;

    dosDate = o.date.getFullYear() - 1980;
    dosDate = dosDate << 4;
    dosDate = dosDate | (o.date.getMonth() + 1);
    dosDate = dosDate << 5;
    dosDate = dosDate | o.date.getDate();

    if (useUTF8) {
        // set the unicode path extra field. unzip needs at least one extra
        // field to correctly handle unicode path, so using the path is as good
        // as any other information. This could improve the situation with
        // other archive managers too.
        // This field is usually used without the utf8 flag, with a non
        // unicode path in the header (winrar, winzip). This helps (a bit)
        // with the messy Windows' default compressed folders feature but
        // breaks on p7zip which doesn't seek the unicode path extra field.
        // So for now, UTF-8 everywhere !
        unicodePathExtraField =
            // Version
            decToHex(1, 1) +
            // NameCRC32
            decToHex(this.crc32(utfEncodedFileName), 4) +
            // UnicodeName
            utfEncodedFileName;

        extraFields +=
            // Info-ZIP Unicode Path Extra Field
            "\x75\x70" +
            // size
            decToHex(unicodePathExtraField.length, 2) +
            // content
            unicodePathExtraField;
    }

    var header = "";

    // version needed to extract
    header += "\x0A\x00";
    // general purpose bit flag
    // set bit 11 if utf8
    header += useUTF8 ? "\x00\x08" : "\x00\x00";
    // compression method
    header += compressedObject.compressionMethod;
    // last mod file time
    header += decToHex(dosTime, 2);
    // last mod file date
    header += decToHex(dosDate, 2);
    // crc-32
    header += decToHex(compressedObject.crc32, 4);
    // compressed size
    header += decToHex(compressedObject.compressedSize, 4);
    // uncompressed size
    header += decToHex(compressedObject.uncompressedSize, 4);
    // file name length
    header += decToHex(utfEncodedFileName.length, 2);
    // extra field length
    header += decToHex(extraFields.length, 2);


    var fileRecord = signature.LOCAL_FILE_HEADER + header + utfEncodedFileName + extraFields;

    var dirRecord = signature.CENTRAL_FILE_HEADER +
    // version made by (00: DOS)
    "\x14\x00" +
    // file header (common to file and central directory)
    header +
    // file comment length
    "\x00\x00" +
    // disk number start
    "\x00\x00" +
    // internal file attributes TODO
    "\x00\x00" +
    // external file attributes
    (file.options.dir === true ? "\x10\x00\x00\x00" : "\x00\x00\x00\x00") +
    // relative offset of local header
    decToHex(offset, 4) +
    // file name
    utfEncodedFileName +
    // extra field
    extraFields;


    return {
        fileRecord: fileRecord,
        dirRecord: dirRecord,
        compressedObject: compressedObject
    };
};

/**
 * An object to write any content to a string.
 * @constructor
 */
var StringWriter = function() {
    this.data = [];
};
StringWriter.prototype = {
    /**
     * Append any content to the current string.
     * @param {Object} input the content to add.
     */
    append: function(input) {
        input = utils.transformTo("string", input);
        this.data.push(input);
    },
    /**
     * Finalize the construction an return the result.
     * @return {string} the generated string.
     */
    finalize: function() {
        return this.data.join("");
    }
};
/**
 * An object to write any content to an Uint8Array.
 * @constructor
 * @param {number} length The length of the array.
 */
var Uint8ArrayWriter = function(length) {
    this.data = new Uint8Array(length);
    this.index = 0;
};
Uint8ArrayWriter.prototype = {
    /**
     * Append any content to the current array.
     * @param {Object} input the content to add.
     */
    append: function(input) {
        if (input.length !== 0) {
            // with an empty Uint8Array, Opera fails with a "Offset larger than array size"
            input = utils.transformTo("uint8array", input);
            this.data.set(input, this.index);
            this.index += input.length;
        }
    },
    /**
     * Finalize the construction an return the result.
     * @return {Uint8Array} the generated array.
     */
    finalize: function() {
        return this.data;
    }
};

// return the actual prototype of JSZip
var out = {
    /**
     * Read an existing zip and merge the data in the current JSZip object.
     * The implementation is in jszip-load.js, don't forget to include it.
     * @param {String|ArrayBuffer|Uint8Array|Buffer} stream  The stream to load
     * @param {Object} options Options for loading the stream.
     *  options.base64 : is the stream in base64 ? default : false
     * @return {JSZip} the current JSZip object
     */
    load: function(stream, options) {
        throw new Error("Load method is not defined. Is the file jszip-load.js included ?");
    },

    /**
     * Filter nested files/folders with the specified function.
     * @param {Function} search the predicate to use :
     * function (relativePath, file) {...}
     * It takes 2 arguments : the relative path and the file.
     * @return {Array} An array of matching elements.
     */
    filter: function(search) {
        var result = [],
            filename, relativePath, file, fileClone;
        for (filename in this.files) {
            if (!this.files.hasOwnProperty(filename)) {
                continue;
            }
            file = this.files[filename];
            // return a new object, don't let the user mess with our internal objects :)
            fileClone = new ZipObject(file.name, file._data, extend(file.options));
            relativePath = filename.slice(this.root.length, filename.length);
            if (filename.slice(0, this.root.length) === this.root && // the file is in the current root
            search(relativePath, fileClone)) { // and the file matches the function
                result.push(fileClone);
            }
        }
        return result;
    },

    /**
     * Add a file to the zip file, or search a file.
     * @param   {string|RegExp} name The name of the file to add (if data is defined),
     * the name of the file to find (if no data) or a regex to match files.
     * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded
     * @param   {Object} o     File options
     * @return  {JSZip|Object|Array} this JSZip object (when adding a file),
     * a file (when searching by string) or an array of files (when searching by regex).
     */
    file: function(name, data, o) {
        if (arguments.length === 1) {
            if (utils.isRegExp(name)) {
                var regexp = name;
                return this.filter(function(relativePath, file) {
                    return !file.options.dir && regexp.test(relativePath);
                });
            }
            else { // text
                return this.filter(function(relativePath, file) {
                    return !file.options.dir && relativePath === name;
                })[0] || null;
            }
        }
        else { // more than one argument : we have data !
            name = this.root + name;
            fileAdd.call(this, name, data, o);
        }
        return this;
    },

    /**
     * Add a directory to the zip file, or search.
     * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.
     * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.
     */
    folder: function(arg) {
        if (!arg) {
            return this;
        }

        if (utils.isRegExp(arg)) {
            return this.filter(function(relativePath, file) {
                return file.options.dir && arg.test(relativePath);
            });
        }

        // else, name is a new folder
        var name = this.root + arg;
        var newFolder = folderAdd.call(this, name);

        // Allow chaining by returning a new object with this folder as the root
        var ret = this.clone();
        ret.root = newFolder.name;
        return ret;
    },

    /**
     * Delete a file, or a directory and all sub-files, from the zip
     * @param {string} name the name of the file to delete
     * @return {JSZip} this JSZip object
     */
    remove: function(name) {
        name = this.root + name;
        var file = this.files[name];
        if (!file) {
            // Look for any folders
            if (name.slice(-1) != "/") {
                name += "/";
            }
            file = this.files[name];
        }

        if (file) {
            if (!file.options.dir) {
                // file
                delete this.files[name];
            }
            else {
                // folder
                var kids = this.filter(function(relativePath, file) {
                    return file.name.slice(0, name.length) === name;
                });
                for (var i = 0; i < kids.length; i++) {
                    delete this.files[kids[i].name];
                }
            }
        }

        return this;
    },

    /**
     * Generate the complete zip file
     * @param {Object} options the options to generate the zip file :
     * - base64, (deprecated, use type instead) true to generate base64.
     * - compression, "STORE" by default.
     * - type, "base64" by default. Values are : string, base64, uint8array, arraybuffer, blob.
     * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file
     */
    generate: function(options) {
        options = extend(options || {}, {
            base64: true,
            compression: "STORE",
            type: "base64"
        });

        utils.checkSupport(options.type);

        var zipData = [],
            localDirLength = 0,
            centralDirLength = 0,
            writer, i;


        // first, generate all the zip parts.
        for (var name in this.files) {
            if (!this.files.hasOwnProperty(name)) {
                continue;
            }
            var file = this.files[name];

            var compressionName = file.options.compression || options.compression.toUpperCase();
            var compression = compressions[compressionName];
            if (!compression) {
                throw new Error(compressionName + " is not a valid compression method !");
            }

            var compressedObject = generateCompressedObjectFrom.call(this, file, compression);

            var zipPart = generateZipParts.call(this, name, file, compressedObject, localDirLength);
            localDirLength += zipPart.fileRecord.length + compressedObject.compressedSize;
            centralDirLength += zipPart.dirRecord.length;
            zipData.push(zipPart);
        }

        var dirEnd = "";

        // end of central dir signature
        dirEnd = signature.CENTRAL_DIRECTORY_END +
        // number of this disk
        "\x00\x00" +
        // number of the disk with the start of the central directory
        "\x00\x00" +
        // total number of entries in the central directory on this disk
        decToHex(zipData.length, 2) +
        // total number of entries in the central directory
        decToHex(zipData.length, 2) +
        // size of the central directory   4 bytes
        decToHex(centralDirLength, 4) +
        // offset of start of central directory with respect to the starting disk number
        decToHex(localDirLength, 4) +
        // .ZIP file comment length
        "\x00\x00";


        // we have all the parts (and the total length)
        // time to create a writer !
        var typeName = options.type.toLowerCase();
        if(typeName==="uint8array"||typeName==="arraybuffer"||typeName==="blob"||typeName==="nodebuffer") {
            writer = new Uint8ArrayWriter(localDirLength + centralDirLength + dirEnd.length);
        }else{
            writer = new StringWriter(localDirLength + centralDirLength + dirEnd.length);
        }

        for (i = 0; i < zipData.length; i++) {
            writer.append(zipData[i].fileRecord);
            writer.append(zipData[i].compressedObject.compressedContent);
        }
        for (i = 0; i < zipData.length; i++) {
            writer.append(zipData[i].dirRecord);
        }

        writer.append(dirEnd);

        var zip = writer.finalize();



        switch(options.type.toLowerCase()) {
            // case "zip is an Uint8Array"
            case "uint8array" :
            case "arraybuffer" :
            case "nodebuffer" :
               return utils.transformTo(options.type.toLowerCase(), zip);
            case "blob" :
               return utils.arrayBuffer2Blob(utils.transformTo("arraybuffer", zip));
            // case "zip is a string"
            case "base64" :
               return (options.base64) ? base64.encode(zip) : zip;
            default : // case "string" :
               return zip;
         }
      
    },

    /**
     *
     *  Javascript crc32
     *  http://www.webtoolkit.info/
     *
     */
    crc32: function crc32(input, crc) {
        if (typeof input === "undefined" || !input.length) {
            return 0;
        }

        var isArray = utils.getTypeOf(input) !== "string";

        var table = [
        0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,
        0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
        0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,
        0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,
        0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,
        0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
        0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,
        0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,
        0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,
        0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,
        0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,
        0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,
        0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,
        0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
        0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,
        0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
        0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,
        0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
        0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,
        0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,
        0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,
        0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,
        0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,
        0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,
        0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,
        0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,
        0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,
        0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,
        0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,
        0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,
        0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,
        0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,
        0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,
        0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,
        0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,
        0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,
        0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,
        0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,
        0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,
        0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,
        0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,
        0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,
        0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,
        0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,
        0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,
        0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,
        0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,
        0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,
        0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,
        0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,
        0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,
        0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,
        0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,
        0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,
        0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,
        0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,
        0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,
        0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,
        0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,
        0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,
        0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,
        0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,
        0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,
        0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];

        if (typeof(crc) == "undefined") {
            crc = 0;
        }
        var x = 0;
        var y = 0;
        var b = 0;

        crc = crc ^ (-1);
        for (var i = 0, iTop = input.length; i < iTop; i++) {
            b = isArray ? input[i] : input.charCodeAt(i);
            y = (crc ^ b) & 0xFF;
            x = table[y];
            crc = (crc >>> 8) ^ x;
        }

        return crc ^ (-1);
    },

    // Inspired by http://my.opera.com/GreyWyvern/blog/show.dml/1725165

    /**
     * http://www.webtoolkit.info/javascript-utf8.html
     */
    utf8encode: function(string) {
        // TextEncoder + Uint8Array to binary string is faster than checking every bytes on long strings.
        // http://jsperf.com/utf8encode-vs-textencoder
        // On short strings (file names for example), the TextEncoder API is (currently) slower.
        if (textEncoder) {
            var u8 = textEncoder.encode(string);
            return utils.transformTo("string", u8);
        }
        if (support.nodebuffer) {
            return utils.transformTo("string", nodeBuffer(string, "utf-8"));
        }

        // array.join may be slower than string concatenation but generates less objects (less time spent garbage collecting).
        // See also http://jsperf.com/array-direct-assignment-vs-push/31
        var result = [],
            resIndex = 0;

        for (var n = 0; n < string.length; n++) {

            var c = string.charCodeAt(n);

            if (c < 128) {
                result[resIndex++] = String.fromCharCode(c);
            }
            else if ((c > 127) && (c < 2048)) {
                result[resIndex++] = String.fromCharCode((c >> 6) | 192);
                result[resIndex++] = String.fromCharCode((c & 63) | 128);
            }
            else {
                result[resIndex++] = String.fromCharCode((c >> 12) | 224);
                result[resIndex++] = String.fromCharCode(((c >> 6) & 63) | 128);
                result[resIndex++] = String.fromCharCode((c & 63) | 128);
            }

        }

        return result.join("");
    },

    /**
     * http://www.webtoolkit.info/javascript-utf8.html
     */
    utf8decode: function(input) {
        var result = [],
            resIndex = 0;
        var type = utils.getTypeOf(input);
        var isArray = type !== "string";
        var i = 0;
        var c = 0,
            c1 = 0,
            c2 = 0,
            c3 = 0;

        // check if we can use the TextDecoder API
        // see http://encoding.spec.whatwg.org/#api
        if (textDecoder) {
            return textDecoder.decode(
                utils.transformTo("uint8array", input)
            );
        }
        if (support.nodebuffer) {
            return utils.transformTo("nodebuffer", input).toString("utf-8");
        }

        while (i < input.length) {

            c = isArray ? input[i] : input.charCodeAt(i);

            if (c < 128) {
                result[resIndex++] = String.fromCharCode(c);
                i++;
            }
            else if ((c > 191) && (c < 224)) {
                c2 = isArray ? input[i + 1] : input.charCodeAt(i + 1);
                result[resIndex++] = String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            }
            else {
                c2 = isArray ? input[i + 1] : input.charCodeAt(i + 1);
                c3 = isArray ? input[i + 2] : input.charCodeAt(i + 2);
                result[resIndex++] = String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            }

        }

        return result.join("");
    }
};
module.exports = out;

},{"./base64":1,"./compressedObject":2,"./compressions":3,"./defaults":5,"./nodeBuffer":17,"./signature":10,"./support":12,"./utils":14}],10:[function(require,module,exports){

exports.LOCAL_FILE_HEADER = "PK\x03\x04";
exports.CENTRAL_FILE_HEADER = "PK\x01\x02";
exports.CENTRAL_DIRECTORY_END = "PK\x05\x06";
exports.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x06\x07";
exports.ZIP64_CENTRAL_DIRECTORY_END = "PK\x06\x06";
exports.DATA_DESCRIPTOR = "PK\x07\x08";

},{}],11:[function(require,module,exports){

var DataReader = require('./dataReader');
var utils = require('./utils');

function StringReader(data, optimizedBinaryString) {
    this.data = data;
    if (!optimizedBinaryString) {
        this.data = utils.string2binary(this.data);
    }
    this.length = this.data.length;
    this.index = 0;
}
StringReader.prototype = new DataReader();
/**
 * @see DataReader.byteAt
 */
StringReader.prototype.byteAt = function(i) {
    return this.data.charCodeAt(i);
};
/**
 * @see DataReader.lastIndexOfSignature
 */
StringReader.prototype.lastIndexOfSignature = function(sig) {
    return this.data.lastIndexOf(sig);
};
/**
 * @see DataReader.readData
 */
StringReader.prototype.readData = function(size) {
    this.checkOffset(size);
    // this will work because the constructor applied the "& 0xff" mask.
    var result = this.data.slice(this.index, this.index + size);
    this.index += size;
    return result;
};
module.exports = StringReader;

},{"./dataReader":4,"./utils":14}],12:[function(require,module,exports){
var process=require("__browserify_process");
exports.base64 = true;
exports.array = true;
exports.string = true;
exports.arraybuffer = typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined";
// contains true if JSZip can read/generate nodejs Buffer, false otherwise, aka checks if we arn't in a browser.
exports.nodebuffer = !process.browser;
// contains true if JSZip can read/generate Uint8Array, false otherwise.
exports.uint8array = typeof Uint8Array !== "undefined";

if (typeof ArrayBuffer === "undefined") {
    exports.blob = false;
}
else {
    var buffer = new ArrayBuffer(0);
    try {
        exports.blob = new Blob([buffer], {
            type: "application/zip"
        }).size === 0;
    }
    catch (e) {
        try {
            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
            var builder = new Builder();
            builder.append(buffer);
            exports.blob = builder.getBlob('application/zip').size === 0;
        }
        catch (e) {
            exports.blob = false;
        }
    }
}

},{"__browserify_process":18}],13:[function(require,module,exports){

var DataReader = require('./dataReader');

function Uint8ArrayReader(data) {
    if (data) {
        this.data = data;
        this.length = this.data.length;
        this.index = 0;
    }
}
Uint8ArrayReader.prototype = new DataReader();
/**
 * @see DataReader.byteAt
 */
Uint8ArrayReader.prototype.byteAt = function(i) {
    return this.data[i];
};
/**
 * @see DataReader.lastIndexOfSignature
 */
Uint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {
    var sig0 = sig.charCodeAt(0),
        sig1 = sig.charCodeAt(1),
        sig2 = sig.charCodeAt(2),
        sig3 = sig.charCodeAt(3);
    for (var i = this.length - 4; i >= 0; --i) {
        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {
            return i;
        }
    }

    return -1;
};
/**
 * @see DataReader.readData
 */
Uint8ArrayReader.prototype.readData = function(size) {
    this.checkOffset(size);
    var result = this.data.subarray(this.index, this.index + size);
    this.index += size;
    return result;
};
module.exports = Uint8ArrayReader;

},{"./dataReader":4}],14:[function(require,module,exports){

var support = require('./support');
var compressions = require('./compressions');
var nodeBuffer = require('./nodeBuffer');
/**
 * Convert a string to a "binary string" : a string containing only char codes between 0 and 255.
 * @param {string} str the string to transform.
 * @return {String} the binary string.
 */
exports.string2binary = function(str) {
    var result = "";
    for (var i = 0; i < str.length; i++) {
        result += String.fromCharCode(str.charCodeAt(i) & 0xff);
    }
    return result;
};
/**
 * Create a Uint8Array from the string.
 * @param {string} str the string to transform.
 * @return {Uint8Array} the typed array.
 * @throws {Error} an Error if the browser doesn't support the requested feature.
 */
exports.string2Uint8Array = function(str) {
    return exports.transformTo("uint8array", str);
};

/**
 * Create a string from the Uint8Array.
 * @param {Uint8Array} array the array to transform.
 * @return {string} the string.
 * @throws {Error} an Error if the browser doesn't support the requested feature.
 */
exports.uint8Array2String = function(array) {
    return exports.transformTo("string", array);
};
/**
 * Create a blob from the given string.
 * @param {string} str the string to transform.
 * @return {Blob} the string.
 * @throws {Error} an Error if the browser doesn't support the requested feature.
 */
exports.string2Blob = function(str) {
    var buffer = exports.transformTo("arraybuffer", str);
    return exports.arrayBuffer2Blob(buffer);
};
exports.arrayBuffer2Blob = function(buffer) {
    exports.checkSupport("blob");

    try {
        // Blob constructor
        return new Blob([buffer], {
            type: "application/zip"
        });
    }
    catch (e) {

        try {
            // deprecated, browser only, old way
            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
            var builder = new Builder();
            builder.append(buffer);
            return builder.getBlob('application/zip');
        }
        catch (e) {

            // well, fuck ?!
            throw new Error("Bug : can't construct the Blob.");
        }
    }


};
/**
 * The identity function.
 * @param {Object} input the input.
 * @return {Object} the same input.
 */
function identity(input) {
    return input;
}

/**
 * Fill in an array with a string.
 * @param {String} str the string to use.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).
 * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.
 */
function stringToArrayLike(str, array) {
    for (var i = 0; i < str.length; ++i) {
        array[i] = str.charCodeAt(i) & 0xFF;
    }
    return array;
}

/**
 * Transform an array-like object to a string.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.
 * @return {String} the result.
 */
function arrayLikeToString(array) {
    // Performances notes :
    // --------------------
    // String.fromCharCode.apply(null, array) is the fastest, see
    // see http://jsperf.com/converting-a-uint8array-to-a-string/2
    // but the stack is limited (and we can get huge arrays !).
    //
    // result += String.fromCharCode(array[i]); generate too many strings !
    //
    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2
    var chunk = 65536;
    var result = [],
        len = array.length,
        type = exports.getTypeOf(array),
        k = 0,
        canUseApply = true;
      try {
         switch(type) {
            case "uint8array":
               String.fromCharCode.apply(null, new Uint8Array(0));
               break;
            case "nodebuffer":
               String.fromCharCode.apply(null, nodeBuffer(0));
               break;
         }
      } catch(e) {
         canUseApply = false;
      }

      // no apply : slow and painful algorithm
      // default browser on android 4.*
      if (!canUseApply) {
         var resultStr = "";
         for(var i = 0; i < array.length;i++) {
            resultStr += String.fromCharCode(array[i]);
         }
    return resultStr;
    }
    while (k < len && chunk > 1) {
        try {
            if (type === "array" || type === "nodebuffer") {
                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));
            }
            else {
                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));
            }
            k += chunk;
        }
        catch (e) {
            chunk = Math.floor(chunk / 2);
        }
    }
    return result.join("");
}

/**
 * Copy the data from an array-like to an other array-like.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.
 * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.
 */
function arrayLikeToArrayLike(arrayFrom, arrayTo) {
    for (var i = 0; i < arrayFrom.length; i++) {
        arrayTo[i] = arrayFrom[i];
    }
    return arrayTo;
}

// a matrix containing functions to transform everything into everything.
var transform = {};

// string to ?
transform["string"] = {
    "string": identity,
    "array": function(input) {
        return stringToArrayLike(input, new Array(input.length));
    },
    "arraybuffer": function(input) {
        return transform["string"]["uint8array"](input).buffer;
    },
    "uint8array": function(input) {
        return stringToArrayLike(input, new Uint8Array(input.length));
    },
    "nodebuffer": function(input) {
        return stringToArrayLike(input, nodeBuffer(input.length));
    }
};

// array to ?
transform["array"] = {
    "string": arrayLikeToString,
    "array": identity,
    "arraybuffer": function(input) {
        return (new Uint8Array(input)).buffer;
    },
    "uint8array": function(input) {
        return new Uint8Array(input);
    },
    "nodebuffer": function(input) {
        return nodeBuffer(input);
    }
};

// arraybuffer to ?
transform["arraybuffer"] = {
    "string": function(input) {
        return arrayLikeToString(new Uint8Array(input));
    },
    "array": function(input) {
        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));
    },
    "arraybuffer": identity,
    "uint8array": function(input) {
        return new Uint8Array(input);
    },
    "nodebuffer": function(input) {
        return nodeBuffer(new Uint8Array(input));
    }
};

// uint8array to ?
transform["uint8array"] = {
    "string": arrayLikeToString,
    "array": function(input) {
        return arrayLikeToArrayLike(input, new Array(input.length));
    },
    "arraybuffer": function(input) {
        return input.buffer;
    },
    "uint8array": identity,
    "nodebuffer": function(input) {
        return nodeBuffer(input);
    }
};

// nodebuffer to ?
transform["nodebuffer"] = {
    "string": arrayLikeToString,
    "array": function(input) {
        return arrayLikeToArrayLike(input, new Array(input.length));
    },
    "arraybuffer": function(input) {
        return transform["nodebuffer"]["uint8array"](input).buffer;
    },
    "uint8array": function(input) {
        return arrayLikeToArrayLike(input, new Uint8Array(input.length));
    },
    "nodebuffer": identity
};

/**
 * Transform an input into any type.
 * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.
 * If no output type is specified, the unmodified input will be returned.
 * @param {String} outputType the output type.
 * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.
 * @throws {Error} an Error if the browser doesn't support the requested output type.
 */
exports.transformTo = function(outputType, input) {
    if (!input) {
        // undefined, null, etc
        // an empty string won't harm.
        input = "";
    }
    if (!outputType) {
        return input;
    }
    exports.checkSupport(outputType);
    var inputType = exports.getTypeOf(input);
    var result = transform[inputType][outputType](input);
    return result;
};

/**
 * Return the type of the input.
 * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.
 * @param {Object} input the input to identify.
 * @return {String} the (lowercase) type of the input.
 */
exports.getTypeOf = function(input) {
    if (typeof input === "string") {
        return "string";
    }
    if (Object.prototype.toString.call(input) === "[object Array]") {
        return "array";
    }
    if (support.nodebuffer && nodeBuffer.test(input)) {
        return "nodebuffer";
    }
    if (support.uint8array && input instanceof Uint8Array) {
        return "uint8array";
    }
    if (support.arraybuffer && input instanceof ArrayBuffer) {
        return "arraybuffer";
    }
};

/**
 * Throw an exception if the type is not supported.
 * @param {String} type the type to check.
 * @throws {Error} an Error if the browser doesn't support the requested type.
 */
exports.checkSupport = function(type) {
    var supported = support[type.toLowerCase()];
    if (!supported) {
        throw new Error(type + " is not supported by this browser");
    }
};
exports.MAX_VALUE_16BITS = 65535;
exports.MAX_VALUE_32BITS = -1; // well, "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF" is parsed as -1

/**
 * Prettify a string read as binary.
 * @param {string} str the string to prettify.
 * @return {string} a pretty string.
 */
exports.pretty = function(str) {
    var res = '',
        code, i;
    for (i = 0; i < (str || "").length; i++) {
        code = str.charCodeAt(i);
        res += '\\x' + (code < 16 ? "0" : "") + code.toString(16).toUpperCase();
    }
    return res;
};

/**
 * Find a compression registered in JSZip.
 * @param {string} compressionMethod the method magic to find.
 * @return {Object|null} the JSZip compression object, null if none found.
 */
exports.findCompression = function(compressionMethod) {
    for (var method in compressions) {
        if (!compressions.hasOwnProperty(method)) {
            continue;
        }
        if (compressions[method].magic === compressionMethod) {
            return compressions[method];
        }
    }
    return null;
};
/**
* Cross-window, cross-Node-context regular expression detection
* @param  {Object}  object Anything
* @return {Boolean}        true if the object is a regular expression,
* false otherwise
*/
exports.isRegExp = function (object) {
    return Object.prototype.toString.call(object) === "[object RegExp]";
};


},{"./compressions":3,"./nodeBuffer":17,"./support":12}],15:[function(require,module,exports){

var StringReader = require('./stringReader');
var NodeBufferReader = require('./nodeBufferReader');
var Uint8ArrayReader = require('./uint8ArrayReader');
var utils = require('./utils');
var sig = require('./signature');
var ZipEntry = require('./zipEntry');
var support = require('./support');
//  class ZipEntries {{{
/**
 * All the entries in the zip file.
 * @constructor
 * @param {String|ArrayBuffer|Uint8Array} data the binary stream to load.
 * @param {Object} loadOptions Options for loading the stream.
 */
function ZipEntries(data, loadOptions) {
    this.files = [];
    this.loadOptions = loadOptions;
    if (data) {
        this.load(data);
    }
}
ZipEntries.prototype = {
    /**
     * Check that the reader is on the speficied signature.
     * @param {string} expectedSignature the expected signature.
     * @throws {Error} if it is an other signature.
     */
    checkSignature: function(expectedSignature) {
        var signature = this.reader.readString(4);
        if (signature !== expectedSignature) {
            throw new Error("Corrupted zip or bug : unexpected signature " + "(" + utils.pretty(signature) + ", expected " + utils.pretty(expectedSignature) + ")");
        }
    },
    /**
     * Read the end of the central directory.
     */
    readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2);
        this.diskWithCentralDirStart = this.reader.readInt(2);
        this.centralDirRecordsOnThisDisk = this.reader.readInt(2);
        this.centralDirRecords = this.reader.readInt(2);
        this.centralDirSize = this.reader.readInt(4);
        this.centralDirOffset = this.reader.readInt(4);

        this.zipCommentLength = this.reader.readInt(2);
        this.zipComment = this.reader.readString(this.zipCommentLength);
    },
    /**
     * Read the end of the Zip 64 central directory.
     * Not merged with the method readEndOfCentral :
     * The end of central can coexist with its Zip64 brother,
     * I don't want to read the wrong number of bytes !
     */
    readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8);
        this.versionMadeBy = this.reader.readString(2);
        this.versionNeeded = this.reader.readInt(2);
        this.diskNumber = this.reader.readInt(4);
        this.diskWithCentralDirStart = this.reader.readInt(4);
        this.centralDirRecordsOnThisDisk = this.reader.readInt(8);
        this.centralDirRecords = this.reader.readInt(8);
        this.centralDirSize = this.reader.readInt(8);
        this.centralDirOffset = this.reader.readInt(8);

        this.zip64ExtensibleData = {};
        var extraDataSize = this.zip64EndOfCentralSize - 44,
            index = 0,
            extraFieldId,
            extraFieldLength,
            extraFieldValue;
        while (index < extraDataSize) {
            extraFieldId = this.reader.readInt(2);
            extraFieldLength = this.reader.readInt(4);
            extraFieldValue = this.reader.readString(extraFieldLength);
            this.zip64ExtensibleData[extraFieldId] = {
                id: extraFieldId,
                length: extraFieldLength,
                value: extraFieldValue
            };
        }
    },
    /**
     * Read the end of the Zip 64 central directory locator.
     */
    readBlockZip64EndOfCentralLocator: function() {
        this.diskWithZip64CentralDirStart = this.reader.readInt(4);
        this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);
        this.disksCount = this.reader.readInt(4);
        if (this.disksCount > 1) {
            throw new Error("Multi-volumes zip are not supported");
        }
    },
    /**
     * Read the local files, based on the offset read in the central part.
     */
    readLocalFiles: function() {
        var i, file;
        for (i = 0; i < this.files.length; i++) {
            file = this.files[i];
            this.reader.setIndex(file.localHeaderOffset);
            this.checkSignature(sig.LOCAL_FILE_HEADER);
            file.readLocalPart(this.reader);
            file.handleUTF8();
        }
    },
    /**
     * Read the central directory.
     */
    readCentralDir: function() {
        var file;

        this.reader.setIndex(this.centralDirOffset);
        while (this.reader.readString(4) === sig.CENTRAL_FILE_HEADER) {
            file = new ZipEntry({
                zip64: this.zip64
            }, this.loadOptions);
            file.readCentralPart(this.reader);
            this.files.push(file);
        }
    },
    /**
     * Read the end of central directory.
     */
    readEndOfCentral: function() {
        var offset = this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END);
        if (offset === -1) {
            throw new Error("Corrupted zip : can't find end of central directory");
        }
        this.reader.setIndex(offset);
        this.checkSignature(sig.CENTRAL_DIRECTORY_END);
        this.readBlockEndOfCentral();


        /* extract from the zip spec :
            4)  If one of the fields in the end of central directory
                record is too small to hold required data, the field
                should be set to -1 (0xFFFF or 0xFFFFFFFF) and the
                ZIP64 format record should be created.
            5)  The end of central directory record and the
                Zip64 end of central directory locator record must
                reside on the same disk when splitting or spanning
                an archive.
         */
        if (this.diskNumber === utils.MAX_VALUE_16BITS || this.diskWithCentralDirStart === utils.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === utils.MAX_VALUE_16BITS || this.centralDirRecords === utils.MAX_VALUE_16BITS || this.centralDirSize === utils.MAX_VALUE_32BITS || this.centralDirOffset === utils.MAX_VALUE_32BITS) {
            this.zip64 = true;

            /*
            Warning : the zip64 extension is supported, but ONLY if the 64bits integer read from
            the zip file can fit into a 32bits integer. This cannot be solved : Javascript represents
            all numbers as 64-bit double precision IEEE 754 floating point numbers.
            So, we have 53bits for integers and bitwise operations treat everything as 32bits.
            see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators
            and http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf section 8.5
            */

            // should look for a zip64 EOCD locator
            offset = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);
            if (offset === -1) {
                throw new Error("Corrupted zip : can't find the ZIP64 end of central directory locator");
            }
            this.reader.setIndex(offset);
            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);
            this.readBlockZip64EndOfCentralLocator();

            // now the zip64 EOCD record
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);
            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);
            this.readBlockZip64EndOfCentral();
        }
    },
    prepareReader: function(data) {
        var type = utils.getTypeOf(data);
        if (type === "string" && !support.uint8array) {
            this.reader = new StringReader(data, this.loadOptions.optimizedBinaryString);
        }
        else if (type === "nodebuffer") {
            this.reader = new NodeBufferReader(data);
        }
        else {
            this.reader = new Uint8ArrayReader(utils.transformTo("uint8array", data));
        }
    },
    /**
     * Read a zip file and create ZipEntries.
     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the binary string representing a zip file.
     */
    load: function(data) {
        this.prepareReader(data);
        this.readEndOfCentral();
        this.readCentralDir();
        this.readLocalFiles();
    }
};
// }}} end of ZipEntries
module.exports = ZipEntries;

},{"./nodeBufferReader":17,"./signature":10,"./stringReader":11,"./support":12,"./uint8ArrayReader":13,"./utils":14,"./zipEntry":16}],16:[function(require,module,exports){

var StringReader = require('./stringReader');
var utils = require('./utils');
var CompressedObject = require('./compressedObject');
var jszipProto = require('./object');
// class ZipEntry {{{
/**
 * An entry in the zip file.
 * @constructor
 * @param {Object} options Options of the current file.
 * @param {Object} loadOptions Options for loading the stream.
 */
function ZipEntry(options, loadOptions) {
    this.options = options;
    this.loadOptions = loadOptions;
}
ZipEntry.prototype = {
    /**
     * say if the file is encrypted.
     * @return {boolean} true if the file is encrypted, false otherwise.
     */
    isEncrypted: function() {
        // bit 1 is set
        return (this.bitFlag & 0x0001) === 0x0001;
    },
    /**
     * say if the file has utf-8 filename/comment.
     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.
     */
    useUTF8: function() {
        // bit 11 is set
        return (this.bitFlag & 0x0800) === 0x0800;
    },
    /**
     * Prepare the function used to generate the compressed content from this ZipFile.
     * @param {DataReader} reader the reader to use.
     * @param {number} from the offset from where we should read the data.
     * @param {number} length the length of the data to read.
     * @return {Function} the callback to get the compressed content (the type depends of the DataReader class).
     */
    prepareCompressedContent: function(reader, from, length) {
        return function() {
            var previousIndex = reader.index;
            reader.setIndex(from);
            var compressedFileData = reader.readData(length);
            reader.setIndex(previousIndex);

            return compressedFileData;
        };
    },
    /**
     * Prepare the function used to generate the uncompressed content from this ZipFile.
     * @param {DataReader} reader the reader to use.
     * @param {number} from the offset from where we should read the data.
     * @param {number} length the length of the data to read.
     * @param {JSZip.compression} compression the compression used on this file.
     * @param {number} uncompressedSize the uncompressed size to expect.
     * @return {Function} the callback to get the uncompressed content (the type depends of the DataReader class).
     */
    prepareContent: function(reader, from, length, compression, uncompressedSize) {
        return function() {

            var compressedFileData = utils.transformTo(compression.uncompressInputType, this.getCompressedContent());
            var uncompressedFileData = compression.uncompress(compressedFileData);

            if (uncompressedFileData.length !== uncompressedSize) {
                throw new Error("Bug : uncompressed data size mismatch");
            }

            return uncompressedFileData;
        };
    },
    /**
     * Read the local part of a zip file and add the info in this object.
     * @param {DataReader} reader the reader to use.
     */
    readLocalPart: function(reader) {
        var compression, localExtraFieldsLength;

        // we already know everything from the central dir !
        // If the central dir data are false, we are doomed.
        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.
        // The less data we get here, the more reliable this should be.
        // Let's skip the whole header and dash to the data !
        reader.skip(22);
        // in some zip created on windows, the filename stored in the central dir contains \ instead of /.
        // Strangely, the filename here is OK.
        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes
        // or APPNOTE#4.4.17.1, "All slashes MUST be forward slashes '/'") but there are a lot of bad zip generators...
        // Search "unzip mismatching "local" filename continuing with "central" filename version" on
        // the internet.
        //
        // I think I see the logic here : the central directory is used to display
        // content and the local directory is used to extract the files. Mixing / and \
        // may be used to display \ to windows users and use / when extracting the files.
        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394
        this.fileNameLength = reader.readInt(2);
        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir
        this.fileName = reader.readString(this.fileNameLength);
        reader.skip(localExtraFieldsLength);

        if (this.compressedSize == -1 || this.uncompressedSize == -1) {
            throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory " + "(compressedSize == -1 || uncompressedSize == -1)");
        }

        compression = utils.findCompression(this.compressionMethod);
        if (compression === null) { // no compression found
            throw new Error("Corrupted zip : compression " + utils.pretty(this.compressionMethod) + " unknown (inner file : " + this.fileName + ")");
        }
        this.decompressed = new CompressedObject();
        this.decompressed.compressedSize = this.compressedSize;
        this.decompressed.uncompressedSize = this.uncompressedSize;
        this.decompressed.crc32 = this.crc32;
        this.decompressed.compressionMethod = this.compressionMethod;
        this.decompressed.getCompressedContent = this.prepareCompressedContent(reader, reader.index, this.compressedSize, compression);
        this.decompressed.getContent = this.prepareContent(reader, reader.index, this.compressedSize, compression, this.uncompressedSize);

        // we need to compute the crc32...
        if (this.loadOptions.checkCRC32) {
            this.decompressed = utils.transformTo("string", this.decompressed.getContent());
            if (jszipProto.crc32(this.decompressed) !== this.crc32) {
                throw new Error("Corrupted zip : CRC32 mismatch");
            }
        }
    },

    /**
     * Read the central part of a zip file and add the info in this object.
     * @param {DataReader} reader the reader to use.
     */
    readCentralPart: function(reader) {
        this.versionMadeBy = reader.readString(2);
        this.versionNeeded = reader.readInt(2);
        this.bitFlag = reader.readInt(2);
        this.compressionMethod = reader.readString(2);
        this.date = reader.readDate();
        this.crc32 = reader.readInt(4);
        this.compressedSize = reader.readInt(4);
        this.uncompressedSize = reader.readInt(4);
        this.fileNameLength = reader.readInt(2);
        this.extraFieldsLength = reader.readInt(2);
        this.fileCommentLength = reader.readInt(2);
        this.diskNumberStart = reader.readInt(2);
        this.internalFileAttributes = reader.readInt(2);
        this.externalFileAttributes = reader.readInt(4);
        this.localHeaderOffset = reader.readInt(4);

        if (this.isEncrypted()) {
            throw new Error("Encrypted zip are not supported");
        }

        this.fileName = reader.readString(this.fileNameLength);
        this.readExtraFields(reader);
        this.parseZIP64ExtraField(reader);
        this.fileComment = reader.readString(this.fileCommentLength);

        // warning, this is true only for zip with madeBy == DOS (plateform dependent feature)
        this.dir = this.externalFileAttributes & 0x00000010 ? true : false;
    },
    /**
     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.
     * @param {DataReader} reader the reader to use.
     */
    parseZIP64ExtraField: function(reader) {

        if (!this.extraFields[0x0001]) {
            return;
        }

        // should be something, preparing the extra reader
        var extraReader = new StringReader(this.extraFields[0x0001].value);

        // I really hope that these 64bits integer can fit in 32 bits integer, because js
        // won't let us have more.
        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {
            this.uncompressedSize = extraReader.readInt(8);
        }
        if (this.compressedSize === utils.MAX_VALUE_32BITS) {
            this.compressedSize = extraReader.readInt(8);
        }
        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {
            this.localHeaderOffset = extraReader.readInt(8);
        }
        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {
            this.diskNumberStart = extraReader.readInt(4);
        }
    },
    /**
     * Read the central part of a zip file and add the info in this object.
     * @param {DataReader} reader the reader to use.
     */
    readExtraFields: function(reader) {
        var start = reader.index,
            extraFieldId,
            extraFieldLength,
            extraFieldValue;

        this.extraFields = this.extraFields || {};

        while (reader.index < start + this.extraFieldsLength) {
            extraFieldId = reader.readInt(2);
            extraFieldLength = reader.readInt(2);
            extraFieldValue = reader.readString(extraFieldLength);

            this.extraFields[extraFieldId] = {
                id: extraFieldId,
                length: extraFieldLength,
                value: extraFieldValue
            };
        }
    },
    /**
     * Apply an UTF8 transformation if needed.
     */
    handleUTF8: function() {
        if (this.useUTF8()) {
            this.fileName = jszipProto.utf8decode(this.fileName);
            this.fileComment = jszipProto.utf8decode(this.fileComment);
        } else {
            var upath = this.findExtraFieldUnicodePath();
            if (upath !== null) {
                this.fileName = upath;
            }
        }
    },

    /**
     * Find the unicode path declared in the extra field, if any.
     * @return {String} the unicode path, null otherwise.
     */
    findExtraFieldUnicodePath: function() {
        var upathField = this.extraFields[0x7075];
        if (upathField) {
            var extraReader = new StringReader(upathField.value);

            // wrong version
            if (extraReader.readInt(1) !== 1) {
                return null;
            }

            // the crc of the filename changed, this field is out of date.
            if (jszipProto.crc32(this.fileName) !== extraReader.readInt(4)) {
                return null;
            }

            return jszipProto.utf8decode(extraReader.readString(upathField.length - 5));
        }
        return null;
    }
};
module.exports = ZipEntry;

},{"./compressedObject":2,"./object":9,"./stringReader":11,"./utils":14}],17:[function(require,module,exports){

},{}],18:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],19:[function(require,module,exports){
/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {var n=void 0,u=!0,aa=this;function ba(e,d){var c=e.split("."),f=aa;!(c[0]in f)&&f.execScript&&f.execScript("var "+c[0]);for(var a;c.length&&(a=c.shift());)!c.length&&d!==n?f[a]=d:f=f[a]?f[a]:f[a]={}};var C="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Uint32Array&&"undefined"!==typeof DataView;function K(e,d){this.index="number"===typeof d?d:0;this.d=0;this.buffer=e instanceof(C?Uint8Array:Array)?e:new (C?Uint8Array:Array)(32768);if(2*this.buffer.length<=this.index)throw Error("invalid index");this.buffer.length<=this.index&&ca(this)}function ca(e){var d=e.buffer,c,f=d.length,a=new (C?Uint8Array:Array)(f<<1);if(C)a.set(d);else for(c=0;c<f;++c)a[c]=d[c];return e.buffer=a}
K.prototype.a=function(e,d,c){var f=this.buffer,a=this.index,b=this.d,k=f[a],m;c&&1<d&&(e=8<d?(L[e&255]<<24|L[e>>>8&255]<<16|L[e>>>16&255]<<8|L[e>>>24&255])>>32-d:L[e]>>8-d);if(8>d+b)k=k<<d|e,b+=d;else for(m=0;m<d;++m)k=k<<1|e>>d-m-1&1,8===++b&&(b=0,f[a++]=L[k],k=0,a===f.length&&(f=ca(this)));f[a]=k;this.buffer=f;this.d=b;this.index=a};K.prototype.finish=function(){var e=this.buffer,d=this.index,c;0<this.d&&(e[d]<<=8-this.d,e[d]=L[e[d]],d++);C?c=e.subarray(0,d):(e.length=d,c=e);return c};
var ga=new (C?Uint8Array:Array)(256),M;for(M=0;256>M;++M){for(var R=M,S=R,ha=7,R=R>>>1;R;R>>>=1)S<<=1,S|=R&1,--ha;ga[M]=(S<<ha&255)>>>0}var L=ga;function ja(e){this.buffer=new (C?Uint16Array:Array)(2*e);this.length=0}ja.prototype.getParent=function(e){return 2*((e-2)/4|0)};ja.prototype.push=function(e,d){var c,f,a=this.buffer,b;c=this.length;a[this.length++]=d;for(a[this.length++]=e;0<c;)if(f=this.getParent(c),a[c]>a[f])b=a[c],a[c]=a[f],a[f]=b,b=a[c+1],a[c+1]=a[f+1],a[f+1]=b,c=f;else break;return this.length};
ja.prototype.pop=function(){var e,d,c=this.buffer,f,a,b;d=c[0];e=c[1];this.length-=2;c[0]=c[this.length];c[1]=c[this.length+1];for(b=0;;){a=2*b+2;if(a>=this.length)break;a+2<this.length&&c[a+2]>c[a]&&(a+=2);if(c[a]>c[b])f=c[b],c[b]=c[a],c[a]=f,f=c[b+1],c[b+1]=c[a+1],c[a+1]=f;else break;b=a}return{index:e,value:d,length:this.length}};function ka(e,d){this.e=ma;this.f=0;this.input=C&&e instanceof Array?new Uint8Array(e):e;this.c=0;d&&(d.lazy&&(this.f=d.lazy),"number"===typeof d.compressionType&&(this.e=d.compressionType),d.outputBuffer&&(this.b=C&&d.outputBuffer instanceof Array?new Uint8Array(d.outputBuffer):d.outputBuffer),"number"===typeof d.outputIndex&&(this.c=d.outputIndex));this.b||(this.b=new (C?Uint8Array:Array)(32768))}var ma=2,T=[],U;
for(U=0;288>U;U++)switch(u){case 143>=U:T.push([U+48,8]);break;case 255>=U:T.push([U-144+400,9]);break;case 279>=U:T.push([U-256+0,7]);break;case 287>=U:T.push([U-280+192,8]);break;default:throw"invalid literal: "+U;}
ka.prototype.h=function(){var e,d,c,f,a=this.input;switch(this.e){case 0:c=0;for(f=a.length;c<f;){d=C?a.subarray(c,c+65535):a.slice(c,c+65535);c+=d.length;var b=d,k=c===f,m=n,g=n,p=n,v=n,x=n,l=this.b,h=this.c;if(C){for(l=new Uint8Array(this.b.buffer);l.length<=h+b.length+5;)l=new Uint8Array(l.length<<1);l.set(this.b)}m=k?1:0;l[h++]=m|0;g=b.length;p=~g+65536&65535;l[h++]=g&255;l[h++]=g>>>8&255;l[h++]=p&255;l[h++]=p>>>8&255;if(C)l.set(b,h),h+=b.length,l=l.subarray(0,h);else{v=0;for(x=b.length;v<x;++v)l[h++]=
b[v];l.length=h}this.c=h;this.b=l}break;case 1:var q=new K(C?new Uint8Array(this.b.buffer):this.b,this.c);q.a(1,1,u);q.a(1,2,u);var t=na(this,a),w,da,z;w=0;for(da=t.length;w<da;w++)if(z=t[w],K.prototype.a.apply(q,T[z]),256<z)q.a(t[++w],t[++w],u),q.a(t[++w],5),q.a(t[++w],t[++w],u);else if(256===z)break;this.b=q.finish();this.c=this.b.length;break;case ma:var B=new K(C?new Uint8Array(this.b.buffer):this.b,this.c),ra,J,N,O,P,Ia=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],W,sa,X,ta,ea,ia=Array(19),
ua,Q,fa,y,va;ra=ma;B.a(1,1,u);B.a(ra,2,u);J=na(this,a);W=oa(this.j,15);sa=pa(W);X=oa(this.i,7);ta=pa(X);for(N=286;257<N&&0===W[N-1];N--);for(O=30;1<O&&0===X[O-1];O--);var wa=N,xa=O,F=new (C?Uint32Array:Array)(wa+xa),r,G,s,Y,E=new (C?Uint32Array:Array)(316),D,A,H=new (C?Uint8Array:Array)(19);for(r=G=0;r<wa;r++)F[G++]=W[r];for(r=0;r<xa;r++)F[G++]=X[r];if(!C){r=0;for(Y=H.length;r<Y;++r)H[r]=0}r=D=0;for(Y=F.length;r<Y;r+=G){for(G=1;r+G<Y&&F[r+G]===F[r];++G);s=G;if(0===F[r])if(3>s)for(;0<s--;)E[D++]=0,
H[0]++;else for(;0<s;)A=138>s?s:138,A>s-3&&A<s&&(A=s-3),10>=A?(E[D++]=17,E[D++]=A-3,H[17]++):(E[D++]=18,E[D++]=A-11,H[18]++),s-=A;else if(E[D++]=F[r],H[F[r]]++,s--,3>s)for(;0<s--;)E[D++]=F[r],H[F[r]]++;else for(;0<s;)A=6>s?s:6,A>s-3&&A<s&&(A=s-3),E[D++]=16,E[D++]=A-3,H[16]++,s-=A}e=C?E.subarray(0,D):E.slice(0,D);ea=oa(H,7);for(y=0;19>y;y++)ia[y]=ea[Ia[y]];for(P=19;4<P&&0===ia[P-1];P--);ua=pa(ea);B.a(N-257,5,u);B.a(O-1,5,u);B.a(P-4,4,u);for(y=0;y<P;y++)B.a(ia[y],3,u);y=0;for(va=e.length;y<va;y++)if(Q=
e[y],B.a(ua[Q],ea[Q],u),16<=Q){y++;switch(Q){case 16:fa=2;break;case 17:fa=3;break;case 18:fa=7;break;default:throw"invalid code: "+Q;}B.a(e[y],fa,u)}var ya=[sa,W],za=[ta,X],I,Aa,Z,la,Ba,Ca,Da,Ea;Ba=ya[0];Ca=ya[1];Da=za[0];Ea=za[1];I=0;for(Aa=J.length;I<Aa;++I)if(Z=J[I],B.a(Ba[Z],Ca[Z],u),256<Z)B.a(J[++I],J[++I],u),la=J[++I],B.a(Da[la],Ea[la],u),B.a(J[++I],J[++I],u);else if(256===Z)break;this.b=B.finish();this.c=this.b.length;break;default:throw"invalid compression type";}return this.b};
function qa(e,d){this.length=e;this.g=d}
var Fa=function(){function e(a){switch(u){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,
a-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:throw"invalid length: "+a;}}var d=[],c,f;for(c=3;258>=c;c++)f=e(c),d[c]=f[2]<<24|
f[1]<<16|f[0];return d}(),Ga=C?new Uint32Array(Fa):Fa;
function na(e,d){function c(a,c){var b=a.g,d=[],f=0,e;e=Ga[a.length];d[f++]=e&65535;d[f++]=e>>16&255;d[f++]=e>>24;var g;switch(u){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-
65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=
b:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:throw"invalid distance";}e=g;d[f++]=e[0];d[f++]=e[1];d[f++]=e[2];var k,m;k=0;for(m=d.length;k<m;++k)l[h++]=d[k];t[d[0]]++;w[d[3]]++;q=a.length+c-1;x=null}var f,a,b,k,m,g={},p,v,x,l=C?new Uint16Array(2*d.length):[],h=0,q=0,t=new (C?Uint32Array:Array)(286),w=new (C?Uint32Array:Array)(30),da=e.f,z;if(!C){for(b=0;285>=b;)t[b++]=0;for(b=0;29>=b;)w[b++]=0}t[256]=1;f=0;for(a=d.length;f<a;++f){b=
m=0;for(k=3;b<k&&f+b!==a;++b)m=m<<8|d[f+b];g[m]===n&&(g[m]=[]);p=g[m];if(!(0<q--)){for(;0<p.length&&32768<f-p[0];)p.shift();if(f+3>=a){x&&c(x,-1);b=0;for(k=a-f;b<k;++b)z=d[f+b],l[h++]=z,++t[z];break}0<p.length?(v=Ha(d,f,p),x?x.length<v.length?(z=d[f-1],l[h++]=z,++t[z],c(v,0)):c(x,-1):v.length<da?x=v:c(v,0)):x?c(x,-1):(z=d[f],l[h++]=z,++t[z])}p.push(f)}l[h++]=256;t[256]++;e.j=t;e.i=w;return C?l.subarray(0,h):l}
function Ha(e,d,c){var f,a,b=0,k,m,g,p,v=e.length;m=0;p=c.length;a:for(;m<p;m++){f=c[p-m-1];k=3;if(3<b){for(g=b;3<g;g--)if(e[f+g-1]!==e[d+g-1])continue a;k=b}for(;258>k&&d+k<v&&e[f+k]===e[d+k];)++k;k>b&&(a=f,b=k);if(258===k)break}return new qa(b,d-a)}
function oa(e,d){var c=e.length,f=new ja(572),a=new (C?Uint8Array:Array)(c),b,k,m,g,p;if(!C)for(g=0;g<c;g++)a[g]=0;for(g=0;g<c;++g)0<e[g]&&f.push(g,e[g]);b=Array(f.length/2);k=new (C?Uint32Array:Array)(f.length/2);if(1===b.length)return a[f.pop().index]=1,a;g=0;for(p=f.length/2;g<p;++g)b[g]=f.pop(),k[g]=b[g].value;m=Ja(k,k.length,d);g=0;for(p=b.length;g<p;++g)a[b[g].index]=m[g];return a}
function Ja(e,d,c){function f(a){var b=g[a][p[a]];b===d?(f(a+1),f(a+1)):--k[b];++p[a]}var a=new (C?Uint16Array:Array)(c),b=new (C?Uint8Array:Array)(c),k=new (C?Uint8Array:Array)(d),m=Array(c),g=Array(c),p=Array(c),v=(1<<c)-d,x=1<<c-1,l,h,q,t,w;a[c-1]=d;for(h=0;h<c;++h)v<x?b[h]=0:(b[h]=1,v-=x),v<<=1,a[c-2-h]=(a[c-1-h]/2|0)+d;a[0]=b[0];m[0]=Array(a[0]);g[0]=Array(a[0]);for(h=1;h<c;++h)a[h]>2*a[h-1]+b[h]&&(a[h]=2*a[h-1]+b[h]),m[h]=Array(a[h]),g[h]=Array(a[h]);for(l=0;l<d;++l)k[l]=c;for(q=0;q<a[c-1];++q)m[c-
1][q]=e[q],g[c-1][q]=q;for(l=0;l<c;++l)p[l]=0;1===b[c-1]&&(--k[0],++p[c-1]);for(h=c-2;0<=h;--h){t=l=0;w=p[h+1];for(q=0;q<a[h];q++)t=m[h+1][w]+m[h+1][w+1],t>e[l]?(m[h][q]=t,g[h][q]=d,w+=2):(m[h][q]=e[l],g[h][q]=l,++l);p[h]=0;1===b[h]&&f(h)}return k}
function pa(e){var d=new (C?Uint16Array:Array)(e.length),c=[],f=[],a=0,b,k,m,g;b=0;for(k=e.length;b<k;b++)c[e[b]]=(c[e[b]]|0)+1;b=1;for(k=16;b<=k;b++)f[b]=a,a+=c[b]|0,a<<=1;b=0;for(k=e.length;b<k;b++){a=f[e[b]];f[e[b]]+=1;m=d[b]=0;for(g=e[b];m<g;m++)d[b]=d[b]<<1|a&1,a>>>=1}return d};ba("Zlib.RawDeflate",ka);ba("Zlib.RawDeflate.prototype.compress",ka.prototype.h);var Ka={NONE:0,FIXED:1,DYNAMIC:ma},V,La,$,Ma;if(Object.keys)V=Object.keys(Ka);else for(La in V=[],$=0,Ka)V[$++]=La;$=0;for(Ma=V.length;$<Ma;++$)La=V[$],ba("Zlib.RawDeflate.CompressionType."+La,Ka[La]);}).call(this); 

},{}],20:[function(require,module,exports){
/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {var l=this;function p(b,e){var a=b.split("."),c=l;!(a[0]in c)&&c.execScript&&c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&void 0!==e?c[d]=e:c=c[d]?c[d]:c[d]={}};var q="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Uint32Array&&"undefined"!==typeof DataView;function t(b){var e=b.length,a=0,c=Number.POSITIVE_INFINITY,d,f,g,h,k,m,r,n,s,J;for(n=0;n<e;++n)b[n]>a&&(a=b[n]),b[n]<c&&(c=b[n]);d=1<<a;f=new (q?Uint32Array:Array)(d);g=1;h=0;for(k=2;g<=a;){for(n=0;n<e;++n)if(b[n]===g){m=0;r=h;for(s=0;s<g;++s)m=m<<1|r&1,r>>=1;J=g<<16|n;for(s=m;s<d;s+=k)f[s]=J;++h}++g;h<<=1;k<<=1}return[f,a,c]};function u(b,e){this.g=[];this.h=32768;this.c=this.f=this.d=this.k=0;this.input=q?new Uint8Array(b):b;this.l=!1;this.i=v;this.q=!1;if(e||!(e={}))e.index&&(this.d=e.index),e.bufferSize&&(this.h=e.bufferSize),e.bufferType&&(this.i=e.bufferType),e.resize&&(this.q=e.resize);switch(this.i){case w:this.a=32768;this.b=new (q?Uint8Array:Array)(32768+this.h+258);break;case v:this.a=0;this.b=new (q?Uint8Array:Array)(this.h);this.e=this.v;this.m=this.s;this.j=this.t;break;default:throw Error("invalid inflate mode");
}}var w=0,v=1;
u.prototype.u=function(){for(;!this.l;){var b=x(this,3);b&1&&(this.l=!0);b>>>=1;switch(b){case 0:var e=this.input,a=this.d,c=this.b,d=this.a,f=e.length,g=void 0,h=void 0,k=c.length,m=void 0;this.c=this.f=0;if(a+1>=f)throw Error("invalid uncompressed block header: LEN");g=e[a++]|e[a++]<<8;if(a+1>=f)throw Error("invalid uncompressed block header: NLEN");h=e[a++]|e[a++]<<8;if(g===~h)throw Error("invalid uncompressed block header: length verify");if(a+g>e.length)throw Error("input buffer is broken");switch(this.i){case w:for(;d+
g>c.length;){m=k-d;g-=m;if(q)c.set(e.subarray(a,a+m),d),d+=m,a+=m;else for(;m--;)c[d++]=e[a++];this.a=d;c=this.e();d=this.a}break;case v:for(;d+g>c.length;)c=this.e({o:2});break;default:throw Error("invalid inflate mode");}if(q)c.set(e.subarray(a,a+g),d),d+=g,a+=g;else for(;g--;)c[d++]=e[a++];this.d=a;this.a=d;this.b=c;break;case 1:this.j(y,z);break;case 2:A(this);break;default:throw Error("unknown BTYPE: "+b);}}return this.m()};
var B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],C=q?new Uint16Array(B):B,D=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],E=q?new Uint16Array(D):D,F=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],G=q?new Uint8Array(F):F,H=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],I=q?new Uint16Array(H):H,K=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,
13],L=q?new Uint8Array(K):K,M=new (q?Uint8Array:Array)(288),N,O;N=0;for(O=M.length;N<O;++N)M[N]=143>=N?8:255>=N?9:279>=N?7:8;var y=t(M),P=new (q?Uint8Array:Array)(30),Q,R;Q=0;for(R=P.length;Q<R;++Q)P[Q]=5;var z=t(P);function x(b,e){for(var a=b.f,c=b.c,d=b.input,f=b.d,g=d.length,h;c<e;){if(f>=g)throw Error("input buffer is broken");a|=d[f++]<<c;c+=8}h=a&(1<<e)-1;b.f=a>>>e;b.c=c-e;b.d=f;return h}
function S(b,e){for(var a=b.f,c=b.c,d=b.input,f=b.d,g=d.length,h=e[0],k=e[1],m,r;c<k&&!(f>=g);)a|=d[f++]<<c,c+=8;m=h[a&(1<<k)-1];r=m>>>16;b.f=a>>r;b.c=c-r;b.d=f;return m&65535}
function A(b){function e(a,b,c){var e,d=this.p,f,g;for(g=0;g<a;)switch(e=S(this,b),e){case 16:for(f=3+x(this,2);f--;)c[g++]=d;break;case 17:for(f=3+x(this,3);f--;)c[g++]=0;d=0;break;case 18:for(f=11+x(this,7);f--;)c[g++]=0;d=0;break;default:d=c[g++]=e}this.p=d;return c}var a=x(b,5)+257,c=x(b,5)+1,d=x(b,4)+4,f=new (q?Uint8Array:Array)(C.length),g,h,k,m;for(m=0;m<d;++m)f[C[m]]=x(b,3);if(!q){m=d;for(d=f.length;m<d;++m)f[C[m]]=0}g=t(f);h=new (q?Uint8Array:Array)(a);k=new (q?Uint8Array:Array)(c);b.p=0;
b.j(t(e.call(b,a,g,h)),t(e.call(b,c,g,k)))}u.prototype.j=function(b,e){var a=this.b,c=this.a;this.n=b;for(var d=a.length-258,f,g,h,k;256!==(f=S(this,b));)if(256>f)c>=d&&(this.a=c,a=this.e(),c=this.a),a[c++]=f;else{g=f-257;k=E[g];0<G[g]&&(k+=x(this,G[g]));f=S(this,e);h=I[f];0<L[f]&&(h+=x(this,L[f]));c>=d&&(this.a=c,a=this.e(),c=this.a);for(;k--;)a[c]=a[c++-h]}for(;8<=this.c;)this.c-=8,this.d--;this.a=c};
u.prototype.t=function(b,e){var a=this.b,c=this.a;this.n=b;for(var d=a.length,f,g,h,k;256!==(f=S(this,b));)if(256>f)c>=d&&(a=this.e(),d=a.length),a[c++]=f;else{g=f-257;k=E[g];0<G[g]&&(k+=x(this,G[g]));f=S(this,e);h=I[f];0<L[f]&&(h+=x(this,L[f]));c+k>d&&(a=this.e(),d=a.length);for(;k--;)a[c]=a[c++-h]}for(;8<=this.c;)this.c-=8,this.d--;this.a=c};
u.prototype.e=function(){var b=new (q?Uint8Array:Array)(this.a-32768),e=this.a-32768,a,c,d=this.b;if(q)b.set(d.subarray(32768,b.length));else{a=0;for(c=b.length;a<c;++a)b[a]=d[a+32768]}this.g.push(b);this.k+=b.length;if(q)d.set(d.subarray(e,e+32768));else for(a=0;32768>a;++a)d[a]=d[e+a];this.a=32768;return d};
u.prototype.v=function(b){var e,a=this.input.length/this.d+1|0,c,d,f,g=this.input,h=this.b;b&&("number"===typeof b.o&&(a=b.o),"number"===typeof b.r&&(a+=b.r));2>a?(c=(g.length-this.d)/this.n[2],f=258*(c/2)|0,d=f<h.length?h.length+f:h.length<<1):d=h.length*a;q?(e=new Uint8Array(d),e.set(h)):e=h;return this.b=e};
u.prototype.m=function(){var b=0,e=this.b,a=this.g,c,d=new (q?Uint8Array:Array)(this.k+(this.a-32768)),f,g,h,k;if(0===a.length)return q?this.b.subarray(32768,this.a):this.b.slice(32768,this.a);f=0;for(g=a.length;f<g;++f){c=a[f];h=0;for(k=c.length;h<k;++h)d[b++]=c[h]}f=32768;for(g=this.a;f<g;++f)d[b++]=e[f];this.g=[];return this.buffer=d};
u.prototype.s=function(){var b,e=this.a;q?this.q?(b=new Uint8Array(e),b.set(this.b.subarray(0,e))):b=this.b.subarray(0,e):(this.b.length>e&&(this.b.length=e),b=this.b);return this.buffer=b};p("Zlib.RawInflate",u);p("Zlib.RawInflate.prototype.decompress",u.prototype.u);var T={ADAPTIVE:v,BLOCK:w},U,V,W,X;if(Object.keys)U=Object.keys(T);else for(V in U=[],W=0,T)U[W++]=V;W=0;for(X=U.length;W<X;++W)V=U[W],p("Zlib.RawInflate.BufferType."+V,T[V]);}).call(this); 

},{}]},{},[7])
(7)
});
;
/*globals define */
/**
 * Generated by PluginGenerator from webgme on Thu May 08 2014 17:59:46 GMT-0500 (CDT).
 */

define('plugin/AcmImporter/AcmImporter/AcmImporter',['plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/AcmImporter/AcmImporter/meta',
    'jszip',
    'xmljsonconverter'], function (PluginConfig, PluginBase, MetaTypes, JSZip, Xml2Json) {
    

    /**
     * Initializes a new instance of AcmImporter.
     * @class
     * @augments {PluginBase}
     * @classdesc This class represents the plugin AcmImporter.
     * @constructor
     */
    var AcmImporter = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.metaTypes = MetaTypes;
        this.id2NodeMap = {};
        this.valueFlowIdMap = {};
        this.recursionCounter = 0;
        this.id2ComponentMap = {};
        this.deleteExisting = false;
        this.cleanImport = true;
        this.projectNode = null;

        //this.propertyJson = {};
    };

    // Prototypal inheritance from PluginBase.
    AcmImporter.prototype = Object.create(PluginBase.prototype);
    AcmImporter.prototype.constructor = AcmImporter;

    /**
     * Gets the name of the AcmImporter.
     * @returns {string} The name of the plugin.
     * @public
     */
    AcmImporter.prototype.getName = function () {
        return "ACM Importer";
    };

    /**
     * Gets the semantic version (semver.org) of the AcmImporter.
     * @returns {string} The version of the plugin.
     * @public
     */
    AcmImporter.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
     * Gets the description of the AcmImporter.
     * @returns {string} The description of the plugin.
     * @public
     */
    AcmImporter.prototype.getDescription = function () {
        return "Imports one or more *.acm files and creates the WebGME objects";
    };

    /**
     * Gets the configuration structure for the AcmImporter.
     * The ConfigurationStructure defines the configuration for the plugin
     * and will be used to populate the GUI when invoking the plugin from webGME.
     * @returns {object} The version of the plugin.
     * @public
     */
    AcmImporter.prototype.getConfigStructure = function () {
        return [
            {
                "name": "UploadedFile",  // May be a single .acm or a zip containing several
                "displayName": "ACMs",
                "description": "Click and drag one or more *.acm files",
                //"value": "1eaa1570554d13e407265713cb8e93388f6908c8",
                //"value": "001ccfcecbe33a9512cc6fbbdc5947d363deb273",
                "value": "",  // FinalDrive w/2 classifications
                "valueType": "asset",
                "readOnly": false
            },
            {
                "name": "VulcanLink",  // May be a single .acm or a zip containing several
                "displayName": "ACM Link",
                "description": "Drag component link here",
                "value": "",
                "valueType": "vulcanLink",
                "readOnly": false
            },
            {
                "name": "DeleteExisting",
                "displayName": "DeleteExisting",
                "description": "Deletes any existing AVMComponent with matching ID",
                "value": false,
                "valueType": "boolean",
                "readOnly": false
            }
        ];
    };

    /**
     * Main function for the plugin to execute. This will perform the execution.
     * Notes:
     * - Always log with the provided logger.[error,warning,info,debug].
     * - Do NOT put any user interaction logic UI, etc. inside this method.
     * - callback always has to be called even if error happened.
     *
     * @param {function(string, plugin.PluginResult)} mainCallback - the result callback
     */
    AcmImporter.prototype.main = function (mainCallback) {
        var self = this,
            acmFolderNode,
            currentConfig = self.getCurrentConfig(),
            uploadedFileHash = currentConfig.UploadedFile || currentConfig.VulcanLink,
        //uploadedFileHash = 'e0ebaea243ad1f5dc8278638c36d8a6fc03f0ab7',
            newAcm,
            numUploaded,
            numExisting = 0,  // count any existing (acm) objects in this folder
            numCreated = 0,
            xPosition,
            yPosition,
            xOffset = 100,
            yOffset = 100,
            xSpacing = 200,
            ySpacing = 200,
            componentsPerRow = 6;

        if (!self.activeNode) {
            self.createMessage(null, 'Active node not found! Try selecting another model and re-opening the desired model', 'error');
            mainCallback('Active node not found!', self.result);
            return;
        }

        self.updateMETA(self.metaTypes);

        if (!self.isMetaTypeOf(self.activeNode, MetaTypes.ACMFolder)) {
            var msg = "AcmImporter must be called from an ACMFolder!";
            self.logger.error(msg);
            self.createMessage(self.activeNode, msg, 'error');
            self.result.setSuccess(false);
            mainCallback(null, self.result);
            return;
        }

        acmFolderNode = self.activeNode;

        self.projectNode = self.getWorkspaceNode(acmFolderNode);
        self.deleteExisting = currentConfig.DeleteExisting;

        var findComponentsCallback = function () {
            var loadChildrenCallback = function (err, children) {
                if (err) {
                    self.createMessage(acmFolderNode, 'Could not load children of ' + self.core.getName(acmFolderNode), 'error');
                    self.logger.error('Could not load children of ' + self.core.getName(acmFolderNode) + ', err: ' + err);
                    self.result.setSuccess(false);
                    mainCallback(err, self.result);
                    return;
                }

                numExisting = children.length;

                var getAcmDescriptionCallback = function (err, hash2acmJsonMap) {
                    if (err) {
                        mainCallback(err, self.result);
                        return;
                    }

                    numUploaded = Object.keys(hash2acmJsonMap).length;

                    var acmJson;

                    for (var hash in hash2acmJsonMap) {
                        acmJson = hash2acmJsonMap[hash];
                        newAcm = self.createNewAcm(acmFolderNode, hash, acmJson);

                        xPosition = xOffset + xSpacing * (numExisting % componentsPerRow);
                        yPosition = yOffset + ySpacing * (Math.floor(numExisting / componentsPerRow));
                        self.core.setRegistry(newAcm, 'position', {x: xPosition, y: yPosition});

                        numExisting += 1;
                        numCreated += 1;
                    }

                    //var propertyString = JSON.stringify(self.propertyJson, null, 4);

                    self.save('added obj', function (err) {
                        if (err) {
                            mainCallback(err, self.result);
                            return;
                        }
                        if (numUploaded > 1) {
                            self.createMessage(acmFolderNode, numCreated + ' ACMs created out of ' + numUploaded + ' uploaded.', 'info');
                        }
                        if (self.cleanImport === true) {
                            self.result.setSuccess(true);
                        } else {
                            self.result.setSuccess(false);
                        }

                        mainCallback(null, self.result);
                    });
                };

                self.getAcmDetails(uploadedFileHash, getAcmDescriptionCallback);
            };

            self.core.loadChildren(acmFolderNode, loadChildrenCallback);
        };
        self.findComponentsRecursive(self.projectNode, findComponentsCallback);
    };

    AcmImporter.prototype.getWorkspaceNode = function (node) {
        var self = this;
        while (node) {
            if (self.isMetaTypeOf(node, self.metaTypes.WorkSpace)) {
                self.logger.info('Found work-space node : ' + self.core.getAttribute(node, 'name'));
                return node;
            }
            node = self.core.getParent(node);
        }
        self.logger.error('Could not find work-space node!!');
    };

    AcmImporter.prototype.findComponentsRecursive = function (node, callback) {
        // TODO: Error handling
        var self = this,
            metaTypeName = self.core.getAttribute(self.getMetaType(node), 'name'),
            loadChildrenCallback = function (err, children) {
                self.recursionCounter += children.length;

                for (var i = 0; i < children.length; i += 1) {
                    self.findComponentsRecursive(children[i], callback);
                }

                self.recursionCounter -= 1;

                if (self.recursionCounter === 0) {
                    callback();
                }
            };

        if (metaTypeName === 'WorkSpace') {
            self.recursionCounter += 1;
            self.core.loadChildren(node, loadChildrenCallback);
        } else if (metaTypeName === 'ACMFolder') {
            self.core.loadChildren(node, loadChildrenCallback);
        } else {
            if (metaTypeName === 'AVMComponentModel') {
                // Check if id2ComponentMap already has the ID - if so create a message about that node and overwrite it
                // in the map.
                self.id2ComponentMap[self.core.getAttribute(node, 'ID')] = node;
            }

            self.recursionCounter -= 1;

            if (self.recursionCounter === 0) {
                callback();
            }
        }
    };

    AcmImporter.prototype.createNewAcm = function (acmFolderNode, hash, acmJson) {
        var self = this,
            existingAcmNodeWithSameId,
            existingAcmParentFolder,
            newAcmNode,
            avmComponent = acmJson['Component'] || acmJson['avm:Component'],
            name = avmComponent['@Name'],
            id = avmComponent['@ID'],
            schemaVersion = avmComponent['@SchemaVersion'],
            version = avmComponent['@Version'],
            avmProperties,
            avmConnectors,
            avmDomainModels,
            avmPorts,
            formulas,
            i,
            msg;

        if (typeof self.metaTypes.ACMFolder !== 'object') {
            self.updateMETA(self.metaTypes);
        }

        if (self.id2ComponentMap.hasOwnProperty(id)) {
            existingAcmNodeWithSameId = self.id2ComponentMap[id];
            existingAcmParentFolder = self.core.getParent(existingAcmNodeWithSameId);

            if (self.deleteExisting) {
                self.core.deleteNode(existingAcmNodeWithSameId);
                msg = "Deleted existing AVMComponent with ID '" + id + "'";
                self.logger.warning(msg);
                self.createMessage(existingAcmParentFolder, msg, 'debug');
            } else {
                msg = "Found existing AVMComponent with ID '" + id + "'";
                self.logger.warning(msg);
                self.createMessage(existingAcmNodeWithSameId, msg, 'warning');
            }
        }

        self.logger.debug("Creating new ACM: " + name);
        newAcmNode = self.core.createNode({parent: acmFolderNode, base: MetaTypes.AVMComponentModel });
        self.id2ComponentMap[id] = newAcmNode;
        self.id2NodeMap = {};

        if (avmComponent.hasOwnProperty('Classifications') && avmComponent['Classifications']['#text']) {
            self.core.setAttribute(newAcmNode, 'Classifications', avmComponent['Classifications']['#text']);
        }

        self.core.setAttribute(newAcmNode, 'name', name);
        self.core.setAttribute(newAcmNode, 'SchemaVersion', schemaVersion);
        self.core.setAttribute(newAcmNode, 'Version', version);
        self.core.setAttribute(newAcmNode, 'ID', id);
        self.core.setAttribute(newAcmNode, 'Resource', hash);

        if (avmComponent.hasOwnProperty('Connector')) {
            avmConnectors = avmComponent['Connector'];

            for (i = 0; i < avmConnectors.length; i += 1) {
                self.createNewConnector(avmConnectors[i], newAcmNode);
            }
        }
        if (avmComponent.hasOwnProperty('Port')) {
            avmPorts = avmComponent['Port'];

            for (i = 0; i < avmPorts.length; i += 1) {
                self.createNewDomainPort(avmPorts[i], newAcmNode);
            }
        }
        if (avmComponent.hasOwnProperty('Property')) {
            avmProperties = avmComponent['Property'];

            for (i = 0; i < avmProperties.length; i += 1) {
                self.createNewProperty(avmProperties[i], newAcmNode);
            }
        }
        if (avmComponent.hasOwnProperty('DomainModel')) {
            avmDomainModels = avmComponent['DomainModel'];

            for (i = 0; i < avmDomainModels.length; i += 1) {
                self.createNewDomainModel(avmDomainModels[i], newAcmNode);
            }
        }
        if (avmComponent.hasOwnProperty('Formula')) {
            formulas = avmComponent['Formula'];

            for (i = 0; i < formulas.length; i += 1) {
                self.createNewFormula(formulas[i], newAcmNode);
            }
        }

        // make value flow connections
        self.makeValueFlows(self.valueFlowIdMap, newAcmNode);

        return newAcmNode;
    };

    AcmImporter.prototype.createNewDomainModel = function (avmDomainModelInfo, newAcmNode) {
        var self = this,
            newDomainModelNode,
            domainModelName = avmDomainModelInfo['@Name'] || "",
            domainModelType,
            xPos = parseInt(avmDomainModelInfo['@XPosition'], 10),
            yPos = parseInt(avmDomainModelInfo['@YPosition'], 10),
            modelicaClass;

        if (!domainModelName) {
            domainModelName = avmDomainModelInfo['@xsi:type'].substr(avmDomainModelInfo['@xsi:type'].indexOf(':') + 1);
        }

        newDomainModelNode = self.core.createNode({parent: newAcmNode, base: MetaTypes.DomainModel });
        self.core.setAttribute(newDomainModelNode, 'name', domainModelName);
        self.core.setRegistry(newDomainModelNode, 'position', {x: xPos, y: yPos});

        if (avmDomainModelInfo.hasOwnProperty('@xsi:type')) {
            domainModelType = avmDomainModelInfo['@xsi:type'];

            if (domainModelType === 'modelica:ModelicaModel') {
                self.core.setAttribute(newDomainModelNode, 'Type', 'Modelica');
            } else if (domainModelType === 'cad:CADModel') {
                self.core.setAttribute(newDomainModelNode, 'Type', 'CAD');
            } else if (domainModelType.indexOf('Manufacturing') > -1) {
                self.core.setAttribute(newDomainModelNode, 'Type', 'Manufacturing');
            } else if (domainModelType.indexOf('Cyber') > -1) {
                self.core.setAttribute(newDomainModelNode, 'Type', 'Cyber');
            } else if (domainModelType.indexOf('SPICEModel') > -1) {
                self.core.setAttribute(newDomainModelNode, 'Type', 'SPICE');
            } else if (domainModelType.indexOf('EDAModel') > -1) {
                self.core.setAttribute(newDomainModelNode, 'Type', 'EDA');
            } else if (domainModelType.indexOf('SystemCModel') > -1) {
                self.core.setAttribute(newDomainModelNode, 'Type', 'SystemC');
            } else if (domainModelType.indexOf('RFModel') > -1) {
                self.core.setAttribute(newDomainModelNode, 'Type', 'RF');
            }
        }

        if (avmDomainModelInfo.hasOwnProperty('@Class')) {
            modelicaClass = avmDomainModelInfo['@Class'];
            self.core.setAttribute(newDomainModelNode, 'Class', modelicaClass);
        }
    };

    AcmImporter.prototype.createNewConnector = function (avmConnInfo, newAcmNode) {
        var self = this,
            connName = avmConnInfo['@Name'],
            connId = avmConnInfo['@ID'],
            xPos = parseInt(avmConnInfo['@XPosition'], 10),
            yPos = parseInt(avmConnInfo['@YPosition'], 10),
            domainConns,
            newConnectorNode = self.core.createNode({parent: newAcmNode, base: MetaTypes.Connector }),
            newDomainConnNode,
            i;

        self.core.setAttribute(newConnectorNode, 'name', connName);
        self.core.setAttribute(newConnectorNode, 'ID', connId);
        self.core.setRegistry(newConnectorNode, 'position', {x: xPos, y: yPos});

        if (avmConnInfo.hasOwnProperty('Role')) {
            domainConns = avmConnInfo['Role'];

            for (i = 0; i < domainConns.length; i += 1) {
                newDomainConnNode = self.createNewDomainPort(domainConns[i], newConnectorNode);

                self.core.setRegistry(newDomainConnNode, 'position', {x: 200, y: 200 + 100 * i});
            }
        }

        return newConnectorNode;
    };

    AcmImporter.prototype.createNewDomainPort = function (domainConnInfo, parentNode) {
        var self = this,
            domainConnName = domainConnInfo['@Name'],
            portID = domainConnInfo['@ID'],
            domainConnType,
            newDomainConnNode = self.core.createNode({parent: parentNode, base: MetaTypes.DomainPort });

        if (domainConnInfo.hasOwnProperty('@xsi:type')) {
            domainConnType = domainConnInfo['@xsi:type'];

            if (domainConnType === 'modelica:Connector') {
                self.core.setAttribute(newDomainConnNode, 'Type', 'ModelicaConnector');

                if (domainConnInfo.hasOwnProperty('@Class')) {
                    self.core.setAttribute(newDomainConnNode, 'Class', domainConnInfo['@Class']);
                }
            } else if (domainConnType.indexOf('Axis') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'CadAxis');
            } else if (domainConnType.indexOf('CoordinateSystem') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'CadCoordinateSystem');
            } else if (domainConnType.indexOf('Plane') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'CadPlane');
            } else if (domainConnType.indexOf('Point') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'CadPoint');
            } else if (domainConnType.indexOf('Pin') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'SchematicPin');
            } else if (domainConnType.indexOf('SystemCPort') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'SystemCPort');
            } else if (domainConnType.indexOf('RFPort') > -1) {
                self.core.setAttribute(newDomainConnNode, 'Type', 'RFPort');
            }
        }

        self.core.setAttribute(newDomainConnNode, 'name', domainConnName);
        self.core.setAttribute(newDomainConnNode, 'ID', portID);

        return newDomainConnNode;
    };

    AcmImporter.prototype.createNewProperty = function (avmPropInfo, newAcmNode) {
        var self = this,
            propName = avmPropInfo['@Name'],
            propId = avmPropInfo['@ID'],
            xPos = parseInt(avmPropInfo['@XPosition'], 10),
            yPos = parseInt(avmPropInfo['@YPosition'], 10),
            avmValueInfo = self.getPropertyValue(avmPropInfo['Value']),
            dataType = avmPropInfo['Value']['@DataType'],
            newAcmPropertyNode = self.core.createNode({parent: newAcmNode, base: MetaTypes.Property });
        if (avmPropInfo['Value']['@Unit']) {
            self.core.setAttribute(newAcmPropertyNode, 'Unit', avmPropInfo['Value']['@Unit']);
        }
        self.core.setAttribute(newAcmPropertyNode, 'name', propName);
        // This behaves like desktop GME importer, although the PrimitivePropertyInstance in adm files should reference the Property/@ID (but currently they refernece the Value/@ID)
        self.core.setAttribute(newAcmPropertyNode, 'ID', avmPropInfo.Value['@ID']);
        self.core.setAttribute(newAcmPropertyNode, 'Value', avmValueInfo.value);
        self.core.setAttribute(newAcmPropertyNode, 'Minimum', avmValueInfo.min);
        self.core.setAttribute(newAcmPropertyNode, 'Maximum', avmValueInfo.max);
        self.core.setAttribute(newAcmPropertyNode, 'ValueType', avmValueInfo.type);
        self.core.setAttribute(newAcmPropertyNode, 'DataType', dataType);
        self.core.setRegistry(newAcmPropertyNode, 'position', {x: xPos, y: yPos});

        //self.propertyJson[propName] = avmPropInfo['Value'];

        self.id2NodeMap[propId] = newAcmPropertyNode;
        if (avmPropInfo.Value) {
            self.id2NodeMap[avmPropInfo.Value['@ID']] = newAcmPropertyNode;
        }
    };

    AcmImporter.prototype.getPropertyValue = function (avmValueObject) {
        var self = this,
            avmPropValueExpression,
            valueType,
            valueInfo = {
                min: '-inf',
                max: 'inf',
                default: '',
                value: '',
                type: 'Fixed'
            },
            srcId = 'src',
            dstId = 'dst';

        var getValueText = function (valueObject) {
            var valueAndText;

            if (valueObject.hasOwnProperty('Value')) {
                valueAndText = valueObject.Value;

                if (valueAndText.hasOwnProperty('#text')) {
                    return valueAndText['#text'];
                } else {
                    return '';
                }
            }
        };

        if (avmValueObject.hasOwnProperty('ValueExpression')) {
            avmPropValueExpression = avmValueObject['ValueExpression'];

            if (avmPropValueExpression.hasOwnProperty('@xsi:type')) {
                valueType = avmPropValueExpression['@xsi:type'];

                if (valueType === 'avm:ParametricValue') {
                    valueInfo.type = 'Parametric';

                    if (avmPropValueExpression.hasOwnProperty('Minimum')) {
                        valueInfo.min = getValueText(avmPropValueExpression.Minimum);
                    }
                    if (avmPropValueExpression.hasOwnProperty('Maximum')) {
                        valueInfo.max = getValueText(avmPropValueExpression.Maximum);
                    }
                    if (avmPropValueExpression.hasOwnProperty('AssignedValue')) {
                        valueInfo.value = getValueText(avmPropValueExpression.AssignedValue);
                    }
                    if (avmPropValueExpression.hasOwnProperty('Default')) {
                        valueInfo.default = getValueText(avmPropValueExpression.Default);
                    } else {
                        valueInfo.default = valueInfo.value;
                    }
                } else if (valueType === 'avm:FixedValue') {
                    valueInfo.value = getValueText(avmPropValueExpression);
                    valueInfo.default = valueInfo.value;
                } else if (valueType === 'avm:DerivedValue') {
                    if (avmValueObject.hasOwnProperty('@ID')) {
                        dstId = avmValueObject['@ID'];
                    }
                    if (avmPropValueExpression.hasOwnProperty('@ValueSource')) {
                        srcId = avmPropValueExpression['@ValueSource'];
                    }

                    if (self.valueFlowIdMap.hasOwnProperty(srcId)) {
                        self.valueFlowIdMap[srcId].push(dstId);
                    }
                    else {
                        self.valueFlowIdMap[srcId] = [dstId];
                    }
                }
            }
        }

        valueInfo.value = valueInfo.value || '';
        return valueInfo;
    };

    AcmImporter.prototype.createNewFormula = function (avmFormulaInfo, newAcmNode) {
        var self = this,
            formulaName = avmFormulaInfo['@Name'],
            formulaId = avmFormulaInfo['@ID'],
            xPos = parseInt(avmFormulaInfo['@XPosition'], 10),
            yPos = parseInt(avmFormulaInfo['@YPosition'], 10),
            formulaType = avmFormulaInfo['@xsi:type'],
            operationType,
            expression,
            operand,
            sourceIDs,
            sourceID,
            newFormulaNode,
            i;

        if (formulaType === 'avm:SimpleFormula') {
            newFormulaNode = self.core.createNode({parent: newAcmNode, base: MetaTypes.SimpleFormula});

            if (avmFormulaInfo.hasOwnProperty('@Operation')) {
                operationType = avmFormulaInfo['@Operation'];
                self.core.setAttribute(newFormulaNode, 'Method', operationType);
            }
            if (avmFormulaInfo.hasOwnProperty('@Operand')) {
                operand = avmFormulaInfo['@Operand'];
                sourceIDs = operand.split(' ');

                for (i = 0; i < sourceIDs.length; i += 1) {
                    if (self.valueFlowIdMap.hasOwnProperty(sourceIDs[i])) {
                        self.valueFlowIdMap[sourceIDs[i]].push(formulaId);
                    } else {
                        self.valueFlowIdMap[sourceIDs[i]] = [formulaId];
                    }
                }
            }
        } else if (formulaType === 'avm:ComplexFormula') {
            newFormulaNode = self.core.createNode({parent: newAcmNode, base: MetaTypes.CustomFormula});

            if (avmFormulaInfo.hasOwnProperty('@Expression')) {
                expression = avmFormulaInfo['@Expression'];
                self.core.setAttribute(newFormulaNode, 'Expression', expression);
            }
            if (avmFormulaInfo.hasOwnProperty('Operand')) {
                operand = avmFormulaInfo['Operand'];

                for (i = 0; i < operand.length; i += 1) {
                    if (operand[i].hasOwnProperty('@ValueSource')) {
                        sourceID = operand[i]['@ValueSource'];

                        if (self.valueFlowIdMap.hasOwnProperty(sourceID)) {
                            self.valueFlowIdMap[sourceID].push(formulaId);
                        } else {
                            self.valueFlowIdMap[sourceID] = [formulaId];
                        }
                    }
                }
            }
        }

        self.core.setAttribute(newFormulaNode, 'name', formulaName);
        self.core.setRegistry(newFormulaNode, 'position', {x: xPos, y: yPos});

        self.id2NodeMap[formulaId] = newFormulaNode;
    };

    AcmImporter.prototype.makeValueFlows = function (valueFlowMap, newAcmNode) {
        var self = this,
            newValueFlowNode,
            srcId,
            dstIds,
            dstId,
            srcNode,
            dstNode;

        for (srcId in valueFlowMap) {
            if (self.id2NodeMap.hasOwnProperty(srcId)) {
                srcNode = self.id2NodeMap[srcId];
            } else {
                continue;
            }

            dstIds = valueFlowMap[srcId];

            for (var i = 0; i < dstIds.length; i += 1) {
                dstId = dstIds[i];

                if (self.id2NodeMap.hasOwnProperty(dstId)) {
                    dstNode = self.id2NodeMap[dstId];

                    newValueFlowNode = self.core.createNode({parent: newAcmNode, base: MetaTypes.ValueFlowComposition});
                    self.core.setPointer(newValueFlowNode, 'src', srcNode);
                    self.core.setPointer(newValueFlowNode, 'dst', dstNode);
                } else {
                    continue;
                }
            }
        }
    };

    AcmImporter.prototype.getAcmDetails = function (fileHash, getAcmCallback) {
        var self = this,
            blobGetMetadataCallback = function (getMetadataErr, metadata) {
                if (getMetadataErr) {
                    getAcmCallback(getMetadataErr);
                    return;
                }

                var content = metadata['content'],
                    contentName = metadata['name'],
                    contentType = metadata['contentType'],
                    single = false,
                    multi = false,
                    hashToAcmJsonMap = {},
                    blobGetObjectCallback;

                if (contentType === 'complex') {
                    multi = true;
                } else if (contentType === 'object' && contentName.indexOf('.zip') > -1) {
                    single = true;
                } else {
                    var msg = 'Uploaded file "' + contentName + '" was not valid.';
                    self.createMessage(self.activeNode, msg, 'error');
                    self.logger.error(msg);
                    getAcmCallback(msg);
                    return;
                }

                blobGetObjectCallback = function (getObjectErr, uploadedObjContent) {
                    if (getObjectErr) {
                        getAcmCallback(getObjectErr);
                        return;
                    }

                    var zipFile = new JSZip(uploadedObjContent),
                        acmObjects,
                        acmObject,
                        acmContent,
                        acmZipFileName,
                        acmHash,
                        acmZipFile,
                        numberAcmFiles,
                        acmJson;

                    if (single) {
                        acmJson = self.getAcmJsonFromZip(zipFile, contentName);

                        if (acmJson != null) {
                            hashToAcmJsonMap[fileHash] = acmJson;
                        }

                        //hashToAcmJsonMap[fileHash] = self.getAcmJsonFromZip(zipFile, contentName);

                    } else if (multi) {

                        acmObjects = zipFile.file(/\.zip/);
                        numberAcmFiles = acmObjects.length;

                        for (var i = 0; i < numberAcmFiles; i += 1) {
                            acmObject = acmObjects[i];
                            acmZipFileName = acmObject.name;
                            acmContent = acmObject.asArrayBuffer();
                            acmZipFile = new JSZip(acmContent);
                            acmHash = content[acmZipFileName].content;  // blob 'soft-link' hash

                            acmJson = self.getAcmJsonFromZip(acmZipFile, acmZipFileName);

                            if (acmJson != null) {
                                hashToAcmJsonMap[acmHash] = acmJson;
                            }
                        }

                    }

                    getAcmCallback(null, hashToAcmJsonMap);
                };

                self.blobClient.getObject(fileHash, blobGetObjectCallback);
            };

        self.blobClient.getMetadata(fileHash, blobGetMetadataCallback);
    };

    AcmImporter.prototype.getAcmJsonFromZip = function (acmZip, acmZipName) {
        var self = this,
            converterResult,
            acmName = acmZipName.split('.')[0],
            acmXml = acmZip.file(/\.acm/),
            msg;

        if (acmXml.length === 1) {
            converterResult = self.convertXmlString2Json(acmXml[0].asText());

            if (converterResult instanceof Error) {
                msg = '.acm file in "' + acmZipName + '" is not a valid xml.';
                self.logger.error(msg);
                self.createMessage(null, msg, 'error');
                self.cleanImport = false;
                return null;
            } else {
                return converterResult;
            }
        } else if (acmXml.length === 0) {
            msg = 'No .acm file found inside ' + acmZipName + '.';
            self.logger.error(msg);
            self.createMessage(null, msg, 'error');
            self.cleanImport = false;
            return null;
        } else {
            msg = 'Found multiple .acm files in ' + acmZipName + '. Only one was expected.';
            self.logger.error(msg);
            self.createMessage(null, msg, 'error');
            converterResult = self.convertXmlString2Json(acmXml[0].asText());

            if (converterResult instanceof Error) {
                msg = '.acm file in ' + acmZipName + ' is not a valid xml.';
                self.logger.error(msg);
                self.createMessage(null, msg, 'error');
                self.cleanImport = false;
                return null;
            } else {
                return converterResult;
            }
        }
    };

    AcmImporter.prototype.convertXmlString2Json = function (acmXmlString) {
        var self = this,
            converter = new Xml2Json.Xml2json({
                skipWSText: true,
                arrayElements: {
                    Property: true,
                    Connector: true,
                    DomainModel: true,
                    Role: true,
                    Formula: true,
                    Operand: true,
                    Port: true
                }
            });

        return converter.convertFromString(acmXmlString);
    };

    return AcmImporter;
});
/**
* Generated by PluginGenerator from webgme on Wed Nov 19 2014 17:26:52 GMT-0600 (Central Standard Time).
*/

define('plugin/AdmImporter/AdmImporter/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'AssemblyRoot': '/1008889918/1502717053',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'ExactLayoutConstraint': '/1008889918/749469140',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'LayoutConstraint': '/1008889918/236224320',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'RangeLayoutConstraint': '/1008889918/1669293789',
        'RelativeLayoutConstraint': '/1008889918/24011457',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'WorkSpace': '/1008889918/1826321976',
        'Workflow': '/1008889918/891929219',
    };
});
/* global define,require */
/**
* Generated by PluginGenerator from webgme on Mon Apr 14 2014 10:15:45 GMT-0500 (Central Daylight Time).
*/
// TODO: Get the json data dynamically!
define('plugin/AdmImporter/AdmImporter/AdmImporter',[
    'plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/AdmImporter/AdmImporter/meta',
    'xmljsonconverter'], function (PluginConfig, PluginBase, MetaTypes, Converter) {
    
//<editor-fold desc="============================ Class Definition ================================">
    /**
    * Initializes a new instance of AdmImporter.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin AdmImporter.
    * @constructor
    */
    var AdmImporter = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = MetaTypes;
        this.acmCounter = 0;
        this.componentID2Acm = {};
        this.componentID2PrintInfo = {};
        // printInfoDataType = {
        //    name: {string},
        //    count: {int},
        //    parentName: {string}
        // };
        this.componentInstances = [];
//        componentInstancesDataType = {
//            node: {nodeObj},
//            id: {str},
//            connIdInModel2ID: {object},
//            propertyIdInModel2ID: {object},
//            portIdInModel2ID: {object},
//        };
        this.connID2Node = {};
        this.portID2Node = {};
        this.valueFlowTargetID2Node = {};
        this.valueFlows = [];
//        valueFlowsDataType = {
//            src: {string},
//            dst: {string}
//        };
        this.valueFlowMuxes = {};
        this.connectorCompositions = [];
//        connectorCompositionsDataType = {
//            src: {string},
//            dst: {string}
//        };
        this.portMaps = [];
//        portMapsDataType = {
//            src: {string},
//            dst: {string}
//        };
        this.admData = null;
        this.copies = false;
        this.currentSuccess = true;
    };

    // Prototypal inheritance from PluginBase.
    AdmImporter.prototype = Object.create(PluginBase.prototype);
    AdmImporter.prototype.constructor = AdmImporter;

    /**
    * Gets the name of the AdmImporter.
    * @returns {string} The name of the plugin.
    * @public
    */
    AdmImporter.prototype.getName = function () {
        return "ADM Importer";
    };

    /**
    * Gets the description of the AdmImporter.
    * @returns {string} The description of the plugin.
    * @public
    */
    AdmImporter.prototype.getDescription = function () {
        return "Imports an adm-file generated from desktop GME.";
    };

    /**
    * Gets the semantic version (semver.org) of the AdmImporter.
    * @returns {string} The version of the plugin.
    * @public
    */
    AdmImporter.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the configuration structure for the AdmImporter.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    AdmImporter.prototype.getConfigStructure = function () {
        return [
            {
                'name': 'admFile',
                'displayName': 'ADM file',
                'description': 'AVM Design Model.',
                'value': "",
                'valueType': 'asset',
                'readOnly': false
            }
        ];
    };
//</editor-fold>
    AdmImporter.prototype.innerMain = function (xmlArrayBuffer, callback, finnishPlugin) {
        var self = this,
            xml2json = new Converter.Xml2json({
                skipWSText: true,
                arrayElements: self.arrayElementsInXml
            }),
            admFolder = self.activeNode,
            workspaceNode;

        self.updateMETA(self.meta);
        //self.copies = config.copies;
        self.copies = true;
        if (typeof xmlArrayBuffer === 'string') {
            self.admData = xml2json.convertFromString(xmlArrayBuffer);
        } else {
            self.admData = xml2json.convertFromBuffer(xmlArrayBuffer);
        }
        if (self.admData instanceof Error) {
            self.createMessage(null, 'Given adm not valid xml: ' + self.admData.message, 'error');
            callback(null, self.result);
            return;
        }

        self.admData = self.admData['Design'];
        workspaceNode = self.getWorkspaceNode(admFolder);
        //timeStamp = new Date().getTime();
        self.exploreACMs(workspaceNode, false, function (err) {
            if (err) {
                callback(err, self.result);
                return;
            }
            //self.createMessage(null, 'ExecTime [s] exploreACMs     :: ' +
            //        ((new Date().getTime() - timeStamp) / 1000).toString());
            if (self.acmCounter > 0) {
                self.createMessage(workspaceNode, 'Work-space did not have all ACMs used by the design.', 'error');
                self.logMissingACMsToResult();
                callback(null, self.result);
                return;
            }
            //timeStamp = new Date().getTime();
            self.container = self.createAdmDesign(admFolder);
            //self.createMessage(null, 'ExecTime [s] createAdmDesign :: ' +
            //    ((new Date().getTime() - timeStamp) / 1000).toString());
            if (false) {
                self.makeConnectorCompositions();
                self.makeValueFlows();
                finnishPlugin(null);
            } else {
                //timeStamp = new Date().getTime();
                self.gatherComponentInstanceContent(function (err) {
                    //self.createMessage(null, 'ExecTime [s] gatherComponentInstanceContent :: ' +
                    //    ((new Date().getTime() - timeStamp) / 1000).toString());
                    if (err) {
                        finnishPlugin(err);
                    } else {
                        //timeStamp = new Date().getTime();
                        self.makeConnectorCompositions();
                        //self.createMessage(null, 'ExecTime [s] makeConnectorCompositions :: ' +
                        //    ((new Date().getTime() - timeStamp) / 1000).toString());
                        //timeStamp = new Date().getTime();
                        self.makeValueFlows();
                        //self.createMessage(null, 'ExecTime [s] makeValueFlows :: ' +
                        //    ((new Date().getTime() - timeStamp) / 1000).toString());
                        self.makePortMaps();
                        finnishPlugin(null);
                    }
                });
            }
        });
    };

    AdmImporter.prototype.arrayElementsInXml = {
        Design: false,
        RootContainer: false,
        Value: false,
        Container: true,
        Connector: true,
        Property: true,
        Formula: true,
        Operand: true,
        ValueFlowMux: true,
        ComponentInstance: true,
        PrimitivePropertyInstance: true,
        ConnectorInstance: true,
        PortInstance: true,
        Role: true,
        Port: true,
        ContainerFeature: true
    };

    /**
     * Main function for the plugin to execute. This will perform the execution.
     * Notes:
     * - Always log with the provided logger.[error,warning,info,debug].
     * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always have to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    AdmImporter.prototype.main = function (callback) {
        var self = this,
            config = self.getCurrentConfig(),
            //timeStamp,
            timeStart = new Date().getTime(),
            debug = false,
            finnishPlugin = function (err) {
                if (err) {
                    callback(err, self.result);
                    return;
                }

                if (debug) {
                    self.saveDebugArtifacts(callback);
                } else {
                    //timeStamp = new Date().getTime();
                    self.save('added obj', function (err) {
                        if (err) {
                            callback(err, self.result);
                            return;
                        }
                        //self.createMessage(null, 'ExecTime [s] save :: ' +
                        //    ((new Date().getTime() - timeStamp) / 1000).toString());

                        if (self.currentSuccess === false) {
                            self.createMessage(null, 'There were issues in the matched ACMs. Incomplete model still ' +
                                'imported - make sure to address the reported issues.', 'warning');
                        }
//                        self.createMessage(null, 'ExecTime [s] total :: ' +
//                            ((new Date().getTime() - timeStart) / 1000).toString());
                        self.result.setSuccess(self.currentSuccess);
                        callback(null, self.result);
                    });
                }
            };

        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }

        if (self.isMetaTypeOf(self.activeNode, self.META.ADMFolder) === false) {
            self.createMessage(null, 'This plugin must be called from an ADMFolder.', 'error');
            callback(null, self.result);
            return;
        }
        if (!config.admFile) {
            self.createMessage(null, 'No adm file provided', 'error');
            callback(null, self.result);
            return;
        }
        self.blobClient.getObject(config.admFile, function (err, xmlArrayBuffer) {
            self.innerMain(xmlArrayBuffer, callback, finnishPlugin);
        });
    };

    AdmImporter.prototype.saveDebugArtifacts = function (callback) {
        var self = this,
            artie,
            json2xml,
            debugFiles;

        json2xml = new Converter.Json2xml();
        debugFiles = {
            'design.json': JSON.stringify({Design: self.admData}, null, 4),
            'design.adm': json2xml.convertToString({Design: self.admData})
        };
        artie = self.blobClient.createArtifact('debugFiles');
        artie.addFiles(debugFiles, function (err, hashes) {
            if (err) {
                self.result.setSuccess(false);
                callback('Could not add debug files : err' + err.toString(), self.result);
                return;
            }
            artie.save(function (err, hash) {
                if (err) {
                    self.result.setSuccess(false);
                    callback('Could not save artifact : err' + err.toString(), self.result);
                    return;
                }
                self.result.setSuccess(true);
                self.result.addArtifact(hash);
                callback(null, self.result);
            });
        });
    };

//<editor-fold desc="============================ Gathering of ACM Info ===========================">
    AdmImporter.prototype.getWorkspaceNode = function (node) {
        var self = this;
        while (node) {
            if (self.isMetaTypeOf(node, self.meta.WorkSpace)) {
                self.logger.info('Found WorkSpace-Node : ' + self.core.getAttribute(node, 'name'));
                return node;
            }
            node = self.core.getParent(node);
        }
        self.logger.error('Could not find WorkSpace!!');
    };

    AdmImporter.prototype.exploreACMs = function (node, dummyACMs, callback) {
        var self = this;
        if (dummyACMs) {
            callback(null);
            return;
        }
        self.initializeComponentMap(self.admData.RootContainer);
        self.logger.info('Number of unique ACMs (acmCounter) is ' + self.acmCounter.toString());
        self.core.loadChildren(node, function (err, children) {
            var counter,
                i,
                counterCallback,
                error = '';
            // Check for error in loading before doing recursion.
            if (err) {
                callback('Could not load children for project, err: ' + err, self.result);
                return;
            }
            if (children.length === 0) {
                callback(null);
                return;
            }
            // Define a counter and callback for the recursion.
            counter = {visits: children.length};
            counterCallback = function (err) {
                error = err ? error += err : error;
                counter.visits -= 1;
                if (counter.visits === 0) {
                    callback(error);
                }
            };
            // Iterate over children and invoke recursion on ACMFolders.
            for (i = 0; i < children.length; i += 1) {
                if (self.isMetaTypeOf(children[i], self.meta.ACMFolder)) {
                    self.visitComponentsRec(children[i], counter, counterCallback);
                } else {
                    counterCallback(null);
                }
            }
        });
    };

    AdmImporter.prototype.initializeComponentMap = function (container) {
        var self = this,
            i,
            subContainers,
            components,
            id;

        if (container.ComponentInstance) {
            components = container.ComponentInstance;
            for (i = 0; i < components.length; i += 1) {
                id = components[i]['@ComponentID'];
                if (self.componentID2Acm[id] === undefined) {
                    self.componentID2Acm[id] = false;
                    self.acmCounter += 1;
                    self.componentID2PrintInfo[id] = {
                        name: components[i]['@Name'],
                        count: 1,
                        parentName: container['@Name']
                    };
                } else {
                    self.componentID2PrintInfo[id].count += 1;
                }
            }
        }

        if (container.Container) {
            subContainers = container.Container;
            for (i = 0; i < subContainers.length; i += 1) {
                self.initializeComponentMap(subContainers[i]);
            }
        }
    };

    AdmImporter.prototype.visitComponentsRec = function (node, counter, callback) {
        var self = this,
            name = self.core.getAttribute(node, 'name'),
            childName;
        self.logger.info('visitComponentsRec at node "' + name + '" acmCounter is:   ' + self.acmCounter.toString());
        if (self.acmCounter <= 0) {
            callback(null);
        }
        self.core.loadChildren(node, function (err, children) {
            var i,
                componentID;
            if (err) {
                callback(' loadChildren failed for component ' + name + ' with error : ' + err);
                return;
            }
            counter.visits += children.length;

            if (children.length === 0) {
                // The only chance for callback to be called.
                callback(null);
            } else {
                // The node needs to be accounted for.
                counter.visits -= 1;
            }
            for (i = 0; i < children.length; i += 1) {
                if (self.isMetaTypeOf(children[i], self.meta.ACMFolder)) {
                    self.visitComponentsRec(children[i], counter, callback);
                } else if (self.isMetaTypeOf(children[i], self.meta.AVMComponentModel)) {
                    componentID = self.core.getAttribute(children[i], 'ID');
                    childName = self.core.getAttribute(children[i], 'name');
                    if (self.componentID2Acm[componentID] === false) {
                        self.componentID2Acm[componentID] = children[i];
                        self.logger.info('Found matching ACM "' + childName + '"');
                        self.acmCounter -= 1;
                    } else if (self.componentID2Acm[componentID] === undefined) {
                        self.logger.info('ACM "' + childName + '" is not part of the design.');
                    } else {
                        self.logger.warning('Found duplicate ACM ID "' + componentID + '". "' + childName + '" at "' +
                            self.core.getPath(children[i]) + '" will not be used.');
                    }
                    callback(null);
                } else {
                    callback(null);
                }
            }
        });
    };

    AdmImporter.prototype.logMissingACMsToResult = function () {
        var self = this,
            missingIDs = [],
            key,
            i,
            info;
        for (key in self.componentID2Acm) {
            if (self.componentID2Acm.hasOwnProperty(key)) {
                if (self.componentID2Acm[key] === false) {
                    missingIDs.push(key);
                }
            }
        }
        for (i = 0; i < missingIDs.length; i += 1) {
            info = self.componentID2PrintInfo[missingIDs[i]];
            self.createMessage(null, 'ACM "' + info.name + '", in ADM "' + info.parentName + '" did not have a ' +
                'matching ACM with ID "' + missingIDs[i] + '". (The component ocurres ' + info.count.toString() +
                ' times in the ADM.)', 'error');
        }
    };
//</editor-fold>

//<editor-fold desc="=========================== Creation of ADM objects ==========================">
    AdmImporter.prototype.createAdmDesign = function (admFolder) {
        var self = this;
        return self.createContainer(self.admData.RootContainer, admFolder, 0);
    };

    AdmImporter.prototype.createContainer = function (containerData, parentNode, depth) {
        var self = this,
            container,
            subContainersData,
            componentsData,
            connectorsData,
            portData,
            propertiesData,
            formulasData,
            muxData,
            i,
            indent = new Array(depth + 2).join('-');
        // Create the container and set attributes and registry.
        container = self.core.createNode({parent: parentNode, base: self.meta.Container});
        self.core.setAttribute(container, 'name', containerData['@Name']);
        self.core.setAttribute(container, 'Type', containerData['@xsi:type'].slice("avm:".length));
        if (depth === 0) {
            self.core.setRegistry(container, 'position', {x: 100, y: 100});
        } else {
            self.core.setRegistry(container, 'position', {
                x: parseInt(containerData['@XPosition'], 10),
                y: parseInt(containerData['@YPosition'], 10)
            });
        }

        self.logger.info(indent + 'Created Container : ' + containerData['@Name']);
        depth += 1;

        // Go through the containment and add the child-objects.
        if (containerData.Container) {
            subContainersData = containerData.Container;
            for (i = 0; i < subContainersData.length; i += 1) {
                self.createContainer(subContainersData[i], container, depth);
            }
        }

        if (containerData.ValueFlowMux) {
            muxData = containerData.ValueFlowMux;
            for (i = 0; i < muxData.length; i += 1) {
                self.valueFlowMuxes[muxData[i]['@ID']] = muxData[i]['@Source'].split(' ');
            }
        }

        if (containerData.ComponentInstance) {
            componentsData = containerData.ComponentInstance;
            for (i = 0; i < componentsData.length; i += 1) {
                self.createComponent(componentsData[i], container);
                self.logger.info(indent + 'Created Component : ' + componentsData[i]['@Name']);
            }
        }

        if (containerData.ContainerFeature) {
            var features = containerData.ContainerFeature;
            for (i = 0; i < features.length; i += 1) {
                self.createContainerFeature(features[i], container);
                self.logger.info(indent + 'Created ContainerFeature : ' + features[i]['@xsi:type']);
            }
        }

        if (containerData.Connector) {
            connectorsData = containerData.Connector;
            for (i = 0; i < connectorsData.length; i += 1) {
                self.createConnector(connectorsData[i], container);
                self.logger.info(indent + 'Created Connector : ' + connectorsData[i]['@Name']);
            }
        }

        if (containerData.Port) {
            portData = containerData.Port;
            for (i = 0; i < portData.length; i += 1) {
                self.createDomainPort(portData[i], container);
                self.logger.info(indent + 'Created DomainPort : ' + portData[i]['@Name']);
            }
        }

        if (containerData.Property) {
            propertiesData = containerData.Property;
            for (i = 0; i < propertiesData.length; i += 1) {
                self.createProperty(propertiesData[i], container);
            }
        }

        if (containerData.Formula) {
            formulasData = containerData.Formula;
            for (i = 0; i < formulasData.length; i += 1) {
                self.createFormula(formulasData[i], container);
            }
        }

        return container;
    };

    AdmImporter.prototype.createComponent = function (componentData, parentNode) {
        var self = this,
            i,
            avmID = componentData['@ComponentID'],
            component,
            connectorInstanceData = componentData.ConnectorInstance,
            connector,
            connectorIdInModel,
            connectorId,
            connIdInModel2ID = {},
            primitivePropertyData = componentData.PrimitivePropertyInstance,
            property,
            propertyIdInModel,
            propertyId,
            propertyIdInModel2ID = {},
            portInstanceData = componentData.PortInstance,
            port,
            portIdInModel,
            portId,
            portIdInModel2ID = {};

        if (self.componentID2Acm[avmID]) {
            self.logger.info('Found ACM for : ' + componentData['@Name']);
            if (self.copies) {
                component = self.core.copyNode(self.componentID2Acm[avmID], parentNode);
            } else {
                component = self.core.createNode({parent: parentNode, base: self.componentID2Acm[avmID]});
            }
            if (connectorInstanceData) {
                for (i = 0; i < connectorInstanceData.length; i += 1) {
                    connectorIdInModel = connectorInstanceData[i]['@IDinComponentModel'];
                    connectorId = connectorInstanceData[i]['@ID'];
                    self.addConnectionData(parentNode, connectorInstanceData[i]);
                    connIdInModel2ID[connectorIdInModel] = connectorId;
                }
            }
            if (portInstanceData) {
                for (i = 0; i < portInstanceData.length; i += 1) {
                    portIdInModel = portInstanceData[i]['@IDinComponentModel'];
                    portId = portInstanceData[i]['@ID'];
                    self.addPortMapData(parentNode, portInstanceData[i]);
                    portIdInModel2ID[portIdInModel] = portId;
                }
            }
            if (primitivePropertyData) {
                for (i = 0; i < primitivePropertyData.length; i += 1) {
                    propertyIdInModel = primitivePropertyData[i]['@IDinComponentModel'];
                    propertyId = primitivePropertyData[i].Value['@ID'];
                    if (primitivePropertyData[i].Value.ValueExpression) {
                        self.valueFlows.push({
                            src: primitivePropertyData[i].Value.ValueExpression['@ValueSource'],
                            dst: propertyId
                        });
                    }
                    // TODO: this is not a good way to do this...
                    propertyIdInModel2ID[propertyIdInModel] = propertyId;
                }
            }
            self.componentInstances.push({
                node: component,
                id: componentData["@ID"],
                connIdInModel2ID: connIdInModel2ID,
                propertyIdInModel2ID: propertyIdInModel2ID,
                portIdInModel2ID: portIdInModel2ID
            });
        } else {
            self.logger.warning('Could not find ACM for ComponentInstance : ' + componentData['@Name']);
            self.logger.warning('Will create an empty shell model in design from avaliable data.');
            component = self.core.createNode({parent: parentNode, base: self.meta.AVMComponentModel});
            self.core.setAttribute(component, 'ID', avmID);
            if (connectorInstanceData) {
                for (i = 0; i < connectorInstanceData.length; i += 1) {
                    connectorIdInModel = connectorInstanceData[i]['@IDinComponentModel'];
                    connectorId = connectorInstanceData[i]['@ID'];
                    self.addConnectionData(parentNode, connectorInstanceData[i]);
                    // Create a dummy-connector in the dummy-component.
                    connector = self.core.createNode({parent: component, base: self.meta.Connector});
                    self.core.setAttribute(connector, 'name', 'PortDummy' + i.toString());
                    self.core.setAttribute(connector, 'ID', connectorIdInModel);
                    self.core.setRegistry(connector, 'position', {x: 400, y: (1 + i) * 70});

                    self.connID2Node[connectorId] = connector;
                }
            }
            if (primitivePropertyData) {
                for (i = 0; i < primitivePropertyData.length; i += 1) {
                    propertyId = primitivePropertyData[i].Value['@ID'];
                    propertyIdInModel = primitivePropertyData[i]['@IDinComponentModel'];
                    if (primitivePropertyData[i].Value.ValueExpression) {
                        self.valueFlows.push({
                            src: primitivePropertyData[i].Value.ValueExpression['@ValueSource'],
                            dst: propertyId
                        });
                    }
                    // Create a dummy-property in the dummy-component.
                    property = self.core.createNode({parent: component, base: self.meta.Property});
                    self.core.setRegistry(property, 'position', {x: 100, y: (1 + i) * 70});
                    self.core.setAttribute(property, 'name', 'PropertyDummy' + i.toString());
                    self.core.setAttribute(property, 'ID', propertyIdInModel);

                    self.valueFlowTargetID2Node[propertyId] = property;
                }
            }
            self.createMessage(component, '"' + componentData['@Name'] + '" is just a dummy..');
        }

        self.core.setAttribute(component, 'name', componentData['@Name']);
        self.core.setRegistry(component, 'position', {
            x: parseInt(componentData['@XPosition'], 10),
            y: parseInt(componentData['@YPosition'], 10)
        });
    };

    AdmImporter.prototype.createContainerFeature = function (featureData, container) {
        var self = this;
        var feature;

        if (['eda:RelativeLayoutConstraint', 'eda:ExactLayoutConstraint', 'eda:RangeLayoutConstraint'].indexOf(featureData['@xsi:type']) !== -1) {
            var type = featureData['@xsi:type'].substr(4);
            var ids = (featureData['@ConstraintTarget'] || '').split(' ');
            var constraintTargets = self.componentInstances.filter(function (comp) {
                return ids.indexOf(comp.id) !== -1;
            });
            feature = self.core.createNode({parent: container, base: self.meta[type]});

            var copyAttrIfSet = function (attrName, xform) {
                if (!xform) {
                    xform = function (attr) { return attr; };
                }
                if (featureData['@' + attrName]) {
                    self.core.setAttribute(feature, attrName, xform(featureData['@' + attrName]));
                }
            };
            if (type === 'RelativeLayoutConstraint') {
                copyAttrIfSet('XOffset');
                copyAttrIfSet('YOffset');
                var origin = self.componentInstances.filter(function (ci) { return ci.id === featureData['@Origin']; });
                if (origin.length) {
                    self.core.setPointer(feature, 'Origin', origin[0].node);
                } else {
                    self.createMessage(container, 'Could not find Origin ' + featureData['@Origin'], 'error');
                }
            }
            if (type === 'ExactLayoutConstraint') {
                copyAttrIfSet('X');
                copyAttrIfSet('Y');
                copyAttrIfSet('Layer');
                copyAttrIfSet('Rotation', function (val) { return val.substr(1); });
            }
            if (type === 'RangeLayoutConstraint') {
                if (featureData['@XRangeMin'] && featureData['@XRangeMax']) {
                    self.core.setAttribute(feature, 'XRange', featureData['@XRangeMin'] + "-" + featureData['@XRangeMax']);
                }
                if (featureData['@YRangeMin'] && featureData['@YRangeMax']) {
                    self.core.setAttribute(feature, 'YRange', featureData['@YRangeMin'] + "-" + featureData['@YRangeMax']);
                }
                self.core.setAttribute(feature, 'LayerRange', 'Either');
                copyAttrIfSet('LayerRange');
            }
            self.core.setAttribute(feature, 'name', type);
            constraintTargets.forEach(function (componentInstance) {
                self.core.addMember(feature, 'ConstraintTarget', componentInstance.node);
            });
        } else {
            self.createMessage(container, 'Unknown ContainerFeature type ' + featureData['@xsi:type'], 'error');
            return;
        }

        self.core.setRegistry(feature, 'position', {
            x: parseInt(featureData['@XPosition'], 10),
            y: parseInt(featureData['@YPosition'], 10)
        });
    };

    AdmImporter.prototype.createConnector = function (connectorData, parentNode) {
        var self = this,
            i,
            connector;

        connector = self.core.createNode({parent: parentNode, base: self.meta.Connector});
        self.connID2Node[connectorData['@ID']] = connector;
        self.core.setAttribute(connector, 'name', connectorData['@Name']);
        // Add Domain-Connectors (Role in adm).
        if (connectorData.Role) {
            for (i = 0; i < connectorData.Role.length; i += 1) {
                self.createDomainPort(connectorData.Role[i], connector);
            }
        }

        self.core.setRegistry(connector, 'position', {
            x: parseInt(connectorData['@XPosition'], 10),
            y: parseInt(connectorData['@YPosition'], 10)
        });

        self.addConnectionData(parentNode, connectorData);
    };

    AdmImporter.prototype.createDomainPort = function (portData, parentNode) {
        var self = this,
            port,
            typeName;
        port = self.core.createNode({parent: parentNode, base: self.meta.DomainPort});

        self.core.setAttribute(port, 'name', portData['@Name']);

        typeName =  portData['@xsi:type'];

        if (self.endsWith(typeName, 'Connector')) {
            if (portData.hasOwnProperty('@Class')) {
                self.core.setAttribute(port, 'Type', 'ModelicaConnector');
                self.core.setAttribute(port, 'Class', portData['@Class']);
            } else {
                self.createMessage(port, 'Domain port was of xsi:type Connector but did not ' +
                    'have a Class defined. Unknown Type: ' + JSON.stringify(portData, null, 2), 'error');
            }
        } else if (self.endsWith(typeName, 'Axis')) {
            self.core.setAttribute(port, 'Type', 'CadAxis');
        } else if (self.endsWith(typeName, 'CoordinateSystem')) {
            self.core.setAttribute(port, 'Type', 'CadCoordinateSystem');
        } else if (self.endsWith(typeName, 'Plane')) {
            self.core.setAttribute(port, 'Type', 'CadPlane');
        } else if (self.endsWith(typeName, 'Point')) {
            self.core.setAttribute(port, 'Type', 'CadPoint');
        } else if (self.endsWith(typeName, 'Pin')) {
            self.core.setAttribute(port, 'Type', 'SchematicPin');
        } else if (self.endsWith(typeName, 'SystemCPort')) {
            self.core.setAttribute(port, 'Type', 'SystemCPort');
        } else if (self.endsWith(typeName, 'RFPort')) {
            self.core.setAttribute(port, 'Type', 'RFPort');
        } else {
            self.createMessage(port, 'Unknown Type for domain port : ' + JSON.stringify(portData, null, 2), 'error');
        }

        self.core.setRegistry(port, 'position', {
            x: parseInt(portData['@XPosition'], 10),
            y: parseInt(portData['@YPosition'], 10)
        });

        self.portID2Node[portData['@ID']] = port;
        self.addPortMapData(parentNode, portData);
    };

    AdmImporter.prototype.createProperty = function (propertyData, parentNode) {
        var self = this,
            i,
            muxSources,
            property,
            value = '',
            isParameter = false,
            valueExpression,
            assignedValue,
            valueID = propertyData.Value['@ID'];

        if (propertyData.Value.ValueExpression) {
            valueExpression = propertyData.Value.ValueExpression;
            if (self.endsWith(valueExpression['@xsi:type'], 'ParametricValue')) {
                isParameter = true;
                assignedValue = valueExpression.AssignedValue;
                if (self.endsWith(assignedValue['@xsi:type'], 'FixedValue')) {
                    if (assignedValue.Value && assignedValue.Value['#text']) {
                        value = valueExpression.AssignedValue.Value['#text'];
                    }
                } else if (self.endsWith(assignedValue['@xsi:type'], 'DerivedValue')) {
                    if (self.valueFlowMuxes[assignedValue['@ValueSource']]) {
                        muxSources = self.valueFlowMuxes[assignedValue['@ValueSource']];
                        for (i = 0; i < muxSources.length; i += 1) {
                            self.valueFlows.push({
                                src: muxSources[i],
                                dst: valueID
                            });
                        }
                    } else {
                        self.valueFlows.push({
                            src: assignedValue['@ValueSource'],
                            dst: valueID
                        });
                    }
                }
            } else if (self.endsWith(valueExpression['@xsi:type'], 'FixedValue')) {
                if (valueExpression.Value && valueExpression.Value['#text']) {
                    value = valueExpression.Value['#text'];
                }
            } else if (self.endsWith(valueExpression['@xsi:type'], 'DerivedValue')) {
                if (self.valueFlowMuxes[valueExpression['@ValueSource']]) {
                    muxSources = self.valueFlowMuxes[valueExpression['@ValueSource']];
                    for (i = 0; i < muxSources.length; i += 1) {
                        self.valueFlows.push({
                            src: muxSources[i],
                            dst: valueID
                        });
                    }
                } else {
                    self.valueFlows.push({
                        src: valueExpression['@ValueSource'],
                        dst: valueID
                    });
                }
            }
        }

        if (isParameter) {
            property = self.core.createNode({parent: parentNode, base: self.meta.Property});
            self.core.setAttribute(property, 'ValueType', 'Parametric');
            self.logger.info('Created Parameter "' + propertyData['@Name'] + '" with value : "' + value + '".');
            if (valueExpression.Default && valueExpression.Default.Value['#text']) {
                self.core.setAttribute(property, 'Default', valueExpression.Default.Value['#text']);
            }
            if (valueExpression.Maximum && valueExpression.Maximum.Value['#text']) {
                self.core.setAttribute(property, 'Maximum', valueExpression.Maximum.Value['#text']);
            }
            if (valueExpression.Minimum && valueExpression.Minimum.Value['#text']) {
                self.core.setAttribute(property, 'Minimum', valueExpression.Minimum.Value['#text']);
            }
        } else {
            property = self.core.createNode({parent: parentNode, base: self.meta.Property});
            self.logger.info('Created Property "' + propertyData['@Name'] + '" with value : "' + value + '".');
        }

        self.core.setAttribute(property, 'name', propertyData['@Name']);
        self.core.setAttribute(property, 'DataType', propertyData.Value['@DataType']);
        self.core.setAttribute(property, 'Value', value);
        if (propertyData.Value['@Unit']) {
            self.core.setAttribute(property, 'Unit', propertyData.Value['@Unit']);
        }
        self.core.setRegistry(property, 'position', {
            x: parseInt(propertyData['@XPosition'], 10),
            y: parseInt(propertyData['@YPosition'], 10)
        });

        self.valueFlowTargetID2Node[valueID] = property;
    };

    AdmImporter.prototype.createFormula = function (formulaData, parentNode) {
        var self = this,
            i,
            id = formulaData['@ID'],
            formula,
            isSimple = formulaData.hasOwnProperty('@Operation'),
            operands;

        if (isSimple) {
            formula = self.core.createNode({parent: parentNode, base: self.meta.SimpleFormula});
            self.core.setAttribute(formula, 'Method', formulaData['@Operation']);
            if (formulaData['@Operand']) {
                operands = formulaData['@Operand'].split(" ");
                for (i = 0; i < operands.length; i += 1) {
                    self.valueFlows.push({
                        src: operands[i],
                        dst: id
                    });
                }
            }
            self.logger.info('Created SimpleFormula "' + formulaData['@Name'] + '".');
        } else {
            formula = self.core.createNode({parent: parentNode, base: self.meta.CustomFormula});
            self.core.setAttribute(formula, 'Expression', formulaData['@Expression']);
            if (formulaData.Operand) {
                operands = formulaData.Operand;
                for (i = 0; i < operands.length; i += 1) {
                    self.valueFlows.push({
                        src: operands[i]['@ValueSource'],
                        dst: id,
                        symbol: operands[i]['@Symbol']
                    });
                }
            }
            self.logger.info('Created CustomFormula "' + formulaData['@Name'] + '".');
        }
        self.core.setAttribute(formula, 'name', formulaData['@Name']);

        self.core.setRegistry(formula, 'position', {
            x: parseInt(formulaData['@XPosition'], 10),
            y: parseInt(formulaData['@YPosition'], 10)
        });

        self.valueFlowTargetID2Node[id] = formula;
    };

    AdmImporter.prototype.addConnectionData = function (parentNode, connectorData) {
        var self = this,
            connectedConnectorIDs,
            i;
        if (connectorData['@ConnectorComposition']) {
            connectedConnectorIDs = connectorData['@ConnectorComposition'].split(" ");
            for (i = 0; i < connectedConnectorIDs.length; i += 1) {
                self.connectorCompositions.push({
                    src: connectorData['@ID'],
                    dst: connectedConnectorIDs[i]
                });
            }
        }
    };

    AdmImporter.prototype.addPortMapData = function (parentNode, portData) {
        var self = this,
            connectedPortIDs,
            i;
        if (portData['@PortMap']) {
            connectedPortIDs = portData['@PortMap'].split(" ");
            for (i = 0; i < connectedPortIDs.length; i += 1) {
                self.portMaps.push({
                    src: portData['@ID'],
                    dst: connectedPortIDs[i]
                });
            }
        }
    };
//</editor-fold>

//<editor-fold desc="============================ Making of connections =========================">
    AdmImporter.prototype.gatherComponentInstanceContent = function (callback) {
        var self = this,
            i,
            error = '',
            counter = self.componentInstances.length,
            afterLoadChildren = function (componentInstance) {
                return function (err, children) {
                    counter -= 1;
                    if (err) {
                        error += err;
                    } else {
                        self.addToConnectorsAndPropertiesMaps(componentInstance, children);
                    }
                    if (counter <= 0) {
                        callback(error);
                    }
                };
            };

        if (counter === 0) {
            callback(null);
            return;
        }
        for (i = 0; i < self.componentInstances.length; i += 1) {
            self.core.loadChildren(self.componentInstances[i].node, afterLoadChildren(self.componentInstances[i]));
        }
    };

    AdmImporter.prototype.addToConnectorsAndPropertiesMaps = function (componentInstance, children) {
//        self.componentInstances.push({
//            node: component,
//            connIdInModel2ID: connIdInModel2ID,
//            propertyIdInModel2ID: propertyIdInModel2ID
//        });
        var self = this,
            i,
            id,
            metaTypeName;

        for (i = 0; i < children.length; i += 1) {
            metaTypeName = self.core.getAttribute(self.getMetaType(children[i]), 'name');
            if (metaTypeName === 'Connector') {
                id = self.core.getAttribute(children[i], 'ID');
                if (componentInstance.connIdInModel2ID[id]) {
                    self.connID2Node[componentInstance.connIdInModel2ID[id]] = children[i];
                } else {
                    self.logger.error('ConnectorID'  + id + ' not in ' + self.core.getAttribute(componentInstance.node, 'name'));
                }
            } else if (metaTypeName === 'Property') {
                id = self.core.getAttribute(children[i], 'ID');
                if (componentInstance.propertyIdInModel2ID[id]) {
                    self.valueFlowTargetID2Node[componentInstance.propertyIdInModel2ID[id]] = children[i];
                } else {
                    self.logger.error('PropertyID' + id + ' not in ' + self.core.getAttribute(componentInstance.node, 'name'));
                }
            } else if (metaTypeName === 'DomainPort') {
                id = self.core.getAttribute(children[i], 'ID');
                if (componentInstance.portIdInModel2ID[id]) {
                    self.portID2Node[componentInstance.portIdInModel2ID[id]] = children[i];
                } else {
                    self.logger.error('PortID' + id + ' not in ' + self.core.getAttribute(componentInstance.node, 'name'));
                }
            }
        }
    };

    AdmImporter.prototype.makeConnectorCompositions = function () {
        var self = this,
            srcID,
            dstID,
            parentNode,
            srcNode,
            dstNode,
            i,
            connectionNode,
            jointID,
            filteredConnections = {};

        for (i = 0; i < self.connectorCompositions.length; i += 1) {
            srcID = self.connectorCompositions[i].src;
            dstID = self.connectorCompositions[i].dst;
            jointID = srcID + '__' + dstID;
            if (filteredConnections[jointID]) {
                // self.logger.info('Connection between ' + jointID + ' already added.');
            } else {
                self.logger.info('Adding [src] ' + srcID + ' and [dst]' + dstID);
                jointID = dstID + '__' + srcID;
                filteredConnections[jointID] = true;
                srcNode = self.connID2Node[srcID];
                dstNode = self.connID2Node[dstID];
                parentNode = self.getConnectionParent(srcNode, dstNode, srcID, dstID);
                if (parentNode) {
                    connectionNode = self.core.createNode({parent: parentNode, base: self.meta.ConnectorComposition});
                    self.core.setPointer(connectionNode, 'src', srcNode);
                    self.core.setPointer(connectionNode, 'dst', dstNode);
                } else {
                    self.logger.error('Could not make connector-composition between src: ' + srcID +
                        ' and dst: ' + dstID + '.');
                }
            }
        }
    };

    AdmImporter.prototype.makePortMaps = function () {
        var self = this,
            srcID,
            dstID,
            parentNode,
            srcNode,
            dstNode,
            i,
            portMapNode,
            jointID,
            filteredPortMaps = {};

        for (i = 0; i < self.portMaps.length; i += 1) {
            srcID = self.portMaps[i].src;
            dstID = self.portMaps[i].dst;
            jointID = srcID + '__' + dstID;
            if (filteredPortMaps[jointID]) {
                // self.logger.info('Connection between ' + jointID + ' already added.');
            } else {
                self.logger.info('Adding [src] ' + srcID + ' and [dst]' + dstID);
                jointID = dstID + '__' + srcID;
                filteredPortMaps[jointID] = true;
                srcNode = self.portID2Node[srcID];
                dstNode = self.portID2Node[dstID];
                parentNode = self.getConnectionParent(srcNode, dstNode, srcID, dstID);
                if (parentNode) {
                    portMapNode = self.core.createNode({parent: parentNode, base: self.meta.PortMap});
                    self.core.setPointer(portMapNode, 'src', srcNode);
                    self.core.setPointer(portMapNode, 'dst', dstNode);
                } else {
                    self.logger.error('Could not make port-map between src: ' + srcID +
                        ' and dst: ' + dstID + '.');
                }
            }
        }
    };

    AdmImporter.prototype.makeValueFlows = function () {
        var self = this,
            i,
            srcNode,
            dstNode,
            symbol,
            parentNode,
            valueFlowNode;
        for (i = 0; i < self.valueFlows.length; i += 1) {
            srcNode = self.valueFlowTargetID2Node[self.valueFlows[i].src];
            dstNode = self.valueFlowTargetID2Node[self.valueFlows[i].dst];
            symbol = self.valueFlows[i].symbol;
            parentNode = self.getConnectionParent(srcNode, dstNode, self.valueFlows[i].src, self.valueFlows[i].dst);
            if (parentNode) {
                valueFlowNode = self.core.createNode({parent: parentNode, base: self.meta.ValueFlowComposition});
                self.core.setPointer(valueFlowNode, 'src', srcNode);
                self.core.setPointer(valueFlowNode, 'dst', dstNode);
                if (symbol) {
                    self.logger.info('About to add value-flow into customFormula');
                    if (symbol !== self.core.getAttribute(srcNode, 'name')) {
                        self.core.setAttribute(valueFlowNode, 'VariableName', symbol);
                    }
                }
            } else {
                self.logger.error('Could not make value-flow connection between src: ' + self.valueFlows[i].src +
                    ' and dst: ' + self.valueFlows[i].dst + '.');
            }
        }
    };

    AdmImporter.prototype.getConnectionParent = function (srcNode, dstNode, srcId, dstId) {
        var self = this,
            parent,
            errMsg,
            srcParent,
            dstParent,
            srcDepth,
            dstDepth;
        if (!srcNode || !dstNode) {
            errMsg = 'Making connection not possible srcID: "' + srcId + '", dstID: "' + dstId + '".';
            if (srcNode) {
                errMsg += ' SrcNode exists, name: "' + self.core.getAttribute(srcNode, 'name') + '", parent : "' +
                    self.core.getAttribute(self.core.getParent(srcNode), 'name') + '".';
            } else {
                errMsg += ' The srcNode does not exist!';
            }
            if (dstNode) {
                errMsg += ' DstNode exists, name: "' + self.core.getAttribute(dstNode, 'name') + '", parent : "' +
                    self.core.getAttribute(self.core.getParent(dstNode), 'name') + '".';
            } else {
                errMsg += ' The dstNode does not exist!';
            }
            self.currentSuccess = false;
            self.createMessage(dstNode || srcNode || null, errMsg, 'error');
            return null;
        }
        srcParent = self.core.getParent(srcNode);
        dstParent = self.core.getParent(dstNode);
        if (srcParent === dstParent) {
            parent = srcParent;
        } else {
            srcDepth = self.core.getPath(srcParent).split('/').length;
            dstDepth = self.core.getPath(dstParent).split('/').length;
            if (srcDepth < dstDepth) {
                parent = srcParent;
            } else if (dstDepth > srcDepth) {
                parent = dstParent;
            } else {
                parent = self.core.getParent(srcParent);
            }
        }
        return parent;
    };

//</editor-fold>

    AdmImporter.prototype.endsWith = function (str, ending) {
        var lastIndex = str.lastIndexOf(ending);
        return (lastIndex !== -1) && (lastIndex + ending.length === str.length);
    };

    AdmImporter.prototype.startsWith = function (str, start) {
        if (start === '') {
            return true;
        }
        return start.length > 0 && str.substring(0, start.length) === start;
    };

    return AdmImporter;
});
/**
* Generated by PluginGenerator from webgme on Wed Nov 19 2014 17:26:52 GMT-0600 (Central Standard Time).
*/

define('plugin/AtmImporter/AtmImporter/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'AssemblyRoot': '/1008889918/1502717053',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'ExactLayoutConstraint': '/1008889918/749469140',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'LayoutConstraint': '/1008889918/236224320',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'RangeLayoutConstraint': '/1008889918/1669293789',
        'RelativeLayoutConstraint': '/1008889918/24011457',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'WorkSpace': '/1008889918/1826321976',
        'Workflow': '/1008889918/891929219',
    };
});
/**
* Generated by PluginGenerator from webgme on Wed Jun 11 2014 13:31:41 GMT-0500 (Central Daylight Time).
*/

define('plugin/AtmImporter/AtmImporter/AtmImporter',['plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/AtmImporter/AtmImporter/meta',
    'plugin/AdmImporter/AdmImporter/AdmImporter',
    'xmljsonconverter'], function (PluginConfig, PluginBase, MetaTypes, AdmImporter, Converter) {
    

    /**
    * Initializes a new instance of AtmImporter.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin AtmImporter.
    * @constructor
    */
    var AtmImporter = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = MetaTypes;
        this.atmData = null;
        this.testBench = null;
        this.admImporter = null;
        // ValueFlows
        this.valueFlowTargetID2Node = {};
        this.valueFlows = [];
        // Connectors
        this.connectorCompositions = [];
        this.connID2Node = {};
    };

    // Prototypal inheritance from PluginBase.
    AtmImporter.prototype = Object.create(PluginBase.prototype);
    AtmImporter.prototype.constructor = AtmImporter;

    /**
    * Gets the name of the AtmImporter.
    * @returns {string} The name of the plugin.
    * @public
    */
    AtmImporter.prototype.getName = function () {
        return "ATM Importer";
    };

    /**
    * Gets the semantic version (semver.org) of the AtmImporter.
    * @returns {string} The version of the plugin.
    * @public
    */
    AtmImporter.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the description of the AtmImporter.
    * @returns {string} The description of the plugin.
    * @public
    */
    AtmImporter.prototype.getDescription = function () {
        return "Import atm files generated from e.g. desktop GME.";
    };

    /**
    * Gets the configuration structure for the AtmImporter.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    AtmImporter.prototype.getConfigStructure = function () {
        return [
            {
                'name': 'atmFile',
                'displayName': 'ATM file',
                'description': 'AVM TestBench Model.',
                'value': "",
                'valueType': 'asset',
                'readOnly': false
            }
        ];
    };


    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    AtmImporter.prototype.main = function (callback) {
        var self = this,
            config = self.getCurrentConfig(),
            arrayElementsInXml = {
                TestBench: false,
                TopLevelSystemUnderTest: false,
                TestComponent: true,
                Parameter: true,
                Metric: true,
                Settings: true,
                TestInjectionPoint: true,
                TestStructure: true,
                Workflow: false,
                Task: true,
                PropertyInstance: true,
                PrimitivePropertyInstance: true,
                ConnectorInstance: true,
                PortInstance: true
            },
            timeStart = new Date().getTime(),

            finnishPlugin = function (err) {
                if (err) {
                    callback(err, self.result);
                    return;
                }

                self.save('Imported TestBench from ATM.', function (err) {
                    if (err) {
                        callback(err, self.result);
                        return;
                    }

                    //self.createMessage(null, 'ExecTime [s] total :: ' + ((new Date().getTime() - timeStart) / 1000).toString());
                    self.result.setSuccess(true);
                    callback(null, self.result);
                });
            };

        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }

        if (self.isMetaTypeOf(self.activeNode, self.META.ATMFolder) === false) {
            self.createMessage(null, 'This plugin must be called from an ATMFolder.', 'error');
            callback(null, self.result);
            return;
        }
        if (!config.atmFile) {
            self.createMessage(null, 'No adm file provided', 'error');
            callback(null, self.result);
            return;
        }
        self.updateMETA(self.meta);

        self.blobClient.getObject(config.atmFile, function (err, xmlArrayBuffer) {
            var xmlToJson = new Converter.Xml2json({
                    skipWSText: true,
                    arrayElements: arrayElementsInXml
                });
            if (err) {
                self.logger.error('Retrieving atmFile failed with err:' + err.toString());
                self.createMessage(null, 'Could not retrieve content of atm-file.', 'error');
                callback('Retrieving atmFile failed with err:' + err.toString(), self.result);
                return;
            }
            self.atmData = xmlToJson.convertFromBuffer(xmlArrayBuffer);
            if (self.atmData instanceof Error) {
                self.createMessage(null, 'Given atm not valid xml: ' + self.atmData.message, 'error');
                callback(null, self.result);
                return;
            }

            self.logger.debug(JSON.stringify(self.atmData, null, 4));
            self.instantiateAdmImporter();
            self.createTestBench(self.activeNode);
            finnishPlugin(null);
        });
    };

    AtmImporter.prototype.createTestBench = function (atmFolderNode) {
        var self = this, i, key,
            testBenchData = self.atmData.TestBench,
            testBench = self.core.createNode({parent: atmFolderNode, base: self.meta.AVMTestBenchModel}),
            testComponentsData,
            parametersData,
            metricsData;

        self.core.setAttribute(testBench, 'name', testBenchData['@Name']);

        if (testBenchData.TopLevelSystemUnderTest) {
            self.createTLSUT(testBench, testBenchData.TopLevelSystemUnderTest);
        } else {
            self.logger.error('There was no TopLevelSystemUnderTest defined!');
            self.createMessage(testBench, 'There was no TopLevelSystemUnderTest defined!', 'error');
        }

        if (testBenchData.Workflow && testBenchData.Workflow['@Name']) {
            self.createWorkflow(testBench, testBenchData.Workflow);
        } else {
            self.logger.warning('There was no workflow defined!');
            self.createMessage(testBench, 'There was no Workflow defined!', 'warning');
        }

        if (testBenchData.TestComponent) {
            testComponentsData = testBenchData.TestComponent;
            for (i = 0; i < testComponentsData.length; i += 1) {
                self.admImporter.createComponent(testComponentsData[i], testBench);
            }
        }

        if (testBenchData.Parameter) {
            parametersData = testBenchData.Parameter;
            for (i = 0; i < parametersData.length; i += 1) {
                self.admImporter.createProperty(parametersData[i], testBench);
            }
        }

        if (testBenchData.Metric) {
            metricsData = testBenchData.Metric;
            for (i = 0; i < metricsData.length; i += 1) {
                self.createMetric(testBench, metricsData[i]);
            }
        }

        // Copy over connection data from admImporter.
        self.valueFlows = self.valueFlows.concat(self.admImporter.valueFlows);
        for (key in self.admImporter.valueFlowTargetID2Node) {
            if (self.admImporter.valueFlowTargetID2Node.hasOwnProperty(key)) {
                self.valueFlowTargetID2Node[key] = self.admImporter.valueFlowTargetID2Node[key];
            }
        }

        self.connectorCompositions = self.connectorCompositions.concat(self.admImporter.connectorCompositions);
        for (key in self.admImporter.connID2Node) {
            if (self.admImporter.connID2Node.hasOwnProperty(key)) {
                self.connID2Node[key] = self.admImporter.connID2Node[key];
            }
        }

        self.makeValueFlows(testBench);
        self.makeConnectorCompositions(testBench);
    };

    AtmImporter.prototype.createTLSUT = function (testBenchNode, tlsutData) {
        var self = this, i,
            propertiesData,
            propertyId,
            propertyIdInModel,
            property,
            connectorsData,
            connector,
            connectorID,
            tlsut = self.core.createNode({parent: testBenchNode, base: self.meta.Container});

        self.core.setAttribute(tlsut, 'name', 'SHOULDHAVENAME');
        self.core.setRegistry(tlsut, 'position', {
            x: parseInt(tlsutData['@XPosition'], 10),
            y: parseInt(tlsutData['@YPosition'], 10)
        });

        if (tlsutData.PropertyInstance) {
            propertiesData = tlsutData.PropertyInstance;
            for (i = 0; i < propertiesData.length; i += 1) {
                propertyId = propertiesData[i].Value['@ID'];
                propertyIdInModel = propertiesData[i]['@IDinSourceModel'];
                if (propertiesData[i].Value.ValueExpression) {
                    self.valueFlows.push({
                        src: propertiesData[i].Value.ValueExpression['@ValueSource'],
                        dst: propertyId
                    });
                    // Create a dummy-property...
                    property = self.core.createNode({parent: tlsut, base: self.meta.Property});
                    self.core.setRegistry(property, 'position', {x: 100, y: (1 + i) * 70});
                    self.core.setAttribute(property, 'name', 'Prop' + i.toString());
                    self.core.setAttribute(property, 'ID', propertyIdInModel);
                    self.valueFlowTargetID2Node[propertyId] = property;
                }
            }
        }

        //TODO: This is a work-around for the missing connectorInstances in the ATM format!
        //TODO: This does not look for Connector-composition either..
        if (tlsutData.PortInstance) {
            connectorsData = tlsutData.PortInstance;
            for (i = 0; i < connectorsData.length; i += 1) {
                connectorID = connectorsData[i]['@ID'];
                // Create a dummy-connector in the dummy-component.
                connector = self.core.createNode({parent: tlsut, base: self.meta.Connector});
                self.core.setRegistry(connector, 'position', {x: 600, y: (1 + i) * 70});
                self.core.setAttribute(connector, 'name', connectorsData[i]['@NameInSourceModel']);
                self.core.setAttribute(connector, 'ID', connectorID);
                self.connID2Node[connectorID] = connector;
            }
        }
    };

    AtmImporter.prototype.createWorkflow = function (testBenchNode, workflowData) {
        var self = this, i,
            workflow = self.core.createNode({parent: testBenchNode, base: self.meta.Workflow}),
            tasksData,
            task;
        self.core.setAttribute(workflow, 'name', workflowData['@Name']);
        self.core.setRegistry(workflow, 'position', { x: 50, y: 80 });

        if (workflowData.Task) {
            tasksData = workflowData.Task;
            for (i = 0; i < tasksData.length; i += 1) {
                task = self.core.createNode({parent: workflow, base: self.meta.Task});
                self.core.setAttribute(task, 'name', tasksData[i]['@Name']);
                if (self.admImporter.endsWith(tasksData[i]['@xsi:type'], 'InterpreterTask')) {
                    self.core.setAttribute(task, 'COMName', tasksData[i]['@COMName']);
                    self.core.setAttribute(task, 'Type', 'InterpreterTask');
                } else if (self.admImporter.endsWith(tasksData[i]['@xsi:type'], 'ExecutionTask')) {
                    //self.core.setAttribute(task, 'Invocation', tasksData[i]['@Invocation']);
                    self.core.setAttribute(task, 'Type', 'ExecutionTask');
                }
                self.core.setRegistry(task, 'position', { x: 50, y: 80 + i * 100 });
            }
        } else {
            self.logger.warning('No Tasks in work-flow!');
            self.createMessage(workflow, 'There were no tasks defined in the workflow.', 'warning');
        }
    };

    AtmImporter.prototype.createMetric = function (testBenchNode, metricData) {
        var self = this,
            metric = self.core.createNode({parent: testBenchNode, base: self.meta.Metric});
        self.core.setAttribute(metric, 'name', metricData['@Name']);
        self.core.setRegistry(metric, 'position', {
            x: parseInt(metricData['@XPosition'], 10),
            y: parseInt(metricData['@YPosition'], 10)
        });
    };

    AtmImporter.prototype.makeValueFlows = function (testBenchNode) {
        var self = this,
            i,
            srcNode,
            dstNode,
            symbol,
            valueFlowNode;
        for (i = 0; i < self.valueFlows.length; i += 1) {
            srcNode = self.valueFlowTargetID2Node[self.valueFlows[i].src];
            dstNode = self.valueFlowTargetID2Node[self.valueFlows[i].dst];
            symbol = self.valueFlows[i].symbol;
            valueFlowNode = self.core.createNode({parent: testBenchNode, base: self.meta.ValueFlowComposition});
            self.core.setPointer(valueFlowNode, 'src', srcNode);
            self.core.setPointer(valueFlowNode, 'dst', dstNode);
            if (symbol) {
                self.logger.info('About to add value-flow into customFormula');
                if (symbol !== self.core.getAttribute(srcNode, 'name')) {
                    self.core.setAttribute(valueFlowNode, 'VariableName', symbol);
                }
            }
        }
    };

    AtmImporter.prototype.makeConnectorCompositions = function (testBenchNode) {
        var self = this,
            srcID,
            dstID,
            srcNode,
            dstNode,
            i,
            connectionNode,
            jointID,
            filteredConnections = {};

        for (i = 0; i < self.connectorCompositions.length; i += 1) {
            srcID = self.connectorCompositions[i].src;
            dstID = self.connectorCompositions[i].dst;
            jointID = srcID + '__' + dstID;
            if (filteredConnections[jointID]) {
                self.logger.info('Connection between ' + jointID + ' already added.');
            } else {
                self.logger.info('Adding [src] ' + srcID + ' and [dst]' + dstID);
                jointID = dstID + '__' + srcID;
                filteredConnections[jointID] = true;
                srcNode = self.connID2Node[srcID];
                dstNode = self.connID2Node[dstID];
                connectionNode = self.core.createNode({parent: testBenchNode, base: self.meta.ConnectorComposition});
                self.core.setPointer(connectionNode, 'src', srcNode);
                self.core.setPointer(connectionNode, 'dst', dstNode);
            }
        }
    };

    AtmImporter.prototype.instantiateAdmImporter = function () {
        var self = this;
        self.admImporter = new AdmImporter();
        self.admImporter.meta = self.meta;
        self.admImporter.META = self.META;
        self.admImporter.core = self.core;
        self.admImporter.logger = self.logger;
        self.admImporter.result = self.result;
    };

    return AtmImporter;
});
/**
* Generated by PluginGenerator from webgme on Wed Nov 19 2014 17:26:52 GMT-0600 (Central Standard Time).
*/

define('plugin/AdmExporter/AdmExporter/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'AssemblyRoot': '/1008889918/1502717053',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'ExactLayoutConstraint': '/1008889918/749469140',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'LayoutConstraint': '/1008889918/236224320',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'RangeLayoutConstraint': '/1008889918/1669293789',
        'RelativeLayoutConstraint': '/1008889918/24011457',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'WorkSpace': '/1008889918/1826321976',
        'Workflow': '/1008889918/891929219',
    };
});
/* Generated file based on ejs templates */
define('plugin/AdmExporter/AdmExporter/Templates/Templates',[], function() {
    return {
    "empty.xme.ejs": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE project SYSTEM \"mga.dtd\">\r\n\r\n<project guid=\"{12EFB095-D6AF-48FA-A4F5-091240C6DB5E}\" cdate=\"Fri May 16 13:21:08 2014\" mdate=\"Fri May 16 13:21:08 2014\" version=\"\" metaguid=\"{DBB26EC8-938A-4B56-88FC-6395F64B334C}\" metaversion=\"$Rev: 25739 $\" metaname=\"CyPhyML\">\r\n<name>RootFolder</name>\r\n<comment></comment>\r\n<author></author>\r\n<folder id=\"id-006a-00000001\" relid=\"0x1\" childrelidcntr=\"0x4\" kind=\"RootFolder\" guid=\"{5d0bbebc-74cf-4c60-8600-5da6f4543986}\">\r\n<name>RootFolder</name>\r\n<folder id=\"id-006a-00000002\" relid=\"0x1\" childrelidcntr=\"0x8\" libref=\"CADResourceLibrary\" kind=\"RootFolder\" guid=\"{13b19e07-ff61-4a7f-82c6-58dea72fb96f}\">\r\n<name>CADResourceLibrary</name>\r\n<folder id=\"id-006a-00000003\" relid=\"0x4\" childrelidcntr=\"0xe\" kind=\"GeometryFolder\" guid=\"{7c595b3d-3b50-4594-a8ca-b78952921e4a}\">\r\n<name>GeometryDefinition</name>\r\n<model id=\"id-0065-00000001\" kind=\"Face\" guid=\"{ca72a9d2-1ebb-4c67-bf09-de4583cc0509}\" relid=\"0xe\" childrelidcntr=\"0x1\">\r\n    <name>Surface</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000001\" kind=\"Surface\" role=\"ReferenceSurface\" guid=\"{4fe17295-359d-46f9-841b-1c3089dc2ad4}\" relid=\"0x1\">\r\n        <name>ReferenceSurface</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>133,77</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Alignment\" status=\"meta\">\r\n            <value>MATE</value>\r\n        </attribute>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-00000002\" kind=\"Face\" guid=\"{561e14d9-ae2e-4325-95f1-a8627f629c3b}\" relid=\"0xd\" childrelidcntr=\"0x1\">\r\n    <name>Plane</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000002\" kind=\"Point\" role=\"ReferencePoint\" guid=\"{8ecd5902-ce6c-475d-84b1-0699c4679393}\" relid=\"0x1\">\r\n        <name>ReferencePoint</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>119,42</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-00000003\" kind=\"Extrusion\" guid=\"{72a0707b-6971-40d9-ba19-b11fcbb66e5f}\" relid=\"0xc\" childrelidcntr=\"0xe\">\r\n<name>Extrusion_From_6Pt_Polygon</name>\r\n<attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n    <value>Interior And Boundary</value>\r\n</attribute>\r\n<attribute kind=\"GeometryModifier\" status=\"meta\">\r\n    <value>None</value>\r\n</attribute>\r\n<attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n    <value>Additive</value>\r\n</attribute>\r\n<model id=\"id-0065-00000004\" kind=\"Polygon\" role=\"ExtrusionGeometry\" guid=\"{a73c908f-537e-4171-a32d-20c003b4b132}\" relid=\"0x1\" childrelidcntr=\"0x6\">\r\n    <name>ExtrusionGeometry</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>413,259</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-0000000a\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{4d037513-da8b-4c51-a50d-d6d2473c64d6}\" relid=\"0x6\">\r\n        <name>OrdinalPosition_6</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>357,525</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>6</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000000b\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{d220261e-facb-4892-907d-c38fd912b4da}\" relid=\"0x5\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>357,140</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000000c\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{0b583ee5-4e5d-4dda-b16e-5eedc24c204f}\" relid=\"0x4\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>357,49</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000000d\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{53d1abd9-7c16-41bd-a228-f8ea1ab62386}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_4</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>357,329</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000000e\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{ce59376b-e288-4f62-9de8-4919b65ccbd9}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>357,231</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000000f\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{a2c296b6-d1bf-4d86-9056-562f3dece4c0}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_5</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>357,427</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>5</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<atom id=\"id-0066-00000003\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{4c9ecbdb-cfba-4e8b-b0e4-016054dce6a3}\" relid=\"0x8\">\r\n    <name>OrdinalPosition_6</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,462</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000004\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{b088a5d5-5814-4549-b0f2-97bead31a495}\" relid=\"0x7\">\r\n    <name>OrdinalPosition_5</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,385</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000005\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{96d17b8c-ffb5-4cb6-a21e-1fe3dffd8eba}\" relid=\"0x6\">\r\n    <name>OrdinalPosition_4</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,294</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000006\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{3a2bbabe-36b9-4a07-af95-79d5cd678338}\" relid=\"0x5\">\r\n    <name>OrdinalPosition_3</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,210</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000007\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{25a9b125-05be-4597-928b-eca13d4c65bc}\" relid=\"0x4\">\r\n    <name>OrdinalPosition_2</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,119</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000008\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{7b6cd48b-4a41-454c-8963-c80f7dcdf8bb}\" relid=\"0x3\">\r\n    <name>OrdinalPosition_1</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,35</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000009\" kind=\"Point\" role=\"ExtrusionHeight\" guid=\"{021f6368-393d-49f8-9af5-9b1c708c1f66}\" relid=\"0x2\">\r\n    <name>ExtrusionHeight</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,546</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<connection id=\"id-0068-00000001\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{b3c476a3-0029-46d4-94fa-0d45f921951c}\" relid=\"0xe\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000003\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000000a\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000002\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{44cbdf9b-1928-4465-a11f-3b98c1b6e633}\" relid=\"0xd\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000004\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000000f\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000003\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{91e56e01-9a2e-4c7b-9b79-cb64eed820a6}\" relid=\"0xc\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000005\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000000d\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000004\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{0a468e53-db9d-4251-83e6-749cd709346e}\" relid=\"0xb\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000006\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000000e\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000005\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{ab1caa01-7a12-41a9-b80f-0271d0c550ea}\" relid=\"0xa\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000007\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000000b\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000006\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{3c80b333-8f77-42bf-bb67-f40e6ad88931}\" relid=\"0x9\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000008\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000000c\"/>\r\n</connection>\r\n</model>\r\n<model id=\"id-0065-00000005\" kind=\"Extrusion\" guid=\"{f334c404-b4d6-4d00-9028-7f4f62bf1ccf}\" relid=\"0xb\" childrelidcntr=\"0xc\">\r\n<name>Extrusion_From_5Pt_Polygon</name>\r\n<attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n    <value>Interior And Boundary</value>\r\n</attribute>\r\n<attribute kind=\"GeometryModifier\" status=\"meta\">\r\n    <value>None</value>\r\n</attribute>\r\n<attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n    <value>Additive</value>\r\n</attribute>\r\n<model id=\"id-0065-00000006\" kind=\"Polygon\" role=\"ExtrusionGeometry\" guid=\"{d208d791-b3a8-4124-915b-fdca3ec66082}\" relid=\"0x2\" childrelidcntr=\"0x5\">\r\n    <name>ExtrusionGeometry</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>448,224</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000016\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{e335b7d0-89cf-4df9-b097-1b28560f7bcc}\" relid=\"0x5\">\r\n        <name>OrdinalPosition_5</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,399</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>5</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000017\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{e6da09be-195f-4674-80a2-700e40d76062}\" relid=\"0x4\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,21</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000018\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{2aff7471-c4ba-4b7d-b8b3-0e0105459ec8}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,112</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000019\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{bc1cc939-39ef-49a4-89ec-494ee2e7266b}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,203</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000001a\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{099f8c1d-8187-47fa-9647-2a609377405e}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_4</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,301</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<atom id=\"id-0066-00000010\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{90d81a56-92c5-404f-8e1b-57bd35e904da}\" relid=\"0x7\">\r\n    <name>OrdinalPosition_5</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,385</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000011\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{765ad275-edb6-427a-9de9-a78987f439f8}\" relid=\"0x6\">\r\n    <name>OrdinalPosition_4</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,294</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000012\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{079d1a00-e0b2-4b95-91e7-e7a872c671c8}\" relid=\"0x5\">\r\n    <name>OrdinalPosition_3</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,210</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000013\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{f6d2ff8f-a239-4118-9e1e-a7e51c7dd2d4}\" relid=\"0x4\">\r\n    <name>OrdinalPosition_2</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,119</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000014\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{a3143bce-b4b3-4658-93d9-dec6ef38531d}\" relid=\"0x3\">\r\n    <name>OrdinalPosition_1</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,28</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000015\" kind=\"Point\" role=\"ExtrusionHeight\" guid=\"{ea9fa485-7c1d-4a69-b05d-b7560a075074}\" relid=\"0x1\">\r\n    <name>ExtrusionHeight</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>693,469</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<connection id=\"id-0068-00000007\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{1239d804-407a-40b5-ae30-0a7d115b6abd}\" relid=\"0xc\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000010\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000016\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000008\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{19383b43-d891-4226-9fc1-5707519bb77b}\" relid=\"0xb\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000011\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000001a\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000009\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{cd333b6d-e42c-457d-93d8-6d293969e42e}\" relid=\"0xa\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000012\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000019\"/>\r\n</connection>\r\n<connection id=\"id-0068-0000000a\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{40e034ef-0998-4692-bd9c-86f5a7eb87b9}\" relid=\"0x9\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000013\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000018\"/>\r\n</connection>\r\n<connection id=\"id-0068-0000000b\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{3085da18-19ea-4033-8031-bedf8b3a1007}\" relid=\"0x8\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000014\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000017\"/>\r\n</connection>\r\n</model>\r\n<model id=\"id-0065-00000007\" kind=\"Extrusion\" guid=\"{0e7fbc7a-01cb-46ca-9acd-fb27fba95b0c}\" relid=\"0xa\" childrelidcntr=\"0xa\">\r\n<name>Extrusion_From_4Pt_Polygon</name>\r\n<attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n    <value>Interior And Boundary</value>\r\n</attribute>\r\n<attribute kind=\"GeometryModifier\" status=\"meta\">\r\n    <value>None</value>\r\n</attribute>\r\n<attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n    <value>Additive</value>\r\n</attribute>\r\n<model id=\"id-0065-00000008\" kind=\"Polygon\" role=\"ExtrusionGeometry\" guid=\"{5d68f265-72ae-4fc6-ae56-0085a317e801}\" relid=\"0x1\" childrelidcntr=\"0x4\">\r\n    <name>ExtrusionGeometry</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>357,224</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000020\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{4fec8c6a-ec6c-4701-86d4-be80b8f8f278}\" relid=\"0x4\">\r\n        <name>OrdinalPosition_4</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>266,329</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000021\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{8831fa26-bcc1-46a1-ba44-e8847ef28baf}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>266,231</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000022\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{6917157d-5b5e-4842-9b4c-18537c539165}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>266,140</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000023\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{cfc311cc-2707-43ae-abab-2299bb0cfdcf}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>266,49</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<atom id=\"id-0066-0000001b\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{a160fb23-2798-4606-8725-8a031add3334}\" relid=\"0x6\">\r\n    <name>OrdinalPosition_4</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>609,378</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000001c\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{107533e8-012f-457b-8a86-0044ca6fca18}\" relid=\"0x5\">\r\n    <name>OrdinalPosition_3</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>609,280</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000001d\" kind=\"Point\" role=\"ExtrusionHeight\" guid=\"{d073639f-435f-4a71-812e-919ce56dd68d}\" relid=\"0x4\">\r\n    <name>ExtrusionHeight</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>609,476</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000001e\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{370bb598-4fb7-4a24-9819-f89b6c905870}\" relid=\"0x3\">\r\n    <name>OrdinalPosition_2</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>609,189</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000001f\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{2c0c0c13-6874-4d0a-820a-f2272bfb5509}\" relid=\"0x2\">\r\n    <name>OrdinalPosition_1</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>609,98</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<connection id=\"id-0068-0000000c\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{6afa2974-c5ba-4a76-9f18-da12853486d1}\" relid=\"0xa\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-0000001b\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000020\"/>\r\n</connection>\r\n<connection id=\"id-0068-0000000d\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{5ed1d70a-0e65-44a7-9614-6093d6c7d549}\" relid=\"0x9\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-0000001c\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000021\"/>\r\n</connection>\r\n<connection id=\"id-0068-0000000e\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{522ea98b-b836-4a56-925b-ec8d85750e5a}\" relid=\"0x8\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-0000001e\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000022\"/>\r\n</connection>\r\n<connection id=\"id-0068-0000000f\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{8af696eb-70c4-43ae-be5f-9f60a2662805}\" relid=\"0x7\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-0000001f\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-00000023\"/>\r\n</connection>\r\n</model>\r\n<model id=\"id-0065-00000009\" kind=\"Polygon\" guid=\"{46cee5ce-eaf2-4842-a888-f3482cfcd373}\" relid=\"0x9\" childrelidcntr=\"0x6\">\r\n    <name>6Pt_Polygon</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000024\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{a8b3dd21-ff6c-4d47-96ea-680a38985eda}\" relid=\"0x6\">\r\n        <name>OrdinalPosition_6</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,497</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>6</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000025\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{97992210-d0c2-4e35-8999-540f12014b56}\" relid=\"0x5\">\r\n        <name>OrdinalPosition_5</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,399</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>5</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000026\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{f00c1495-ab7a-4c71-b84a-237cb8841d09}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,203</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000027\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{69ca9c9d-8005-4905-8a59-5cfa6a6dc980}\" relid=\"0x4\">\r\n        <name>OrdinalPosition_4</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,301</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000028\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{e43e5886-5e0c-4ce3-85ad-d870390e9e54}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,21</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000029\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{f28ef2e4-d095-41df-acef-6b89e1bfd160}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,112</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-0000000a\" kind=\"Polygon\" guid=\"{38eed0ed-36f4-4820-a658-97a5e1a6f3d9}\" relid=\"0x8\" childrelidcntr=\"0x5\">\r\n    <name>5Pt_Polygon</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-0000002a\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{6f36528b-1da0-4fa1-b58c-44fe3384b449}\" relid=\"0x5\">\r\n        <name>OrdinalPosition_5</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,399</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>5</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000002b\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{c160e287-acee-4f0c-87f3-e9e3e1191ba4}\" relid=\"0x4\">\r\n        <name>OrdinalPosition_4</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,301</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000002c\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{b020a0d5-5805-4caa-8f8b-7c41fbbfd840}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,203</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000002d\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{68ad82f0-159b-4d60-9791-a8bf5d7264ee}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,112</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000002e\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{159bff6a-879a-4566-9f4f-6d6811bb79b9}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,21</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-0000000b\" kind=\"Polygon\" guid=\"{02c49085-8e57-4eae-b2cc-2de38398324c}\" relid=\"0x6\" childrelidcntr=\"0x4\">\r\n    <name>4Pt_Polygon</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-0000002f\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{c86e5ca5-e268-4c00-890a-1a6ceb7249d1}\" relid=\"0x4\">\r\n        <name>OrdinalPosition_4</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,301</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000030\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{31db26da-e359-44bb-86e3-382b041a0f8e}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,203</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000031\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{745217b4-a534-4c5a-b5aa-cee84cc6f70b}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,112</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000032\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{4a841efd-350d-4523-9105-d3d1366c9212}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,21</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-0000000c\" kind=\"Sphere\" guid=\"{c32238b9-8d4a-4189-93f1-801a37d5d2f6}\" relid=\"0x5\" childrelidcntr=\"0x2\">\r\n    <name>Sphere</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000033\" kind=\"Point\" role=\"SphereCenter\" guid=\"{025ebe14-6cef-44fc-99f9-9c6a3beba530}\" relid=\"0x2\">\r\n        <name>SphereCenter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>126,147</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000034\" kind=\"Point\" role=\"SphereEdge\" guid=\"{9b442ba2-e69c-4cb0-a6d5-dc52373e537e}\" relid=\"0x1\">\r\n        <name>SphereEdge</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>126,49</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-0000000d\" kind=\"Polygon\" guid=\"{dbf51774-9eed-40ba-b71d-f98a1939951f}\" relid=\"0x4\" childrelidcntr=\"0x3\">\r\n    <name>3Pt_Polygon</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000035\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{aefa310c-a650-4f1e-afd2-880a68409ba7}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,189</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000036\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{d1dde3cb-aee7-4312-ae46-7309ed336073}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,105</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000037\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{7b9c281c-8b5a-40c4-b00b-a91ff42cbd9c}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>140,21</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-0000000e\" kind=\"Extrusion\" guid=\"{8a037d79-9ef7-451a-9c49-fa5761dc8068}\" relid=\"0x3\" childrelidcntr=\"0x9\">\r\n<name>Extrusion_From_3Pt_Polygon</name>\r\n<attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n    <value>Interior And Boundary</value>\r\n</attribute>\r\n<attribute kind=\"GeometryModifier\" status=\"meta\">\r\n    <value>None</value>\r\n</attribute>\r\n<attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n    <value>Additive</value>\r\n</attribute>\r\n<model id=\"id-0065-0000000f\" kind=\"Polygon\" role=\"ExtrusionGeometry\" guid=\"{030e7280-56ba-40b0-bb3f-a2e066bcea06}\" relid=\"0x3\" childrelidcntr=\"0x3\">\r\n    <name>ExtrusionGeometry</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>385,140</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-0000003c\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{b1876702-b7cd-44d0-9667-705a0e855643}\" relid=\"0x3\">\r\n        <name>OrdinalPosition_3</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>462,259</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000003d\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{76c74db9-6274-4bc0-97b4-c3d85be1f295}\" relid=\"0x2\">\r\n        <name>OrdinalPosition_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>462,175</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-0000003e\" kind=\"OrdinalPoint\" role=\"OrdinalPoint\" guid=\"{ef935e9c-bd98-4e76-98d8-8cfd173664b5}\" relid=\"0x1\">\r\n        <name>OrdinalPosition_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>462,91</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"PolygonOrdinalPosition\" status=\"meta\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<atom id=\"id-0066-00000038\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{db6799ae-a9fb-4ca4-bac3-e168ffc5dc61}\" relid=\"0x6\">\r\n    <name>OrdinalPosition_3</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>637,245</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000039\" kind=\"Point\" role=\"ExtrusionHeight\" guid=\"{804bce64-83ea-4add-9a50-a2c5d265ad99}\" relid=\"0x5\">\r\n    <name>ExtrusionHeight</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>637,336</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000003a\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{0655a8ac-07b3-4526-bbee-42099e1d5e80}\" relid=\"0x4\">\r\n    <name>OrdinalPosition_2</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>637,161</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000003b\" kind=\"Point\" role=\"PointDatumForwarder\" guid=\"{9d9b63eb-1e58-4c01-8ee5-9f2ec4670fa7}\" relid=\"0x2\">\r\n    <name>OrdinalPosition_1</name>\r\n    <regnode name=\"PartRegs\" status=\"undefined\">\r\n        <value></value>\r\n        <regnode name=\"Aspect\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Position\" isopaque=\"yes\">\r\n                <value>637,63</value>\r\n            </regnode>\r\n        </regnode>\r\n    </regnode>\r\n    <attribute kind=\"DatumName\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</atom>\r\n<connection id=\"id-0068-00000010\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{59f31add-55ee-42ce-a6ab-417b767f0bf7}\" relid=\"0x9\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-00000038\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000003c\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000011\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{8c3c73a9-c53e-4ea2-b6cb-38e8c92b6ff6}\" relid=\"0x8\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-0000003a\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000003d\"/>\r\n</connection>\r\n<connection id=\"id-0068-00000012\" kind=\"PortComposition\" role=\"PortComposition\" guid=\"{692f58e2-54f5-442b-a54a-5e2a57409e0d}\" relid=\"0x7\">\r\n    <name>PortComposition</name>\r\n    <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n        <value>w</value>\r\n    </regnode>\r\n    <connpoint role=\"dst\" target=\"id-0066-0000003b\"/>\r\n    <connpoint role=\"src\" target=\"id-0066-0000003e\"/>\r\n</connection>\r\n</model>\r\n<model id=\"id-0065-00000010\" kind=\"Cylinder\" guid=\"{a5493a38-a4ad-44e3-964e-9c48a183c594}\" relid=\"0x2\" childrelidcntr=\"0x3\">\r\n    <name>Cylinder</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"EndCapInclusionQualifier\" status=\"meta\">\r\n        <value>IncludeEndCaps</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-0000003f\" kind=\"Point\" role=\"CylinderRadius\" guid=\"{3b2b1e29-acf4-441b-8c75-761de0e435be}\" relid=\"0x3\">\r\n        <name>CylinderRadius</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>119,161</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000040\" kind=\"Point\" role=\"CylinderStart\" guid=\"{8e9f1abb-96ae-4f5c-bb74-37ca29f06962}\" relid=\"0x2\">\r\n        <name>CylinderStart</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>119,42</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000041\" kind=\"Point\" role=\"CylinderEnd\" guid=\"{d5384a19-1f61-4f51-a4bd-6a0dbc8dfa05}\" relid=\"0x1\">\r\n        <name>CylinderEnd</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>119,287</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-00000011\" kind=\"Circle\" guid=\"{38b843a1-bdaa-4fa4-a560-b3b91f51388a}\" relid=\"0x1\" childrelidcntr=\"0x3\">\r\n    <name>Circle</name>\r\n    <attribute kind=\"BoundaryQualifier\" status=\"meta\">\r\n        <value>Interior And Boundary</value>\r\n    </attribute>\r\n    <attribute kind=\"GeometryModifier\" status=\"meta\">\r\n        <value>None</value>\r\n    </attribute>\r\n    <attribute kind=\"InclusionSemantics\" status=\"meta\">\r\n        <value>Additive</value>\r\n    </attribute>\r\n    <atom id=\"id-0066-00000042\" kind=\"Point\" role=\"CircleEdge\" guid=\"{0e7d1208-e14a-4a88-8d60-7ab04f53211b}\" relid=\"0x3\">\r\n        <name>CircleEdge_2</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>105,119</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000043\" kind=\"Point\" role=\"CircleEdge\" guid=\"{7f840fe1-34d5-4e50-b3b4-ade152550bce}\" relid=\"0x2\">\r\n        <name>CircleEdge_1</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>105,28</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-00000044\" kind=\"Point\" role=\"CircleCenter\" guid=\"{eb44e2ce-95da-4ece-a086-63edac6b234a}\" relid=\"0x1\">\r\n        <name>CircleCenter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>105,217</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DatumName\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"GeometricMarker\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n</folder>\r\n<regnode name=\"modtime\" isopaque=\"yes\">\r\n    <value>130433642209626719</value>\r\n</regnode>\r\n</folder>\r\n<folder id=\"id-006a-00000004\" relid=\"0x2\" childrelidcntr=\"0xd\" libref=\"MaterialLibrary CyPhy_MaterialLib\" kind=\"RootFolder\" guid=\"{5057546a-d298-4963-b477-b9ccbdb4da76}\">\r\n<name>MaterialLibrary CyPhy_MaterialLib</name>\r\n<folder id=\"id-006a-00000005\" relid=\"0xd\" childrelidcntr=\"0x69\" kind=\"MaterialsDefinition\" guid=\"{69120e36-14bd-4459-82d3-6c96375e77e6}\">\r\n<name>MaterialDefinitions</name>\r\n<atom id=\"id-0066-00000045\" kind=\"Material\" guid=\"{206a0a36-520e-44d1-8486-c121506a863c}\" relid=\"0x69\">\r\n    <name>steel_armor_hha_mil_dtl_46100</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_hha_mil_dtl_46100</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000046\" kind=\"Material\" guid=\"{c1e5df1c-1a2c-4fee-8458-06e086cf8e54}\" relid=\"0x68\">\r\n    <name>steel_bolt_metric_class_12p9</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_12p9</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000047\" kind=\"Material\" guid=\"{cb7fbcc6-14f5-480f-9324-ad0237fdccec}\" relid=\"0x67\">\r\n    <name>steel_stainless_304_annealed</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_304_annealed</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000048\" kind=\"Material\" guid=\"{ffafe5b4-e4b3-410d-b5d0-bac0467cf735}\" relid=\"0x66\">\r\n    <name>steel_armor_mars_300</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_mars_300</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000049\" kind=\"Material\" guid=\"{11f9b6f7-d143-4237-9223-09bc320df379}\" relid=\"0x65\">\r\n    <name>aluminum_alloy_1100_annealed</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_1100_annealed</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000004a\" kind=\"Material\" guid=\"{5a1e284a-0c6f-48fa-bfec-c50478a85730}\" relid=\"0x64\">\r\n    <name>polymer_rubber_fkm_mil_r_83248</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>polymer_rubber_fkm_mil_r_83248</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000004b\" kind=\"Material\" guid=\"{26713ab6-cdd1-4578-94e0-5302dcd9eafd}\" relid=\"0x63\">\r\n    <name>aluminum_filler_weld_5556</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_5556</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000004c\" kind=\"Material\" guid=\"{8967ac05-355a-4739-b8d7-259292acacc3}\" relid=\"0x62\">\r\n    <name>aluminum_filler_weld_5554</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_5554</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000004d\" kind=\"Material\" guid=\"{ef7d365e-4751-4c68-844a-c76240baa408}\" relid=\"0x61\">\r\n    <name>aluminum_alloy_2024_t361</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_2024_t361</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000004e\" kind=\"Material\" guid=\"{ac7a508e-4b91-4b46-a710-d31a20ff7b53}\" relid=\"0x60\">\r\n    <name>steel_med_carbon_1144_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_med_carbon_1144_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000004f\" kind=\"Material\" guid=\"{ed8675fa-b57e-4874-a4f7-8b94b3d08e14}\" relid=\"0x5f\">\r\n    <name>steel_high_alloy_hy80</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_high_alloy_hy80</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000050\" kind=\"Material\" guid=\"{6225a917-f1b3-44f8-a66a-26cdc0752975}\" relid=\"0x5e\">\r\n    <name>composite_fiber_kevlar_29</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>composite_fiber_kevlar_29</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000051\" kind=\"Material\" guid=\"{dfd9edc9-6ed6-4d79-886d-1687e90b5bb6}\" relid=\"0x5d\">\r\n    <name>steel_filler_weld_080ksi</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_filler_weld_080ksi</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000052\" kind=\"Material\" guid=\"{3f9c3879-4b72-4dbe-ada0-a5a4343cd119}\" relid=\"0x5c\">\r\n    <name>steel_low_carbon_1117_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1117_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000053\" kind=\"Material\" guid=\"{8fd0dd1b-7f48-478d-a490-3277d83eda24}\" relid=\"0x5b\">\r\n    <name>ceramic_transp_armor_spinel</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>ceramic_transp_armor_spinel</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000054\" kind=\"Material\" guid=\"{587bb619-916a-4a27-abb6-1de527b139d8}\" relid=\"0x5a\">\r\n    <name>aluminum_filler_weld_4047</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_4047</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000055\" kind=\"Material\" guid=\"{081611c2-01be-49f1-b238-61f3b9500b03}\" relid=\"0x59\">\r\n    <name>aluminum_filler_weld_4043</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_4043</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000056\" kind=\"Material\" guid=\"{0eecad55-0d33-4b3a-ba61-ee5ab45c6760}\" relid=\"0x58\">\r\n    <name>steel_low_carbon_1008_cold_draw</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1008_cold_draw</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000057\" kind=\"Material\" guid=\"{ca755580-bbe0-44fc-b222-e7271c70910b}\" relid=\"0x57\">\r\n    <name>steel_bolt_metric_class_5p8</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_5p8</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000058\" kind=\"Material\" guid=\"{a21dcb77-0122-44c1-86d9-63c62ff97557}\" relid=\"0x56\">\r\n    <name>steel_bolt_metric_class_4p8</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_4p8</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000059\" kind=\"Material\" guid=\"{b4b5eaa4-869f-4896-b6e3-3f993d639757}\" relid=\"0x55\">\r\n    <name>steel_high_alloy_hy130</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_high_alloy_hy130</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000005a\" kind=\"Material\" guid=\"{673f5171-bebd-4613-a0ca-52a29dea786e}\" relid=\"0x54\">\r\n    <name>steel_stainless_201_annealed</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_201_annealed</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000005b\" kind=\"Material\" guid=\"{81a8d14c-13be-4193-bb05-a246c593e39f}\" relid=\"0x53\">\r\n    <name>steel_low_carbon_1117_cold_draw</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1117_cold_draw</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000005c\" kind=\"Material\" guid=\"{1bbb11bf-6cfe-4d63-9374-7698760c3fc6}\" relid=\"0x52\">\r\n    <name>steel_bolt_metric_class_4p6</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_4p6</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000005d\" kind=\"Material\" guid=\"{dbfb0226-b3d9-42e9-9112-7dfcca2e28c1}\" relid=\"0x51\">\r\n    <name>aluminum_alloy_6061_t6</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_6061_t6</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000005e\" kind=\"Material\" guid=\"{5d27e3b0-d7fe-4399-851c-e15bd63a70dd}\" relid=\"0x50\">\r\n    <name>aluminum_alloy_6061_t4</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_6061_t4</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000005f\" kind=\"Material\" guid=\"{c58a0987-6a8b-4be5-93a3-3fe25f8ec00f}\" relid=\"0x4f\">\r\n    <name>aluminum_armor_mil_dtl_46027cl1</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_armor_mil_dtl_46027cl1</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000060\" kind=\"Material\" guid=\"{8ede19a8-7180-4225-9b73-e85ee58e7705}\" relid=\"0x4e\">\r\n    <name>steel_stainless_304_l</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_304_l</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000061\" kind=\"Material\" guid=\"{b0872358-1575-40bb-a3fc-63f431f1b83a}\" relid=\"0x4d\">\r\n    <name>steel_filler_weld_110ksi</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_filler_weld_110ksi</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000062\" kind=\"Material\" guid=\"{51897b0f-7196-4957-86fd-02e09dceb407}\" relid=\"0x4c\">\r\n    <name>steel_stainless_321_h</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_321_h</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000063\" kind=\"Material\" guid=\"{0aae00bb-20d4-4df6-8761-feb427c2f4df}\" relid=\"0x4b\">\r\n    <name>steel_armor_armox_500</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_armox_500</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000064\" kind=\"Material\" guid=\"{ce8dd7b8-1912-4197-9b31-65292be49a9f}\" relid=\"0x4a\">\r\n    <name>aluminum_filler_weld_2319</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_2319</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000065\" kind=\"Material\" guid=\"{1fc2cdba-82a6-4db1-a1b7-1dc4d8ccdffd}\" relid=\"0x49\">\r\n    <name>aluminum_alloy_7075_t651</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_7075_t651</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000066\" kind=\"Material\" guid=\"{12f0ede3-dc62-49f9-a21d-c29707d95344}\" relid=\"0x48\">\r\n    <name>steel_filler_weld_100ksi</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_filler_weld_100ksi</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000067\" kind=\"Material\" guid=\"{918c507b-10cf-46ae-9c4a-86630cc16e06}\" relid=\"0x47\">\r\n    <name>composite_fiber_kevlar_129</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>composite_fiber_kevlar_129</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000068\" kind=\"Material\" guid=\"{7ed7a032-0ac0-424a-996c-51f7438b3a8e}\" relid=\"0x46\">\r\n    <name>steel_low_alloy_a36</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_alloy_a36</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000069\" kind=\"Material\" guid=\"{f8c7551a-1617-4578-acf6-c499ff52d6c3}\" relid=\"0x45\">\r\n    <name>aluminum_alloy_2024</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_2024</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000006a\" kind=\"Material\" guid=\"{e4be687e-c168-4afd-9904-d4f817ecd3e3}\" relid=\"0x44\">\r\n    <name>titanium_pure_cp_gr3</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_pure_cp_gr3</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000006b\" kind=\"Material\" guid=\"{47e522de-5f21-4a30-85f1-b77e19727666}\" relid=\"0x43\">\r\n    <name>titanium_pure_cp_gr2</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_pure_cp_gr2</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000006c\" kind=\"Material\" guid=\"{402a1d05-3ef4-42f1-8ffe-accf95632366}\" relid=\"0x42\">\r\n    <name>titanium_pure_cp_gr1</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_pure_cp_gr1</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000006d\" kind=\"Material\" guid=\"{39099f40-c268-46ed-bd22-bfdc56df09d9}\" relid=\"0x41\">\r\n    <name>steel_high_alloy_hy100</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_high_alloy_hy100</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000006e\" kind=\"Material\" guid=\"{9627e077-a321-4cc7-8e0b-0ff99389fc33}\" relid=\"0x40\">\r\n    <name>titanium_pure_cp_gr4</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_pure_cp_gr4</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000006f\" kind=\"Material\" guid=\"{93963b43-6aa4-40b7-9a38-52b5751d6f32}\" relid=\"0x3f\">\r\n    <name>aluminum_armor_5456_h131</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_armor_5456_h131</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000070\" kind=\"Material\" guid=\"{40ac31ba-4e47-4441-88e5-b269fcff0967}\" relid=\"0x3e\">\r\n    <name>aluminum_filler_weld_1100</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_1100</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000071\" kind=\"Material\" guid=\"{048b3f2c-0bf6-4d8d-9983-540082183df2}\" relid=\"0x3d\">\r\n    <name>steel_armor_cast_mil_a_11356cl2</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_cast_mil_a_11356cl2</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000072\" kind=\"Material\" guid=\"{fb385db1-8f53-4b4b-8c70-c77ecaa1a87a}\" relid=\"0x3c\">\r\n    <name>steel_armor_cast_mil_a_11356cl1</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_cast_mil_a_11356cl1</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000073\" kind=\"Material\" guid=\"{90c061bf-cb9c-40d8-a1fb-915bb73fc12e}\" relid=\"0x3b\">\r\n    <name>steel_bolt_metric_class_8p8</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_8p8</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000074\" kind=\"Material\" guid=\"{d5d3051a-a50a-4762-8dd5-9813f7b8292a}\" relid=\"0x3a\">\r\n    <name>steel_low_alloy_c250</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_alloy_c250</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000075\" kind=\"Material\" guid=\"{2cb44040-c5aa-47cc-a855-f52d70223394}\" relid=\"0x39\">\r\n    <name>aluminum_alloy_7075_t6</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_7075_t6</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000076\" kind=\"Material\" guid=\"{f8acb610-068a-462d-a122-7affa35da64c}\" relid=\"0x38\">\r\n    <name>aluminum_filler_weld_1188</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_1188</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000077\" kind=\"Material\" guid=\"{ea4416e2-a400-4894-a41e-a0eda1154ec9}\" relid=\"0x37\">\r\n    <name>aluminum_filler_weld_5356</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_5356</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000078\" kind=\"Material\" guid=\"{1df135f3-9159-4b3e-92dc-26c2dc0c4ee2}\" relid=\"0x36\">\r\n    <name>steel_stainless_304_half_hard</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_304_half_hard</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000079\" kind=\"Material\" guid=\"{809bf6a8-a5a3-4c5a-bed3-2aba8667e2d4}\" relid=\"0x35\">\r\n    <name>steel_armor_atralloy_v2</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_atralloy_v2</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000007a\" kind=\"Material\" guid=\"{23664494-b631-4bda-8c23-bd2ba5ade04c}\" relid=\"0x34\">\r\n    <name>titanium_filler_weld_erti23</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_filler_weld_erti23</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000007b\" kind=\"Material\" guid=\"{3b3dbdf1-4870-4191-9cbb-5f6f2dee61b4}\" relid=\"0x33\">\r\n    <name>steel_low_carbon_1015_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1015_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000007c\" kind=\"Material\" guid=\"{3356c39e-e0a8-4e56-be17-a274fe8d316f}\" relid=\"0x32\">\r\n    <name>steel_med_carbon_1141_cold_draw</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_med_carbon_1141_cold_draw</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000007d\" kind=\"Material\" guid=\"{deefc07b-fb95-4695-ac7f-a43a6037556a}\" relid=\"0x31\">\r\n    <name>steel_stainless_filler_weld_347</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_filler_weld_347</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000007e\" kind=\"Material\" guid=\"{1c5efe33-4849-4c68-84b9-9cb3f8503912}\" relid=\"0x30\">\r\n    <name>aluminum_filler_weld_5183</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_5183</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000007f\" kind=\"Material\" guid=\"{4c674ce7-2960-4aa5-85b2-5b96a571759c}\" relid=\"0x2f\">\r\n    <name>steel_low_carbon_1006_cold_draw</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1006_cold_draw</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000080\" kind=\"Material\" guid=\"{e171272a-d907-4d94-9398-d0d87acb858c}\" relid=\"0x2e\">\r\n    <name>composite_fiber_kevlar_km2</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>composite_fiber_kevlar_km2</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000081\" kind=\"Material\" guid=\"{0ba5bb30-e0fa-4583-9dda-355b11af8825}\" relid=\"0x2d\">\r\n    <name>steel_stainless_316_annealed</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_316_annealed</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000082\" kind=\"Material\" guid=\"{f0537b56-a061-4f5c-bc08-8c1c5960858f}\" relid=\"0x2c\">\r\n    <name>steel_filler_weld_120ksi</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_filler_weld_120ksi</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000083\" kind=\"Material\" guid=\"{7a025409-8c11-4e6a-a96a-b8b5c2696a37}\" relid=\"0x2b\">\r\n    <name>steel_low_carbon_1006_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1006_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000084\" kind=\"Material\" guid=\"{063a7ce2-2f88-4cdb-994d-3e06eb35d1ac}\" relid=\"0x2a\">\r\n    <name>titanium_alloy_ti6al4v</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_alloy_ti6al4v</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000085\" kind=\"Material\" guid=\"{120c223c-9776-4d42-bae1-3141aecefaac}\" relid=\"0x29\">\r\n    <name>composite_fiber_dyneema_sk60</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>composite_fiber_dyneema_sk60</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000086\" kind=\"Material\" guid=\"{0c68370e-b1f6-4d8c-8799-4be769bc9459}\" relid=\"0x28\">\r\n    <name>steel_stainless_321_annealed</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_321_annealed</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000087\" kind=\"Material\" guid=\"{e35f8a20-1541-4360-bd68-4e60e863ee9c}\" relid=\"0x27\">\r\n    <name>aluminum_alloy_6063_t6</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_6063_t6</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000088\" kind=\"Material\" guid=\"{8ffa48c0-d2e8-4052-8520-543340b684f6}\" relid=\"0x26\">\r\n    <name>steel_bolt_metric_class_10p9</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_10p9</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000089\" kind=\"Material\" guid=\"{3a416b6c-29fb-49e9-811d-977696d9faa4}\" relid=\"0x25\">\r\n    <name>steel_stainless_filler_weld_317</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_filler_weld_317</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000008a\" kind=\"Material\" guid=\"{9329f08f-1415-495b-a000-dce2ebc6e855}\" relid=\"0x24\">\r\n    <name>steel_stainless_filler_weld_316</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_filler_weld_316</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000008b\" kind=\"Material\" guid=\"{46d18030-9449-49a0-8bbd-65cd6efad557}\" relid=\"0x23\">\r\n    <name>titanium_filler_weld_erti9</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_filler_weld_erti9</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000008c\" kind=\"Material\" guid=\"{8c467f17-04c8-4df4-90d9-00cf0e726ed9}\" relid=\"0x22\">\r\n    <name>aluminum_filler_weld_4643</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_4643</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000008d\" kind=\"Material\" guid=\"{c5160455-35e5-4832-9c0c-12dc7cab51d3}\" relid=\"0x21\">\r\n    <name>titanium_filler_weld_erti1</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_filler_weld_erti1</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000008e\" kind=\"Material\" guid=\"{6ffb7457-06d7-48ac-9919-b01c9bce5c85}\" relid=\"0x20\">\r\n    <name>ceramic_transp_armor_glass</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>ceramic_transp_armor_glass</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000008f\" kind=\"Material\" guid=\"{bcdd73a1-483d-4268-bba9-e00d4d7d6e10}\" relid=\"0x1f\">\r\n    <name>titanium_filler_weld_erti3</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_filler_weld_erti3</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000090\" kind=\"Material\" guid=\"{acf714b6-00d9-4840-944a-6633e88a0aff}\" relid=\"0x1e\">\r\n    <name>titanium_filler_weld_erti2</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_filler_weld_erti2</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000091\" kind=\"Material\" guid=\"{9a9da1e9-038e-4eaf-9b99-0a2e1c06e417}\" relid=\"0x1d\">\r\n    <name>titanium_filler_weld_erti5</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_filler_weld_erti5</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000092\" kind=\"Material\" guid=\"{7986f605-e604-4fb6-8c8f-5c59bc60e10b}\" relid=\"0x1c\">\r\n    <name>ceramic_transp_armor_sapphire</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>ceramic_transp_armor_sapphire</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000093\" kind=\"Material\" guid=\"{602dfd27-4bd7-4a8d-a1d6-f1e2fa51e9f1}\" relid=\"0x1b\">\r\n    <name>aluminum_alloy_2219_h31</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_2219_h31</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000094\" kind=\"Material\" guid=\"{a83c74cb-b638-48b1-91d1-c33f118c272a}\" relid=\"0x1a\">\r\n    <name>steel_armor_rha_mildtl_12560cl1</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_rha_mildtl_12560cl1</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000095\" kind=\"Material\" guid=\"{e0b6e5a3-e41e-4494-bbea-e5ccf81c759c}\" relid=\"0x19\">\r\n    <name>steel_armor_rha_mildtl_12560cl2</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_rha_mildtl_12560cl2</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000096\" kind=\"Material\" guid=\"{fc1c8833-d2b3-462a-b644-96e996ddddd1}\" relid=\"0x18\">\r\n    <name>steel_low_carbon_1018_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1018_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000097\" kind=\"Material\" guid=\"{d2ae27a4-a4ea-4ef6-a9c5-9404714f3177}\" relid=\"0x17\">\r\n    <name>steel_low_alloy_4140_normalized</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_alloy_4140_normalized</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000098\" kind=\"Material\" guid=\"{0901e087-ce61-4b04-a12d-55d6f4d596bf}\" relid=\"0x16\">\r\n    <name>steel_low_carbon_1015_cold_draw</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1015_cold_draw</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-00000099\" kind=\"Material\" guid=\"{15aa3475-3746-4b68-8a04-3f49b240b038}\" relid=\"0x15\">\r\n    <name>steel_armor_rha_mil_dtl_46177</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_armor_rha_mil_dtl_46177</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000009a\" kind=\"Material\" guid=\"{da0c2520-3381-4f33-8daa-9c57ce407ea1}\" relid=\"0x14\">\r\n    <name>steel_stainless_filler_weld_307</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_filler_weld_307</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000009b\" kind=\"Material\" guid=\"{64286b62-0f7f-467b-86cc-fe74410b6368}\" relid=\"0x13\">\r\n    <name>steel_low_carbon_1018_cold_draw</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1018_cold_draw</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000009c\" kind=\"Material\" guid=\"{37de6d45-9259-471f-9508-fbe35d7461c7}\" relid=\"0x12\">\r\n    <name>steel_low_alloy_a572_gr50</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_alloy_a572_gr50</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000009d\" kind=\"Material\" guid=\"{18af7f7c-7995-4619-a099-dbf31f41caab}\" relid=\"0x11\">\r\n    <name>steel_stainless_filler_weld_308</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_filler_weld_308</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000009e\" kind=\"Material\" guid=\"{fc228fa1-078e-42e2-994f-092752775af8}\" relid=\"0x10\">\r\n    <name>steel_stainless_filler_weld_309</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_filler_weld_309</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-0000009f\" kind=\"Material\" guid=\"{33d479a9-d4c2-4c4a-acba-451864d048b8}\" relid=\"0xf\">\r\n    <name>steel_stainless_316_l</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_316_l</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a0\" kind=\"Material\" guid=\"{870c0bd1-cef9-44b5-8735-715ff844a9d5}\" relid=\"0xe\">\r\n    <name>steel_tool_s7_annealed</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_tool_s7_annealed</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a1\" kind=\"Material\" guid=\"{c953d212-a7da-4696-9a44-43feedc0f9b2}\" relid=\"0xd\">\r\n    <name>steel_filler_weld_090ksi</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_filler_weld_090ksi</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a2\" kind=\"Material\" guid=\"{7898a0a6-4aeb-49af-9e52-ce20acb709f0}\" relid=\"0xc\">\r\n    <name>steel_low_carbon_1008_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_carbon_1008_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a3\" kind=\"Material\" guid=\"{c40465a3-6d13-4e2b-9c37-231a4e7fb3e7}\" relid=\"0xb\">\r\n    <name>steel_filler_weld_070ksi</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_filler_weld_070ksi</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a4\" kind=\"Material\" guid=\"{cd5c4cd1-a1ba-46a6-9b3a-f23d582aed42}\" relid=\"0xa\">\r\n    <name>polymer_rubber_hnbr</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>polymer_rubber_hnbr</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a5\" kind=\"Material\" guid=\"{1f750350-216b-4ced-8c02-4075b79ca2be}\" relid=\"0x9\">\r\n    <name>aluminum_alloy_5083_h32</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_5083_h32</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a6\" kind=\"Material\" guid=\"{78e6f0c7-7fcf-482f-99c6-ee460ffb1271}\" relid=\"0x8\">\r\n    <name>steel_bolt_metric_class_9p8</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_bolt_metric_class_9p8</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a7\" kind=\"Material\" guid=\"{afb06922-ed54-40b3-8108-9e7e0fe24e5d}\" relid=\"0x7\">\r\n    <name>aluminum_alloy_1100_h16</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_alloy_1100_h16</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a8\" kind=\"Material\" guid=\"{7b693382-7520-444c-ba95-e1f84f128e8b}\" relid=\"0x6\">\r\n    <name>steel_med_carbon_1141_hot_roll</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_med_carbon_1141_hot_roll</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000a9\" kind=\"Material\" guid=\"{124b4e11-7577-4d40-be02-9c971c9ce9e2}\" relid=\"0x5\">\r\n    <name>steel_tool_s7_tempered</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_tool_s7_tempered</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000aa\" kind=\"Material\" guid=\"{9ec914a1-797f-4884-9754-5d1be1110a01}\" relid=\"0x4\">\r\n    <name>steel_low_alloy_a515_gr70</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_low_alloy_a515_gr70</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000ab\" kind=\"Material\" guid=\"{b9b59cb4-0e93-414e-9f34-36dc7fd733a2}\" relid=\"0x3\">\r\n    <name>steel_stainless_321</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>steel_stainless_321</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000ac\" kind=\"Material\" guid=\"{14e139ea-a979-4862-8bb5-19e779fcfffb}\" relid=\"0x2\">\r\n    <name>titanium_alloy_ti6al4v_anneal</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>titanium_alloy_ti6al4v_anneal</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000ad\" kind=\"Material\" guid=\"{f5357e98-f21a-4636-ada9-259fcf7a1cc1}\" relid=\"0x1\">\r\n    <name>aluminum_filler_weld_5654</name>\r\n    <attribute kind=\"MaterialID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Name\">\r\n        <value>aluminum_filler_weld_5654</value>\r\n    </attribute>\r\n</atom>\r\n</folder>\r\n<regnode name=\"modtime\" isopaque=\"yes\">\r\n    <value>130433642204806444</value>\r\n</regnode>\r\n</folder>\r\n<folder id=\"id-006a-00000006\" relid=\"0x3\" childrelidcntr=\"0xc\" libref=\"PortLibrary CyPhy_PortLib\" kind=\"RootFolder\" guid=\"{e30db627-2b68-46a7-ad9b-fff19a95efda}\">\r\n<name>PortLibrary CyPhy_PortLib</name>\r\n<folder id=\"id-006a-00000007\" relid=\"0x2\" childrelidcntr=\"0x2\" kind=\"Connectors\" guid=\"{bded3721-5142-4910-9b2f-b137b12f08ea}\">\r\n<name>Interface and Port Definitions</name>\r\n<folder id=\"id-006a-00000008\" relid=\"0x1\" childrelidcntr=\"0x7\" kind=\"Ports\" guid=\"{cff68f7d-8940-4331-890e-3d4794150476}\">\r\n<name>Ports</name>\r\n<folder id=\"id-006a-00000009\" relid=\"0x7\" childrelidcntr=\"0x6\" kind=\"Ports\" guid=\"{13ba5590-7ffd-4507-88a8-e032f22a6214}\">\r\n    <name>Abstract Ports</name>\r\n    <atom id=\"id-0066-000000ae\" kind=\"AbstractPort\" guid=\"{a8650e97-3904-46a5-8e6a-46dcfd53b07e}\" relid=\"0x6\">\r\n        <name>Bus</name>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-000000af\" kind=\"AbstractPort\" guid=\"{0658454a-9591-40d6-8cf5-3a117bacdecc}\" relid=\"0x5\">\r\n        <name>InputSignal</name>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-000000b0\" kind=\"AbstractPort\" guid=\"{d783cbdd-9d17-4702-9951-f5f21a3728ee}\" relid=\"0x4\">\r\n        <name>OutputSignal</name>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-000000b1\" kind=\"AbstractPort\" guid=\"{a33f1164-05f3-4bc7-b863-1833ab2e8068}\" relid=\"0x3\">\r\n        <name>Signal</name>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-000000b2\" kind=\"AbstractPort\" guid=\"{21022279-949a-4dba-9b5d-c18bdf79c690}\" relid=\"0x2\">\r\n        <name>RotationalPower</name>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n    <atom id=\"id-0066-000000b3\" kind=\"AbstractPort\" guid=\"{0ebfb901-0ca1-4ed0-a0a9-0fc03ade6455}\" relid=\"0x1\">\r\n        <name>ElectricalPower</name>\r\n        <attribute kind=\"Definition\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n    </atom>\r\n</folder>\r\n<folder id=\"id-006a-0000000a\" relid=\"0x2\" childrelidcntr=\"0x1d\" kind=\"Ports\" guid=\"{2371312e-1a75-4e56-896a-9d5f9310c011}\">\r\n<name>Modelica Ports</name>\r\n<model id=\"id-0065-00000013\" kind=\"ModelicaConnector\" guid=\"{bccaad47-c177-41bd-95f7-9778485145b0}\" relid=\"0x1d\" childrelidcntr=\"0x1\">\r\n    <name>FlowPort</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>thermo_fluid_a.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>thermo_fluid_a.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Thermal.FluidHeatFlow.Interfaces.FlowPort_a</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000000c\" kind=\"ModelicaParameter\" role=\"ModelicaParameter\" guid=\"{c0fc029f-2a47-4088-9385-d233e775cf0a}\" relid=\"0x1\">\r\n        <name>medium</name>\r\n        <attribute kind=\"DefaultValue\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Value\">\r\n            <value></value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000014\" kind=\"ModelicaConnector\" guid=\"{9b7a8d3e-1c76-40b4-8e74-3ff7d0aca37e}\" relid=\"0x1c\" childrelidcntr=\"0x0\">\r\n    <name>AtmosphericEnvironmentBus</name>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.Interfaces.Context_Interfaces.Atmospheric_Environment.Atmospheric_Environment_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000015\" kind=\"ModelicaConnector\" guid=\"{5287e8c9-1ec0-45c3-b56a-fe5447ea6c35}\" relid=\"0x1b\" childrelidcntr=\"0x0\">\r\n    <name>BrakeControlBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000016\" kind=\"ModelicaConnector\" guid=\"{0d9cad7e-8b88-4811-934e-8551f8643bbf}\" relid=\"0x1a\" childrelidcntr=\"0x0\">\r\n    <name>TorqueConverterControlBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Torque_Converters.Common_Controls.Torque_Converter_Control_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000017\" kind=\"ModelicaConnector\" guid=\"{3b44a9ed-6331-4ffa-abb5-c0e0a6763c37}\" relid=\"0x19\" childrelidcntr=\"0x0\">\r\n    <name>BatteryBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.Electrical.Interfaces.Battery_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000018\" kind=\"ModelicaConnector\" guid=\"{925c9c5e-38f2-47ec-930d-3a5315f4e485}\" relid=\"0x18\" childrelidcntr=\"0x0\">\r\n    <name>DriverBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.Interfaces.Context_Interfaces.Driver.Driver_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000019\" kind=\"ModelicaConnector\" guid=\"{ee443573-1c55-4ed8-bb36-fdaabec2abf9}\" relid=\"0x17\" childrelidcntr=\"0x0\">\r\n    <name>ElectricMachineBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000001a\" kind=\"ModelicaConnector\" guid=\"{08c6ed18-fabf-49a5-bfbb-39f6c1b6837d}\" relid=\"0x16\" childrelidcntr=\"0x0\">\r\n    <name>SteeringControlBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Cross_Drive_Steering.Common_Controls.Steering_Control_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000001b\" kind=\"ModelicaConnector\" guid=\"{f8646310-87f0-41a2-9102-da1df16324a5}\" relid=\"0x15\" childrelidcntr=\"0x0\">\r\n    <name>RangePackControlBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Range_Packs.Common_Controls.Range_Pack_Control_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000001c\" kind=\"ModelicaConnector\" guid=\"{c08076f5-2975-4371-8a2d-1fa91c41553a}\" relid=\"0x14\" childrelidcntr=\"0x0\">\r\n    <name>EngineControlBus</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>bus.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>bus_icon.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Common_Controls.Engine_Control_Bus</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000001d\" kind=\"ModelicaConnector\" guid=\"{50154f00-3cbc-4b70-8b15-db1a374943b9}\" relid=\"0x13\" childrelidcntr=\"0x0\">\r\n    <name>IntegerInput</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_IntegerInput.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_IntegerInput_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Blocks.Interfaces.IntegerInput</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000001e\" kind=\"ModelicaConnector\" guid=\"{d10712bc-0ded-4648-9276-95e09557c15c}\" relid=\"0x10\" childrelidcntr=\"0x0\">\r\n    <name>IntegerOutput</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_IntegerOutput.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_IntegerOutput_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Blocks.Interfaces.IntegerOutput</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000001f\" kind=\"ModelicaConnector\" guid=\"{7cfb11d4-06ac-4577-831e-154d12720ebf}\" relid=\"0xf\" childrelidcntr=\"0x2\">\r\n    <name>FluidPort</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>simple_fluid_a.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>simple_fluid_a.png</value>\r\n    </regnode>\r\n    <regnode name=\"subTypeIcon\" isopaque=\"yes\">\r\n        <value></value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Fluid.Interfaces.FluidPort_a</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <atom id=\"id-0066-000000b4\" kind=\"ModelicaRedeclare\" role=\"ModelicaRedeclare\" guid=\"{cfa8260c-ca75-4ce2-9baf-497956aafe6a}\" relid=\"0x2\">\r\n        <name>Medium</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>364,245</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DefaultValue\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ModelicaRedeclareType\">\r\n            <value>Package</value>\r\n        </attribute>\r\n        <attribute kind=\"Notes\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Value\">\r\n            <value>Modelica.Media.Interfaces.PartialMedium</value>\r\n        </attribute>\r\n    </atom>\r\n</model>\r\n<model id=\"id-0065-00000020\" kind=\"ModelicaConnector\" guid=\"{26534aae-5b3c-4710-9e11-46987179a19b}\" relid=\"0xe\" childrelidcntr=\"0x0\">\r\n    <name>BooleanOutput</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_BooleanOutput.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_BooleanOutput_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Blocks.Interfaces.BooleanOutput</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000021\" kind=\"ModelicaConnector\" guid=\"{e19ca106-2cb3-4b5f-b462-7b559d96694d}\" relid=\"0xd\" childrelidcntr=\"0x0\">\r\n    <name>RealInput</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_RealInput.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_RealInput_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Blocks.Interfaces.RealInput</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000022\" kind=\"ModelicaConnector\" guid=\"{7541fc5f-a71c-42a5-b793-0fa9a4962b13}\" relid=\"0xc\" childrelidcntr=\"0x0\">\r\n    <name>BooleanInput</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_BooleanInput.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_BooleanInput_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Blocks.Interfaces.BooleanInput</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000023\" kind=\"ModelicaConnector\" guid=\"{7b0bc8fa-a3f4-4f1f-badf-af4fe89d6b4c}\" relid=\"0xb\" childrelidcntr=\"0x0\">\r\n    <name>HeatPort</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>heat_transfer_a.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>heat_transfer_a.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000024\" kind=\"ModelicaConnector\" guid=\"{5be54d0e-7cab-4d9d-9d77-2e1be0b7c1a0}\" relid=\"0xa\" childrelidcntr=\"0x0\">\r\n    <name>RealOutput</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_RealOutput.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_RealOutput_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Blocks.Interfaces.RealOutput</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000025\" kind=\"ModelicaConnector\" guid=\"{6887303f-5dab-4360-b352-b56c82557007}\" relid=\"0x6\" childrelidcntr=\"0x0\">\r\n    <name>MultibodyFrame</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>3D_a.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>3D_a.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Mechanics.MultiBody.Interfaces.Frame</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000026\" kind=\"ModelicaConnector\" guid=\"{50233f07-89ed-4fb3-b804-314f217e8cbf}\" relid=\"0x5\" childrelidcntr=\"0x0\">\r\n    <name>ElectricalPin</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>electrical_analog_pos.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>electrical_analog_pos.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Electrical.Analog.Interfaces.Pin</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000027\" kind=\"ModelicaConnector\" guid=\"{10645696-c8cb-4229-92f4-d54748259e92}\" relid=\"0x4\" childrelidcntr=\"0x0\">\r\n    <name>HydraulicPower</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>simple_fluid_a.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>simple_fluid_a.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000028\" kind=\"ModelicaConnector\" guid=\"{11341b2d-b690-4d40-8d23-b66abcfe2a9a}\" relid=\"0x3\" childrelidcntr=\"0x2\">\r\n    <name>FlangeWithBearing</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>RotationalPowerPort.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>RotationalPowerPort.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000000d\" kind=\"ModelicaParameter\" role=\"ModelicaParameter\" guid=\"{ad371f79-2bfe-4078-a7ea-d00a5efc90bc}\" relid=\"0x2\">\r\n        <name>includeBearingConnector</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"Aspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>441,231</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"DefaultValue\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"ID\" status=\"meta\">\r\n            <value></value>\r\n        </attribute>\r\n        <attribute kind=\"Value\">\r\n            <value>false</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000029\" kind=\"ModelicaConnector\" guid=\"{75df97ed-51f1-406c-af7a-61a5ec597a0d}\" relid=\"0x2\" childrelidcntr=\"0x0\">\r\n    <name>TranslationalFlange</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_TranslationalFlange.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_TranslationalFlange_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Mechanics.Translational.Interfaces.Flange_a</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-0000002a\" kind=\"ModelicaConnector\" guid=\"{fc882a57-7d9a-4e4a-8b1d-f0c0eca251c4}\" relid=\"0x1\" childrelidcntr=\"0x0\">\r\n    <name>RotationalFlange</name>\r\n    <regnode name=\"icon\" isopaque=\"yes\">\r\n        <value>Modelica_RotationalFlange.png</value>\r\n    </regnode>\r\n    <regnode name=\"porticon\" isopaque=\"yes\">\r\n        <value>Modelica_RotationalFlange_port.png</value>\r\n    </regnode>\r\n    <attribute kind=\"Class\">\r\n        <value>Modelica.Mechanics.Rotational.Interfaces.Flange_a</value>\r\n    </attribute>\r\n    <attribute kind=\"Definition\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"DefinitionNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"ID\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"InstanceNotes\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Locator\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n</folder>\r\n<model id=\"id-0065-00000012\" kind=\"TaxonomySheet\" guid=\"{35cf821a-d8ca-4df1-b681-be01422f55e3}\" relid=\"0x6\" childrelidcntr=\"0x15\">\r\n    <name>Taxonomy</name>\r\n    <reference id=\"id-0067-00000001\" kind=\"PortReference\" role=\"PortReference\" guid=\"{e340a072-8d95-4da0-8e0c-a2f20630d6aa}\" relid=\"0x12\" referred=\"id-0066-000000b1\">\r\n        <name>Signal</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>777,98</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <regnode name=\"namePosition\" isopaque=\"yes\">\r\n            <value>0</value>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000002\" kind=\"PortReference\" role=\"PortReference\" guid=\"{091ee7e3-63ec-4855-87cb-6b0e213bc470}\" relid=\"0xe\" referred=\"id-0065-00000024\">\r\n        <name>RealOutput</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>938,357</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000003\" kind=\"PortReference\" role=\"PortReference\" guid=\"{f4e39b64-a1fb-49d8-8d0a-bd09a55bb723}\" relid=\"0xd\" referred=\"id-0065-0000001e\">\r\n        <name>IntegerOutput</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>854,357</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000004\" kind=\"PortReference\" role=\"PortReference\" guid=\"{403e51fd-e4b2-4982-a35e-0a264aaae5f6}\" relid=\"0xc\" referred=\"id-0065-00000020\">\r\n        <name>BooleanOutput</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>1022,357</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000005\" kind=\"PortReference\" role=\"PortReference\" guid=\"{a0f76c16-e98a-41b3-a900-2bd821fdb415}\" relid=\"0xb\" referred=\"id-0066-000000b0\">\r\n        <name>OutputSignal</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>931,217</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <regnode name=\"namePosition\" isopaque=\"yes\">\r\n            <value>0</value>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000006\" kind=\"PortReference\" role=\"PortReference\" guid=\"{d0e57c53-15c6-42db-a19f-ae6508eea99e}\" relid=\"0x9\" referred=\"id-0065-00000022\">\r\n        <name>BooleanInput</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>728,357</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000007\" kind=\"PortReference\" role=\"PortReference\" guid=\"{c6cfab0c-cc41-4f4f-ae06-f97935d21b7e}\" relid=\"0x6\" referred=\"id-0065-00000021\">\r\n        <name>RealInput</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>553,357</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000008\" kind=\"PortReference\" role=\"PortReference\" guid=\"{5d57edca-cc92-466f-aa5b-6dd4b8575201}\" relid=\"0x5\" referred=\"id-0065-0000001d\">\r\n        <name>IntegerInput</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>637,357</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-00000009\" kind=\"PortReference\" role=\"PortReference\" guid=\"{640fc63b-a59a-4e62-8dd6-46f237a7622d}\" relid=\"0x4\" referred=\"id-0066-000000af\">\r\n        <name>InputSignal</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>630,217</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <regnode name=\"namePosition\" isopaque=\"yes\">\r\n            <value>0</value>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-0000000a\" kind=\"PortReference\" role=\"PortReference\" guid=\"{32af8c2a-e49e-43c0-8307-58f0a06b0abb}\" relid=\"0x2\" referred=\"id-0065-00000026\">\r\n        <name>ElectricalPin</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>336,217</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n    </reference>\r\n    <reference id=\"id-0067-0000000b\" kind=\"PortReference\" role=\"PortReference\" guid=\"{27293166-6e07-4ad5-8fc4-025907ac30e8}\" relid=\"0x1\" referred=\"id-0066-000000b3\">\r\n        <name>ElectricalPower</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"TaxonomyAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>336,98</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <regnode name=\"namePosition\" isopaque=\"yes\">\r\n            <value>0</value>\r\n        </regnode>\r\n    </reference>\r\n    <connection id=\"id-0068-00000013\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{bc55c6e0-cfb8-4057-8a59-6d13d845451d}\" relid=\"0x15\">\r\n        <name>SubtypeOf</name>\r\n        <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n            <value>sW</value>\r\n        </regnode>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000001\"/>\r\n        <connpoint role=\"src\" target=\"id-0067-00000005\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-00000014\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{db268751-a591-4572-9cc0-ddf62d6f17b3}\" relid=\"0x14\">\r\n        <name>SubtypeOf</name>\r\n        <regnode name=\"autorouterPref\" isopaque=\"yes\">\r\n            <value>sE</value>\r\n        </regnode>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000001\"/>\r\n        <connpoint role=\"src\" target=\"id-0067-00000009\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-00000015\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{203e950e-627b-4605-9aa5-5f0f23156930}\" relid=\"0x11\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-00000004\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000005\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-00000016\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{963e48ab-de24-4bcd-bbe4-c42dae8e70bc}\" relid=\"0x10\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-00000002\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000005\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-00000017\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{e44840c5-b6c1-4841-a45d-c6ddb0e12e96}\" relid=\"0xf\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-00000003\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000005\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-00000018\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{3dd23067-f6ce-45c8-aae1-0ea3a332b17c}\" relid=\"0xa\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-00000006\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000009\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-00000019\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{458bcbaf-6af6-4b94-966e-06c4fb87f888}\" relid=\"0x8\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-00000008\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000009\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-0000001a\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{0a05b5f5-6f9f-4d1b-941f-1903f446b501}\" relid=\"0x7\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-00000007\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-00000009\"/>\r\n    </connection>\r\n    <connection id=\"id-0068-0000001b\" kind=\"SubtypeOf\" role=\"SubtypeOf\" guid=\"{8fa1e85e-b67e-4871-a59f-67d6a03f1806}\" relid=\"0x3\">\r\n        <name>SubtypeOf</name>\r\n        <connpoint role=\"src\" target=\"id-0067-0000000a\"/>\r\n        <connpoint role=\"dst\" target=\"id-0067-0000000b\"/>\r\n    </connection>\r\n</model>\r\n</folder>\r\n</folder>\r\n<regnode name=\"modtime\" isopaque=\"yes\">\r\n    <value>130433642198596088</value>\r\n</regnode>\r\n</folder>\r\n<folder id=\"id-006a-0000000b\" relid=\"0x4\" childrelidcntr=\"0x8\" libref=\"UnitLibrary QUDT\" kind=\"RootFolder\" guid=\"{930ea234-c97f-40fd-aa87-a272824dfa19}\">\r\n<name>UnitLibrary QUDT</name>\r\n<folder id=\"id-006a-0000000c\" relid=\"0x1\" childrelidcntr=\"0x4\" kind=\"TypeSpecifications\" guid=\"{fd90cf10-6360-414e-8c3c-9d42897f41c7}\">\r\n<name>TypeSpecifications</name>\r\n<folder id=\"id-006a-0000000d\" relid=\"0x1\" childrelidcntr=\"0x229\" kind=\"Units\" guid=\"{a876dac4-3c46-4a71-b8d0-6d7fdefe738b}\">\r\n<name>Units</name>\r\n<model id=\"id-0065-0000002b\" kind=\"derived_unit\" guid=\"{d2da8f7e-9cd7-4f38-a835-bb665c36436d}\" relid=\"0x220\" childrelidcntr=\"0x3\">\r\n    <name>Newton per Millimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>N/mm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>N/mm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000000e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0717b347-e95d-444c-b248-bdf53fb7fbfb}\" relid=\"0x3\" referred=\"id-0065-0000002e\">\r\n        <name>Millimeter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>63,224</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000000f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{96a0c228-18fa-42e8-b0df-982e97477866}\" relid=\"0x2\" referred=\"id-0065-00000135\">\r\n        <name>Newton</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>98,70</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000002c\" kind=\"derived_unit\" guid=\"{7eca8763-7405-4b8f-ac98-946a97d22e95}\" relid=\"0x229\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram Millimeter Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-mm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Millimeter Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg-mm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000010\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e0cb8dbf-9141-4da1-b5e2-eec2ed5e89f9}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>336,175</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000011\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ae6d3f41-ca6b-4411-9dcb-eecf831b50ad}\" relid=\"0x2\" referred=\"id-0065-0000002e\">\r\n        <name>Millimeter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>749,224</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000002d\" kind=\"conversion_based_unit\" guid=\"{7db495c6-4bda-4381-9611-301d029d45f1}\" relid=\"0x21e\" childrelidcntr=\"0x1\">\r\n    <name>Megapascal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>MPa</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Megapascal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>MPa</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000012\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3702ae8f-def5-45d3-939a-032f04b04a09}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000002e\" kind=\"conversion_based_unit\" guid=\"{d6d1c335-89b8-4406-bcff-8e015a35a5c5}\" relid=\"0x21d\" childrelidcntr=\"0x1\">\r\n    <name>Millimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Millimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000013\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f056fdcd-4af3-4ff0-bf7d-83902b6ed4a3}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>224,84</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\" status=\"meta\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000002f\" kind=\"derived_unit\" guid=\"{f223cea9-764a-40b3-a7b3-1f61b6ac4ff3}\" relid=\"0x21b\" childrelidcntr=\"0x0\">\r\n    <name>Newton Second per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>(N-s)/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton Second per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>(N-s)/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n</model>\r\n<model id=\"id-0065-00000030\" kind=\"derived_unit\" guid=\"{d80cb6b6-96dd-46fa-b92e-76c541b03a0c}\" relid=\"0x228\" childrelidcntr=\"0x2\">\r\n    <name>Watt per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000014\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{48c5dcfa-fced-40e8-b297-fa3825457d40}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>231,280</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000015\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3fbb9fce-0d0f-4c93-bf79-e3529b6d348f}\" relid=\"0x1\" referred=\"id-0065-000001c6\">\r\n        <name>Watt</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>147,154</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000031\" kind=\"conversion_based_unit\" guid=\"{d369061f-db5c-479f-a10a-7cf3369b5d59}\" relid=\"0x21a\" childrelidcntr=\"0x1\">\r\n    <name>Liter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>L</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Liter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>L</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000016\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7de379d6-9c7b-4e78-ae84-f1d830ee7421}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>161,203</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000032\" kind=\"derived_unit\" guid=\"{5550aba1-82dd-4c77-8e7d-c0aa5a981125}\" relid=\"0x227\" childrelidcntr=\"0x3\">\r\n    <name>Pascal per Meter to the Sixth Second Square</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Pa/(m^6 s^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal per Meter to the Sixth Second Square</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pa/(m^6 s^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000017\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b562416a-4932-42f1-894f-2ac0e29ee66c}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>455,70</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000018\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{60a56c9b-a718-409c-a957-8e1a2e9bb682}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>399,252</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-6</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000019\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{19d191ab-6705-4483-b3dd-0ef682beb9f9}\" relid=\"0x1\" referred=\"id-0065-00000194\">\r\n        <name>Pascal</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>203,112</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000033\" kind=\"derived_unit\" guid=\"{a1f5b34d-b871-4f0d-bf3d-04ca8cc4eaae}\" relid=\"0x218\" childrelidcntr=\"0x3\">\r\n    <name>Watt per Square Meter Celcius</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m^2-C)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Celcius</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m^2-C)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000001a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b5556cea-53bf-494b-81f7-57e9aee40e57}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>147,567</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000001b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2ec6129f-41cc-4459-aee4-c61c2ebd11e7}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>147,385</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000001c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{457d70c5-98d8-45ae-97ec-5652a4ff45c6}\" relid=\"0x1\" referred=\"id-0065-000001e1\">\r\n        <name>Degree Celsius</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>63,224</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000034\" kind=\"derived_unit\" guid=\"{b85ff295-fc44-4d35-86d1-a67a3b7ef330}\" relid=\"0x225\" childrelidcntr=\"0x6\">\r\n    <name>Pascal per Cubic Meter Second</name>\r\n    <attribute kind=\"Abbreviation\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal per Cubic Meter Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pa/(m^3 s)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000001d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9364bd7e-c43c-41b1-b828-9f0ebc8a3114}\" relid=\"0x6\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>434,322</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000001e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2bf790dc-e34f-4a79-a15f-e2363d4c693f}\" relid=\"0x5\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>259,322</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000001f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7fb49c75-24fe-4863-9528-ce6d4f1e384e}\" relid=\"0x4\" referred=\"id-0065-00000194\">\r\n        <name>Pascal</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>238,147</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000035\" kind=\"derived_unit\" guid=\"{0c42eba9-8315-4395-ad23-23485a23739d}\" relid=\"0x224\" childrelidcntr=\"0x4\">\r\n    <name>Joule per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000020\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{35d64d8c-5b5f-431f-ab79-077e31aa5031}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000021\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f552c496-57d1-4b67-a53b-7b6ddc78cbff}\" relid=\"0x3\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000022\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{700bfda3-afde-44b3-82fa-707faa2f65a0}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000023\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{46b8d4d8-3ed1-46d1-ad0b-f3b13122d85f}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000036\" kind=\"derived_unit\" guid=\"{55abaac6-1d04-4ef6-bbc8-7de3577090c0}\" relid=\"0x217\" childrelidcntr=\"0x2\">\r\n    <name>Watt per Degree Celcius</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/C</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Degree Celcius</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/C</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000024\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8b860356-9e4b-4eca-b94b-a26ce0906589}\" relid=\"0x2\" referred=\"id-0065-000001e1\">\r\n        <name>Degree Celsius</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>63,385</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000025\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9d09c4a1-8708-4145-8f7e-05aa95b95a23}\" relid=\"0x1\" referred=\"id-0065-000001c6\">\r\n        <name>Watt</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>105,161</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000037\" kind=\"conversion_based_unit\" guid=\"{dd0fd254-5544-4497-9785-01d41c2b178e}\" relid=\"0x222\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Millimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mm^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Millimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mm^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000026\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2363dad2-d5f9-4251-9674-de1741ff459a}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000038\" kind=\"derived_unit\" guid=\"{e5928c87-39e9-467e-810c-1066c4d7485f}\" relid=\"0x223\" childrelidcntr=\"0x3\">\r\n    <name>Kilogram per Cubic Millimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/mm^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Cubic Millimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/mm^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000027\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2ec49a2a-2c18-4fe7-b309-4d98a3d54cb2}\" relid=\"0x3\" referred=\"id-0065-00000037\">\r\n        <name>Cubic Millimeter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>70,63</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000028\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{12f15f59-a7f2-494a-909b-9a8cfffdc8a8}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>84,182</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000039\" kind=\"derived_unit\" guid=\"{1cff3c27-db7c-4cbe-8f35-889cbd8b6081}\" relid=\"0x216\" childrelidcntr=\"0x3\">\r\n    <name>Newton Meter per Degree Angle</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>(N-m)/deg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton Meter per Degree Angle</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>(N-m)/deg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000029\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{46e7b250-1e40-42d6-9844-b3f162958e32}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>112,238</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000002a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a88480e6-23a9-405b-aa68-82452fa5cfa7}\" relid=\"0x3\" referred=\"id-0065-0000003e\">\r\n        <name>Degree Angle</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>147,518</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000002b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b713f355-842d-410d-ad9e-fd9851da2463}\" relid=\"0x2\" referred=\"id-0065-00000135\">\r\n        <name>Newton</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>98,70</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000003a\" kind=\"derived_unit\" guid=\"{99cb829f-5d7f-4a1f-a176-e926434425fe}\" relid=\"0x221\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram per Millimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/mm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Millimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/mm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000002c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{93c7e4c8-a85d-4a03-a056-f41360ba7080}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000002d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a131b84d-df84-4a3d-aa5e-054655e19bdd}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000003b\" kind=\"derived_unit\" guid=\"{adacb99a-929f-4c47-8b1e-877fca01d6e6}\" relid=\"0x215\" childrelidcntr=\"0x2\">\r\n    <name>Newton per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>N/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>N/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000002e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{827e1945-4cfb-4937-8da0-99138b7fd2cc}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>147,329</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000002f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3c08eaad-31e8-4c9e-a4d4-b3a8a8929979}\" relid=\"0x2\" referred=\"id-0065-00000135\">\r\n        <name>Newton</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>98,70</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000003c\" kind=\"derived_unit\" guid=\"{d6311da1-9408-458e-8059-9db4e78c3631}\" relid=\"0x21f\" childrelidcntr=\"0x4\">\r\n    <name>Newton per Meter Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>N/(m-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>N/(m-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Newton per Meter Second</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000030\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{454145b2-fb37-45bf-9b18-76c0c2518887}\" relid=\"0x4\" referred=\"id-0065-00000154\">\r\n        <name>Second</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>455,273</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000031\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{61f8336f-dec0-4f47-8e0d-bf5554c2c199}\" relid=\"0x3\" referred=\"id-0065-000000d2\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>91,378</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000032\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9292420e-862d-43c7-84f0-996605ecbb3b}\" relid=\"0x2\" referred=\"id-0065-00000135\">\r\n        <name>Newton</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>77,77</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000003d\" kind=\"derived_unit\" guid=\"{c44c1537-66d8-490c-a499-c20a171c1000}\" relid=\"0x213\" childrelidcntr=\"0x2\">\r\n    <name>Newton Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>N-m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>N-m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000033\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{58c17d8d-ffb4-4e7d-8b67-0ffe13f0fc65}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>147,329</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000034\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e3dcfe36-26c4-42a7-97e6-1aaf91b73470}\" relid=\"0x1\" referred=\"id-0065-00000135\">\r\n        <name>Newton</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>98,70</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000003e\" kind=\"conversion_based_unit\" guid=\"{97c9bd5b-2630-46bb-b8d8-ea7818c84e8f}\" relid=\"0x212\" childrelidcntr=\"0x1\">\r\n    <name>Degree Angle</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>deg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree Angle</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>deg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000035\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cf62733f-9742-4080-b933-8fce66af82f6}\" relid=\"0x1\" referred=\"id-0066-000000b5\">\r\n        <name>Radian</name>\r\n        <regnode name=\"PartRegs\" status=\"undefined\">\r\n            <value></value>\r\n            <regnode name=\"UnitAspect\" status=\"undefined\">\r\n                <value></value>\r\n                <regnode name=\"Position\" isopaque=\"yes\">\r\n                    <value>91,77</value>\r\n                </regnode>\r\n            </regnode>\r\n        </regnode>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.017453292499999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\" status=\"meta\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000003f\" kind=\"derived_unit\" guid=\"{baf5ceb4-d134-4809-9c5f-9280bbdb18f3}\" relid=\"0x208\" childrelidcntr=\"0x4\">\r\n    <name>Farad per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>F/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Farad per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>F m^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000036\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{03380760-5603-48e1-ac4a-252b3c106b4b}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000037\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c4bbae66-0c9b-467e-a666-4a48c951f6df}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000038\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3c1c86f9-0eb5-4139-b188-3ca1b9f35e66}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000039\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{896d24a2-c8e8-4692-a675-f316b52dcfcb}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000040\" kind=\"derived_unit\" guid=\"{5d542f9c-8d8e-4cf9-bcf7-88d97bcc4634}\" relid=\"0x207\" childrelidcntr=\"0x3\">\r\n    <name>Square Coulomb Meter per Joule</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C^2 m^2 J^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Coulomb Meter per Joule</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C^2 m^2 J^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000003a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{76a9e461-1406-4e12-ab2a-116a791a2b68}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000003b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0dde3798-bc03-4e20-b4a4-de892138ab3f}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000003c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2b813a24-8b49-4737-a8c9-7be111a7d51a}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000041\" kind=\"derived_unit\" guid=\"{0d7a05e7-1755-40be-8fba-bc43b65f3177}\" relid=\"0x206\" childrelidcntr=\"0x2\">\r\n    <name>Gray per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Gy/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gray per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Gy/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000003d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{53ed0e01-5bff-4717-95f8-0a4abe518302}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000003e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{02f6fc0e-c531-468d-afe7-4b3654cafc66}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000042\" kind=\"derived_unit\" guid=\"{8c08be85-841c-495e-80d3-4b81e393844d}\" relid=\"0x205\" childrelidcntr=\"0x3\">\r\n    <name>Pascal per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>P / s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>P / s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000003f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ecdee84d-c4ee-4314-a3a8-1d3932fc5c96}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000040\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9668694d-80b9-4c95-af1b-701436896159}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000041\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0186356e-fcc2-49e6-bedf-8a19992b3daf}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000043\" kind=\"derived_unit\" guid=\"{acc365ff-2262-4031-a666-f7461e4c4965}\" relid=\"0x204\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram Meter Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Meter Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg-m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000042\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{fc9b1c69-676f-4581-b870-629b09af99c2}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000043\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{198afe9a-de3a-43a3-b370-8840ff486c6a}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000044\" kind=\"derived_unit\" guid=\"{babe8052-21f3-4d83-9acf-39bfdabdb8c8}\" relid=\"0x203\" childrelidcntr=\"0x3\">\r\n    <name>Cubic Meter per Kilogram Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3 kg^-1 s^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Kilogram Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3 kg^-1 s^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000044\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9f1ca1c8-7635-4e6c-8f4d-f0c7319bda39}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000045\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5dd586bb-5cb2-4800-a73e-455ae4236eee}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000046\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3bfdf72f-34ec-49f9-b7d4-b46a288e078e}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000045\" kind=\"derived_unit\" guid=\"{3ffb696e-a9c5-4fcb-8cb7-5c44f38d9e0e}\" relid=\"0x202\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m^-3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000047\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b5db35dc-756a-445f-8498-1553263e67a6}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000048\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{465267aa-2ff9-4d8d-a2fe-d2dd9899f26d}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000049\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b7c05af6-26e8-4a9d-bf52-69e7094308ce}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000046\" kind=\"derived_unit\" guid=\"{bfe41fae-1c4e-4cd0-beed-d37521ae5325}\" relid=\"0x201\" childrelidcntr=\"0x2\">\r\n    <name>Cubic Meter per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000004a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{08c57ff5-f58c-4f30-a8a6-d80cc14d0f32}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000004b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{deffddff-cd41-414c-a2e5-eadfd20f610c}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000047\" kind=\"derived_unit\" guid=\"{8dc1e928-720c-49c7-a0b2-72dd3ba80c2e}\" relid=\"0x200\" childrelidcntr=\"0x4\">\r\n    <name>Meter per Farad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Farad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m/F</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000004c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{af0e2988-d085-4702-b6bf-ae5e3467705b}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000004d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{89319fb0-d006-4f60-a4f9-4ce66ca4071e}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000004e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f15337c9-0b53-4f39-93ee-ea8417f73f7e}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000004f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5016c7c5-2ca0-4ae5-84cc-a1435a4c67a9}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000048\" kind=\"derived_unit\" guid=\"{9ff2bf96-25ab-4627-a3af-561fa7498596}\" relid=\"0x1ff\" childrelidcntr=\"0x4\">\r\n    <name>Tesla Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m T</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tesla Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m T</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000050\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d731d58c-b1f0-4033-a414-5098e5045b2b}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000051\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5a7c6789-2cb2-44c9-be96-b6587f95be06}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000052\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{bac7974b-f21d-45fd-9171-d694c783cf80}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000053\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a9380a1f-034f-4e04-915e-59c2edde3b8a}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000049\" kind=\"derived_unit\" guid=\"{9184cc90-e43b-4a77-8308-3e11537c18c6}\" relid=\"0x1fe\" childrelidcntr=\"0x3\">\r\n    <name>Kilogram Meter Per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-m/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Meter Per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg m s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000054\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{75ae5c18-efb8-4d55-ba28-359541cfd884}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000055\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{16ade430-780d-4b28-9059-89abcd74a48f}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000056\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b6ba3e31-265d-4e00-8f43-ef9bd219d0ab}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000004a\" kind=\"derived_unit\" guid=\"{ac2929a9-ad94-4e65-9eca-46c472dc49a0}\" relid=\"0x1fd\" childrelidcntr=\"0x1\">\r\n    <name>Per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000057\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d1a725e3-fbed-444b-ba50-5e379f39c7bf}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000004b\" kind=\"derived_unit\" guid=\"{457663ad-6baa-4431-9cd9-ef2b04c58037}\" relid=\"0x1fc\" childrelidcntr=\"0x4\">\r\n    <name>Kelvin per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K/W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K/W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000058\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{19dbe907-e539-45c6-96e1-4089ab6dbe01}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000059\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8f0b67fa-0635-4e57-95c5-beac32f5f165}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000005a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{670c1ae1-df8f-423d-ac52-8195506a97cb}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000005b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{08ab826d-187b-4e5b-9196-ed1babb56e17}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000004c\" kind=\"derived_unit\" guid=\"{f3a50ba9-397f-4c29-91f9-543722877d0f}\" relid=\"0x1fb\" childrelidcntr=\"0x3\">\r\n    <name>LengthEnergy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000005c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{65aece53-c806-47a5-914c-96c3275e873a}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000005d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{32ddd412-bfc3-4139-a85c-64edb1f2c952}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000005e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{4c1e43d3-7735-4486-97cf-f9deecddcf5a}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000004d\" kind=\"derived_unit\" guid=\"{4c703647-b1a8-411d-b3d0-2387c4a89144}\" relid=\"0x1fa\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C kg^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000005f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{90f94d6b-9252-473c-bdc5-d97605a41a06}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000060\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8ce2bd36-e2ad-43b3-9a31-7d7b7886f1a3}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000061\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f64a4f2b-0cd9-4b25-b0df-dadf1ba5143b}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000004e\" kind=\"derived_unit\" guid=\"{fe0383b5-545f-4f0b-afef-a2f183914345}\" relid=\"0x1f9\" childrelidcntr=\"0x1\">\r\n    <name>Hertz</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000062\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{08b27f16-32f0-49c5-b095-2e39c81942b5}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000004f\" kind=\"derived_unit\" guid=\"{aebd688b-666f-4904-bcc1-0fede1cee83a}\" relid=\"0x1f8\" childrelidcntr=\"0x2\">\r\n    <name>Mole per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000063\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0bf821b9-3849-46ef-8ca1-0e9f8b76d140}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000064\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f8346876-a3d5-4590-8b11-a0c2afad8918}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000050\" kind=\"derived_unit\" guid=\"{71705252-f275-4074-b7fd-64268e6d63e3}\" relid=\"0x1f7\" childrelidcntr=\"0x4\">\r\n    <name>Watt per Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W sr^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000065\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a640ab55-2575-4829-9038-cad06007fbfb}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000066\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e1f209fa-ded4-4ebd-9f19-490b53fd333a}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000067\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f514878a-3351-4f4b-a5d6-086beb0a3993}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000068\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{984256f3-699d-4bc6-b6d3-69f9d917fdff}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000051\" kind=\"derived_unit\" guid=\"{26f6f5db-65c2-4bbb-b187-90069cb0c179}\" relid=\"0x1f6\" childrelidcntr=\"0x3\">\r\n    <name>Watt Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000069\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2681974d-2ec3-403b-acb4-89404216b4ca}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000006a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3229d985-b1cf-4e35-8ec3-0e2bb3669b2a}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000006b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a8b683a0-7c5f-4cfc-a42b-110e0bdc95a5}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000052\" kind=\"derived_unit\" guid=\"{41e052a7-8fb7-4014-82bd-312be7537e15}\" relid=\"0x1f5\" childrelidcntr=\"0x5\">\r\n    <name>Joule per Mole Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/(mol-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Mole Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J mol^-1 K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000006c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f7ff6ed6-2b57-4492-8f3a-c7e42d6d305e}\" relid=\"0x5\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000006d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5c01388b-5004-455d-b827-7454e956cc0f}\" relid=\"0x4\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000006e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{54dc8c95-ae0a-4185-8619-5bd7195a5438}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000006f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5b5eef59-8b7e-439d-9293-bc70eef77567}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000070\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ec7f3c0c-5a3e-4d81-be0c-fb404cf02df5}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000053\" kind=\"derived_unit\" guid=\"{ea8602ec-f63a-4efd-b569-62090de3b4a5}\" relid=\"0x1f4\" childrelidcntr=\"0x3\">\r\n    <name>Joule Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000071\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7798e320-fc6c-444a-88c6-e696ce4c713b}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000072\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e128ad19-7772-494e-9e79-1e474cb3591b}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000073\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{13077cd8-6890-4d2b-811c-e1c988457da4}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000054\" kind=\"derived_unit\" guid=\"{50a3509d-1d66-4e75-a381-cce913b0bf8b}\" relid=\"0x1f3\" childrelidcntr=\"0x2\">\r\n    <name>Radian per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Radian per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000074\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2f359f76-ea8d-4958-acb7-910b255ca3a8}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000075\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d5dd8f1d-be8e-461e-8bbd-2458a0912181}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000055\" kind=\"derived_unit\" guid=\"{573f6c90-5472-48c7-9948-e59d264c091d}\" relid=\"0x1f2\" childrelidcntr=\"0x3\">\r\n    <name>Watt per Square Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m^2-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m^2-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000076\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a373fb56-a6ba-4230-aa6d-ffa40ff9837b}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000077\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8d869b26-862c-4abf-b012-a53775298faf}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000078\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7048b9e1-87ee-426d-8800-6d5a19361216}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000056\" kind=\"derived_unit\" guid=\"{aef8d4a3-260f-4162-9288-e4ff05a5a2cd}\" relid=\"0x1f1\" childrelidcntr=\"0x2\">\r\n    <name>TimeTemperature</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000079\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c030268f-e0e7-48c5-87c2-3319ae2b7528}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000007a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{671dfc8a-2e04-4fb5-8ce7-1d5a39ade53f}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000057\" kind=\"derived_unit\" guid=\"{9bfbd49c-84ec-428e-9b8e-bf23e313c764}\" relid=\"0x1f0\" childrelidcntr=\"0x4\">\r\n    <name>Per Tesla Meter Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^-1 T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Tesla Meter Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-1 T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000007b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9d12b86d-5a17-4989-9ccb-84bcbb0e16ab}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000007c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6362a410-b181-4804-92ef-3fa44245e278}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000007d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0f24ff61-cb20-4f1f-b513-3e3769fd68a4}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000007e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{41dcf952-913e-4a8c-84db-ae6987e93dbe}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000058\" kind=\"derived_unit\" guid=\"{bba814c2-c9cd-449b-9c84-a6049de553fe}\" relid=\"0x1ef\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000007f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9f64eda1-cd82-4414-88ef-0c7549bb6039}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000059\" kind=\"derived_unit\" guid=\"{c70b1766-f7f9-44d8-9edc-2cc1b3a2e176}\" relid=\"0x1ee\" childrelidcntr=\"0x2\">\r\n    <name>Cubic Meter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000080\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d82bf3f5-8964-4023-94cd-87d5496f34cf}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000081\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5780079d-6dd5-45af-962d-b98cc5a7da7b}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000005a\" kind=\"derived_unit\" guid=\"{a06573d4-a894-4c3e-8d68-9c91d2948870}\" relid=\"0x1ed\" childrelidcntr=\"0x2\">\r\n    <name>Hertz per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000082\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{49700651-1cc5-4812-913b-54e8312a8b73}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000083\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c7f03062-a00a-4187-898a-ce8a41967f94}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000005b\" kind=\"derived_unit\" guid=\"{e4bae66b-8ef6-4fe0-b4c9-2bbc405e1f77}\" relid=\"0x1ec\" childrelidcntr=\"0x2\">\r\n    <name>Watt per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000084\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0a663cfc-0060-49e1-904b-2b8159ebfe1e}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000085\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e428df6f-9eb1-46ec-adf2-ac2cdad9438c}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000005c\" kind=\"derived_unit\" guid=\"{602e8c2a-8fa3-4f81-999c-71d387646546}\" relid=\"0x1eb\" childrelidcntr=\"0x2\">\r\n    <name>Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000086\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f6b68588-ab9f-4573-8ca4-8920b54f813b}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000087\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{57d6407b-4a75-483a-a088-62ecadb66015}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000005d\" kind=\"derived_unit\" guid=\"{f9b49818-2e77-415e-bd3f-5a20eda69d0f}\" relid=\"0x1ea\" childrelidcntr=\"0x4\">\r\n    <name>Henry per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>H/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Henry per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>H/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000088\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{623ab890-49f5-40af-a912-1c4794f5ad53}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000089\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{1ce20cbd-3199-4462-86d8-b9b9778c078e}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000008a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{91a8ec59-e80c-443f-aa02-377cd7ca2002}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000008b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b22f236a-a00f-4eff-8914-4e9be90bec1e}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000005e\" kind=\"derived_unit\" guid=\"{8b2a7111-b8b5-44c8-ac72-9df24d86029c}\" relid=\"0x1e9\" childrelidcntr=\"0x2\">\r\n    <name>Ampere per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000008c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e63f944d-692a-4b1d-b025-7f41f3f6b154}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000008d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{77e7cd99-e5de-4922-817c-710b430b0a20}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000005f\" kind=\"derived_unit\" guid=\"{d15af01c-9612-4726-aa9d-a77c8ee1fd4c}\" relid=\"0x1e8\" childrelidcntr=\"0x3\">\r\n    <name>Newton</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>N</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>N</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000008e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9cd2447f-39c0-4a2d-9f6c-d77bbf771102}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000008f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{54a08107-31b7-4002-954e-05134bf1eff8}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000090\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9cb42fdf-c233-4c05-8c6b-beae85283964}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000060\" kind=\"derived_unit\" guid=\"{dfe407e9-0042-444c-bfd6-e3c649c7e731}\" relid=\"0x1e7\" childrelidcntr=\"0x1\">\r\n    <name>Per Mole Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Mole Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000091\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{cd2ecc93-b4ad-4582-99cd-e5ef7a12e434}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000061\" kind=\"derived_unit\" guid=\"{fe472185-19be-481f-9b20-6c129f3d03c8}\" relid=\"0x1e6\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000092\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{33617d3c-125e-4ac3-9369-56c9f7227fc8}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000093\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{4a850e2b-37fc-48f6-bc71-f69cb303148f}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000062\" kind=\"derived_unit\" guid=\"{37ce56f6-0448-4f6f-8de3-575b8e405c3b}\" relid=\"0x1e5\" childrelidcntr=\"0x3\">\r\n    <name>Volt per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>V m^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>V m^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000094\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{bcea1e17-b684-48f9-9706-16e1c0681579}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000095\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{26b348bd-7d40-41b7-b59c-4c3abd4244a2}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000096\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{529831c3-9b39-407e-96bc-ce195420a124}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000063\" kind=\"derived_unit\" guid=\"{257930cf-00f2-462c-b9f3-203992d70e95}\" relid=\"0x1e4\" childrelidcntr=\"0x3\">\r\n    <name>Pascal Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Pa-s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pa-s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000097\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{543531a9-8d48-4033-bd0c-95346f00c3d6}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000098\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{408bde4c-dbd9-4651-87bf-7c104ca2ba9a}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000099\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{05e3916a-4bd5-4524-938b-6ecda0736357}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000064\" kind=\"derived_unit\" guid=\"{171f9038-8914-4ae6-ab42-989ea7d71a4e}\" relid=\"0x1e3\" childrelidcntr=\"0x2\">\r\n    <name>ElectricCurrentPerUnitLength</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000009a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{4a0b33af-ff86-4d50-a4cc-8c2289a24b82}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000009b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{465a238f-8e48-4a41-9d31-ae8439ccee88}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000065\" kind=\"derived_unit\" guid=\"{31155d89-7661-47d9-a6aa-c3f32008fa52}\" relid=\"0x1e2\" childrelidcntr=\"0x3\">\r\n    <name>Square Meter Kelvin per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>(K^2)m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter Kelvin per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>(K^2)m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000009c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c0d4c0b3-7436-4c0f-852f-8915236c8478}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000009d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{09fc8867-db16-4be3-9b14-72d8c92ae9d2}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000009e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e86ab49a-3d8f-4126-8c43-6b165073eb8b}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000066\" kind=\"derived_unit\" guid=\"{5839f07a-8417-4905-af5f-42a756e213b1}\" relid=\"0x1e1\" childrelidcntr=\"0x2\">\r\n    <name>Cubic Meter per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000009f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6a458112-d595-4a06-9a0e-b8126be8d9ea}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000a0\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{16cbe52f-b8b8-4104-9759-5aa98e288a03}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000067\" kind=\"derived_unit\" guid=\"{9779f23f-0710-4e1e-89f6-4fe68fe68e14}\" relid=\"0x1e0\" childrelidcntr=\"0x3\">\r\n    <name>InverseEnergy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000a1\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{80c98e9d-8257-4e49-baaf-7682e80f5887}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000a2\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a2388bce-f75c-4dc7-a34c-3c49fd0f4cb5}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000a3\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e1c9c6d3-8b68-493c-ba49-2b1a20dee466}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000068\" kind=\"derived_unit\" guid=\"{28d22d9a-32ea-4bde-87f3-742bf44cd428}\" relid=\"0x1df\" childrelidcntr=\"0x2\">\r\n    <name>Radian per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Radian per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000a4\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{bdcd128b-2ff0-4ac0-8532-5d5a78d07883}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000a5\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{16cc46e0-a50c-45d8-9fca-0323dc0bef3e}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000069\" kind=\"derived_unit\" guid=\"{9f4e24d7-4512-4039-97e4-8027fee50bbe}\" relid=\"0x1de\" childrelidcntr=\"0x3\">\r\n    <name>Watt per Square Meter Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m^2-sr)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m^2-sr)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000a6\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{1352e2d5-a7e6-451c-bc9e-2c07082be325}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000a7\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{05cb959e-d78a-4e6f-8112-4be934f7f1c7}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000a8\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e68d723f-9acb-471f-ae26-eed11bc45418}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000006a\" kind=\"derived_unit\" guid=\"{e36fc918-e973-41c7-876a-d57226c454cc}\" relid=\"0x1dd\" childrelidcntr=\"0x1\">\r\n    <name>Stere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>st</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Stere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>st</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000a9\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{21b7e254-9642-43ca-8fe3-8986746f258b}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000006b\" kind=\"derived_unit\" guid=\"{431d8cce-6936-40d2-a8ef-21dfec94c6ef}\" relid=\"0x1dc\" childrelidcntr=\"0x3\">\r\n    <name>Watt per Square Meter Quartic Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W m^-2 K^-4</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Quartic Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W m^-2 K^-4</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000aa\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{1cf32fe5-0095-4abc-9135-205bee48ecdb}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ab\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{988ca415-af98-4a06-ab14-8f2ca61753c8}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ac\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2e121cb8-56d7-4d3f-bb2b-6d70c750c81b}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000006c\" kind=\"derived_unit\" guid=\"{260cf8c9-e791-4851-bf12-a9a8cb411096}\" relid=\"0x1db\" childrelidcntr=\"0x2\">\r\n    <name>Cubic Meter per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3 mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3 mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000ad\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7faa3dac-74fb-4245-bea5-0bb2e58048f4}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ae\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{eab14adb-f3b3-4fa7-8211-a2b54afb5cbf}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000006d\" kind=\"derived_unit\" guid=\"{548ebc0c-8be0-46ab-88c1-95717f3ad417}\" relid=\"0x1da\" childrelidcntr=\"0x2\">\r\n    <name>Cubic Meter per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000af\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{46f130aa-4675-4394-a2f5-e9b072fcbac5}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b0\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{299a5c05-fc92-4743-97e8-d61a39644274}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000006e\" kind=\"derived_unit\" guid=\"{1e0ad58c-32d7-48d9-8389-fa484997e484}\" relid=\"0x1d9\" childrelidcntr=\"0x4\">\r\n    <name>Joule Second per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J s mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule Second per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J s mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000b1\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7e59aabc-ab25-49ba-b718-ff0dad322299}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b2\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{cf52ad4f-1bfd-40eb-9ca0-9e7fe04674af}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b3\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{942914ef-00cd-4c37-add4-3f6e98f6dac8}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b4\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{1165ed62-7907-4ae9-8d93-ded61a1cd44a}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000006f\" kind=\"derived_unit\" guid=\"{7bf8af9f-f4f0-4ad5-9d8e-6071756a829b}\" relid=\"0x1d8\" childrelidcntr=\"0x2\">\r\n    <name>AreaTime</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000b5\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{058e9d1b-5a3f-48e9-960b-a4d7d5df59e9}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b6\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e21bf6f1-3186-474f-a363-c842ea562bb6}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000070\" kind=\"derived_unit\" guid=\"{1b602dbb-db1b-48e6-97e5-3e0ac2f0c3fc}\" relid=\"0x1d7\" childrelidcntr=\"0x4\">\r\n    <name>EnergyPerTemperature</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000b7\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{25402af6-6093-4fc1-972b-8e2f2bf87460}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b8\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{58f1d28a-31cc-48a3-a631-4b374bb0746a}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000b9\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ac85e6d6-0c23-470a-8f41-a4a18aa74044}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ba\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ae0c0cae-3f18-4fec-9bab-d4aad6e0a638}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000071\" kind=\"derived_unit\" guid=\"{fc8996f5-7dca-4b9f-b477-987a15776447}\" relid=\"0x1d6\" childrelidcntr=\"0x2\">\r\n    <name>Joule per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000bb\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f099637f-1ef1-4a0d-8fa7-4d0e91216883}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000bc\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c8e69763-5407-4954-a508-97a7fc5498aa}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000072\" kind=\"derived_unit\" guid=\"{9d41975f-9053-42b2-90f7-644ada98b148}\" relid=\"0x1d5\" childrelidcntr=\"0x2\">\r\n    <name>Katal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kat</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Katal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kat</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000bd\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{05fa4629-2625-442e-b531-016193900aef}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000be\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{67179750-44b1-4ae0-864b-6b429c059fc9}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000073\" kind=\"derived_unit\" guid=\"{01369bc9-8a80-4701-b009-ea875cb5c61e}\" relid=\"0x1d4\" childrelidcntr=\"0x2\">\r\n    <name>Square Meter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2 s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2 s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000bf\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b4fc0bc1-8e19-4a14-9d3a-a0a05a9b6140}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c0\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2a928d99-7d3d-4671-a761-0ff4d84309dc}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000074\" kind=\"derived_unit\" guid=\"{97b77c02-263e-432d-8ac7-cb5aac65b303}\" relid=\"0x1d3\" childrelidcntr=\"0x4\">\r\n    <name>Volt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>V</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>V</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000c1\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{780363df-67a0-4a0e-b5c3-a2693ecebf2a}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c2\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{cba03f13-8d62-43be-84c1-3f6dcc93baa9}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c3\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e69741f5-3699-452e-8073-b67402b867f3}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c4\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{efa2c22c-609f-487b-a954-2dd362badc16}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000075\" kind=\"derived_unit\" guid=\"{cef5ceab-c6c2-4e6a-b637-ee7d3728ab55}\" relid=\"0x1d2\" childrelidcntr=\"0x2\">\r\n    <name>Candela per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cd/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Candela per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cd/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000c5\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{54f806d5-1ee4-46fb-aeea-df711368ab72}\" relid=\"0x2\" referred=\"id-0066-000000b7\">\r\n        <name>Candela</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c6\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{85f59683-fcb9-46c3-9adf-e700e830640d}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000076\" kind=\"derived_unit\" guid=\"{c45848fa-5940-4dc0-9b4c-9dfb7b414e0a}\" relid=\"0x1d1\" childrelidcntr=\"0x4\">\r\n    <name>Kelvin per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000c7\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5cb931a2-2752-45c2-9e70-cd2df63dfc8e}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c8\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0ed92255-3300-45d3-b118-da5a1b7520bd}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000c9\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{744cfa62-4135-4187-aa5d-ee295eb39066}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ca\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{14ad09b9-71dc-40e6-9050-127d6ffbc31c}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000077\" kind=\"derived_unit\" guid=\"{0a468e7b-9028-4b37-927a-2d8df1cf420b}\" relid=\"0x1d0\" childrelidcntr=\"0x5\">\r\n    <name>Lumen per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lumen per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000cb\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2da475c2-7b54-4e39-8eb6-11830e7497c1}\" relid=\"0x5\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000cc\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f69577dd-d7a3-4bba-beea-d164c862adeb}\" relid=\"0x4\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000cd\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{042752c3-55af-4d8f-a01b-d4d687a8df3b}\" relid=\"0x3\" referred=\"id-0066-000000b7\">\r\n        <name>Candela</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ce\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e9f07894-d998-4824-8e9e-49183dbd1a62}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000cf\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3e33222c-8c15-435e-ae6e-efae3198b07d}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000078\" kind=\"derived_unit\" guid=\"{e8f2ce12-d982-4ce7-bdce-550c26ee8e56}\" relid=\"0x1cf\" childrelidcntr=\"0x3\">\r\n    <name>MassPerAreaTime</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000d0\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6185997a-5a4f-47d5-80e5-ef28487f7486}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d1\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8c1cafd8-3089-4a50-b7b0-d870a32dc3bf}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d2\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ccaf8307-c41a-4820-94be-4c95212185ba}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000079\" kind=\"derived_unit\" guid=\"{86ed3f93-7293-4661-b38b-ace2d04dc2f7}\" relid=\"0x1ce\" childrelidcntr=\"0x4\">\r\n    <name>Joule per Cubic Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/(m^3 K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Cubic Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(m^3 K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000d3\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b80de7df-0f02-458b-875c-1f367c91d0a4}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d4\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e2c4d387-da23-4509-b3cd-16d84b338e40}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d5\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{1f43bdda-7101-4f05-9081-ad7dcb2dde56}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d6\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e3dc107e-e2b6-458c-b71b-9c257c9dceea}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000007a\" kind=\"derived_unit\" guid=\"{41580337-7d2d-40c5-87cb-d4ab2d70da54}\" relid=\"0x1cd\" childrelidcntr=\"0x4\">\r\n    <name>Meter Kelvin per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K-m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter Kelvin per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K-m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000d7\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{cabff77c-5577-43ea-bcc4-9b68ee3545c1}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d8\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{896d9ba1-4357-4baf-8bf1-4e8f97f5e87f}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000d9\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{31f70a25-d40c-48af-90b3-e23801ea6422}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000da\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e53300cd-d191-4ac6-a3d8-4d1f14dd1a15}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000007b\" kind=\"derived_unit\" guid=\"{585153e7-cce6-41c4-b75e-2d43d0af0eb3}\" relid=\"0x1cc\" childrelidcntr=\"0x1\">\r\n    <name>Second Time Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Second Time Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000db\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a8c72886-1169-4c8e-bb8d-b1b8026bfc5b}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000007c\" kind=\"derived_unit\" guid=\"{c1c076b6-f555-4260-b850-2d2265b7d122}\" relid=\"0x1cb\" childrelidcntr=\"0x1\">\r\n    <name>Per Meter Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Meter Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000dc\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{eb4949b3-c930-4aff-b1bb-24639940416f}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000007d\" kind=\"derived_unit\" guid=\"{d65b095c-1248-4a3f-baef-86d3bddec103}\" relid=\"0x1ca\" childrelidcntr=\"0x3\">\r\n    <name>Pascal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Pa</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pa</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000dd\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c0ee445a-754d-4aa9-8a00-aa1c62ddc021}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000de\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0baf2a6d-3dfa-46ac-98dc-19d2b691b71d}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000df\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{fa933bb9-a04d-418c-91f4-b7d720dc9f2f}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000007e\" kind=\"derived_unit\" guid=\"{11752e15-4cc6-42a8-be50-6eb6b7af87e1}\" relid=\"0x1c9\" childrelidcntr=\"0x2\">\r\n    <name>Coulomb</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000e0\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{915cb8a3-5886-4a3e-bef7-c7242da4d74b}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000e1\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{4bd2a3cf-1046-4ef5-b8c8-d814bb98d1c2}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000007f\" kind=\"derived_unit\" guid=\"{592655f3-3980-4989-84d3-293842b5fdf6}\" relid=\"0x1c8\" childrelidcntr=\"0x4\">\r\n    <name>QuarticElectricDipoleMomentPerCubicEnergy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000e2\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{31ba8fbf-0f7a-4525-ba66-438a00347fd6}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>10</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000e3\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{038411bf-bdf9-4824-9496-1499f760d4f4}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000e4\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e7467f07-b7b7-4aee-828d-a94325050ccd}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000e5\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5b81464a-824a-4b0c-925b-540e90d2e8a9}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000080\" kind=\"derived_unit\" guid=\"{3bcfe884-b42d-443a-a300-b9868fbe67ed}\" relid=\"0x1c7\" childrelidcntr=\"0x3\">\r\n    <name>Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>T</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>T</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000e6\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9c2bf515-2366-4a5a-ba89-638b0e0f02af}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000e7\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f8adae0c-bb29-4ba4-9ba7-a76e31dd5f48}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000e8\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{fba22c49-8a4c-4d9d-92dd-bb2a2b3f7d2a}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000081\" kind=\"derived_unit\" guid=\"{fbb14004-6fb0-486b-b781-202432a5ee03}\" relid=\"0x1c6\" childrelidcntr=\"0x2\">\r\n    <name>Square Meter Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2-sr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2-sr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000e9\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8bf62a85-f278-4b39-880e-384797fab736}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ea\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b37b1d58-5dcf-4fdf-9321-683c32c2274d}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000082\" kind=\"derived_unit\" guid=\"{31823b51-212f-435b-a3f7-72aadeda541f}\" relid=\"0x1c5\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000eb\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{95d44952-819f-40f8-92c8-f8fc4567f5db}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ec\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{dc9b70e9-de05-469c-b141-e21f070198c4}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ed\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{88f3c483-dd85-4a8a-ad29-e59d2dc77ba0}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000083\" kind=\"derived_unit\" guid=\"{c652365f-6ad0-446d-837e-532f674ac86b}\" relid=\"0x1c4\" childrelidcntr=\"0x2\">\r\n    <name>Meter Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m-kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m-kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000ee\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a928e611-900c-41ab-87f4-7746136a28c9}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000ef\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{86fc46fc-27b6-4cf7-8bfd-ef67a68aa2aa}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000084\" kind=\"derived_unit\" guid=\"{2fe89bd5-cef1-4a00-bbb9-993b8775afc5}\" relid=\"0x1c3\" childrelidcntr=\"0x4\">\r\n    <name>Joule per Square Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J T^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Square Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J T^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000f0\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{79dcb34c-7851-485a-b751-084b39a6472b}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f1\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{97a04797-bb62-486e-bf11-d5a0ce0cb6ed}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f2\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{11bb4ce0-964c-4f1a-8b94-01a50028b066}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f3\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6cf566d6-338b-4e56-b67d-4dd4bd436320}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000085\" kind=\"derived_unit\" guid=\"{32f2750f-56a7-475d-986f-e75ed5586e12}\" relid=\"0x1c2\" childrelidcntr=\"0x4\">\r\n    <name>Ampere per Joule</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A/J</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Joule</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A J^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000f4\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d7a05ba1-5205-4bec-b841-68e2c257ace9}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f5\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7f7e809b-448d-450c-8428-71c4a291247b}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f6\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{909ba0fe-b63d-4a6f-8af3-46c920f614ea}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f7\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{20dc650d-6fa2-4980-8fcc-711a674b9707}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000086\" kind=\"derived_unit\" guid=\"{7f6cc8ce-c47a-4145-8f61-dcf29bb7d1bf}\" relid=\"0x1c1\" childrelidcntr=\"0x2\">\r\n    <name>Per Meter Kelvin Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^-1 K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Meter Kelvin Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-1 K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000f8\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{20901596-3c6b-421b-accb-8725797e6fef}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000f9\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6c645696-0421-44b0-a727-1d7df1166fe9}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000087\" kind=\"derived_unit\" guid=\"{d0e3372c-a99a-4be8-baf4-2deb577040b8}\" relid=\"0x1c0\" childrelidcntr=\"0x2\">\r\n    <name>LengthPerUnitElectricCurrent</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000fa\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5345e415-2cc0-45be-a3a5-a1603483d113}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000fb\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f5597f37-2cbb-46a7-b183-5554c8d41782}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000088\" kind=\"derived_unit\" guid=\"{481a9ee4-cfa2-4092-bbb2-5b4ccb34cb9e}\" relid=\"0x1bf\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000fc\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7c478eb0-465a-4259-8c04-407c0642d21f}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000fd\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0b68c3f6-94b8-4326-8c4a-0badd7aa7b0e}\" relid=\"0x2\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-000000fe\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7073317b-8723-419c-93f3-2790020fddfa}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000089\" kind=\"derived_unit\" guid=\"{78e9721f-0ee2-42fa-a468-c5cda171c367}\" relid=\"0x1be\" childrelidcntr=\"0x4\">\r\n    <name>Volt per second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>V / sec</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt per second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>V / sec</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000000ff\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2fc9d4fb-6bfd-4df8-954f-f8ee7be7d90b}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000100\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{02da1041-7e9f-4e6b-9d4a-61d0306ee228}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000101\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0bcd9a68-1be3-4de8-869d-544f6ce7e329}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000102\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{65223687-a2b9-4618-98f8-aa7cc95a5201}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000008a\" kind=\"derived_unit\" guid=\"{b0fb6a5b-1300-4969-8c00-3dcc96046c30}\" relid=\"0x1bd\" childrelidcntr=\"0x3\">\r\n    <name>Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000103\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{465caaf2-e1d4-4a9a-9215-227aa0ecbfcc}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000104\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{350d7c91-c65a-4ac9-a6e5-80ce3ec4c321}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000105\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7af18932-1cfe-40bd-8fcf-2a875c506baa}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000008b\" kind=\"derived_unit\" guid=\"{796ee0b6-4c7c-4b25-8215-a554f4e8c182}\" relid=\"0x1bc\" childrelidcntr=\"0x2\">\r\n    <name>Meter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000106\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9f77ba24-0fbe-4c71-8fe7-835309bc30fb}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000107\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{1d9ef27b-f8c3-4cab-b3b9-c37c90a360b6}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000008c\" kind=\"derived_unit\" guid=\"{9cdb2914-2388-408d-a0b8-f0b84f7608c7}\" relid=\"0x1bb\" childrelidcntr=\"0x4\">\r\n    <name>Volt Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m V</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m V</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000108\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8ac786ba-096d-425e-b7a2-ed3339be9ce2}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000109\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{093d0dde-21a6-49c0-9ca1-ea520bfb49b9}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000010a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{826808dd-791f-4fc0-9791-6bc0f02bd59b}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000010b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{232624f2-cc15-4ed5-9867-7f41cd9f8009}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000008d\" kind=\"derived_unit\" guid=\"{abeff0ed-a88e-44e0-b8d2-9cdbe99cb69e}\" relid=\"0x1ba\" childrelidcntr=\"0x2\">\r\n    <name>Ampere per Radian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Radian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A/rad</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000010c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{572124fc-d6a5-4a84-8ead-41cc7d8026d3}\" relid=\"0x2\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000010d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{bcfbd677-00c1-4f80-a405-e4798a019aab}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000008e\" kind=\"derived_unit\" guid=\"{43007cf4-4475-4008-ab7a-63679ee9a62f}\" relid=\"0x1b9\" childrelidcntr=\"0x2\">\r\n    <name>Square Meter per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000010e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ad07f197-1eb0-407c-b5c6-077251fb45c5}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000010f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{32a02e70-822f-489c-be78-786d558d80c4}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000008f\" kind=\"derived_unit\" guid=\"{7e9f20d3-fadd-4f76-843a-688b504efe15}\" relid=\"0x1b8\" childrelidcntr=\"0x4\">\r\n    <name>Hertz per Volt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz V^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz per Volt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz V^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000110\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a50bc2b9-d293-45f0-aee5-00592073215d}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000111\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b3f45cc1-e3f5-44a0-aea5-bc04137b59a7}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000112\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c3f3f2b1-91ba-4547-9859-64d11a56b5f0}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000113\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f0391478-6d49-48c0-b1a0-d72a82f24fca}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000090\" kind=\"derived_unit\" guid=\"{9ab92e04-d1c8-419f-bfb7-4423601b51dc}\" relid=\"0x1b7\" childrelidcntr=\"0x4\">\r\n    <name>Weber</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Wb</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Weber</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Wb</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000114\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{62b4bf94-0484-487e-a8c3-85345cd35612}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000115\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{71abedf0-d642-4d25-a747-ebb73ddd213d}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000116\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8f4e55f2-14a5-4823-9263-3ec47d7e8ccd}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000117\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b431c714-c2c4-4b3e-b12c-01ebcb4083bf}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000091\" kind=\"derived_unit\" guid=\"{2c70c000-1ea9-4ab2-b263-621fc1b8b725}\" relid=\"0x1b6\" childrelidcntr=\"0x4\">\r\n    <name>Watt per Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m*K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m*K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000118\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f4c802d6-178c-4bc2-aa0b-f63e56a2e6e5}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000119\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ae924a0d-3265-4b98-a2f0-a937151ccea4}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000011a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9115cb6d-4458-449a-8418-6c61fc1df424}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000011b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3a261465-17f8-4552-8a93-3d0a19000271}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000092\" kind=\"derived_unit\" guid=\"{6b346f15-873c-4701-8cac-62af5dc01640}\" relid=\"0x1b5\" childrelidcntr=\"0x3\">\r\n    <name>InverseSquareEnergy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000011c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{fa50b99a-e87b-4ad1-bf31-d9171338e820}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000011d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{328465a4-b5c8-403b-89ac-5e4e86ea0e20}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000011e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d1d2a251-d0ae-4cc7-bfd2-abee5a8e97f9}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-4</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000093\" kind=\"derived_unit\" guid=\"{7c935675-b904-4807-a9e2-cef7c40e0658}\" relid=\"0x1b4\" childrelidcntr=\"0x4\">\r\n    <name>Cubic Coulomb Meter per Square Joule</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C^3 m^3 J^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Coulomb Meter per Square Joule</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C^3 m^3 J^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000011f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0e69e7e8-eb13-4795-8f7a-53bd697a0d98}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>7</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000120\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d8dfc7e3-8900-4a0c-8786-fa723018be49}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000121\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{33e43b18-c9e7-43ed-b852-773d8498e9a3}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000122\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{588123fa-6e12-41f1-8e30-701d19620e67}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000094\" kind=\"derived_unit\" guid=\"{6b82c647-5ff0-4299-a8b1-0acf9c649884}\" relid=\"0x1b3\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000123\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{53f09a62-e4f4-4970-b4b4-b6a4dd11c478}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000124\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a44c686c-608e-4c24-af87-f8ba732108a9}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000125\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{31789970-b636-45cb-8ab1-9fdde45b8c5a}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000095\" kind=\"derived_unit\" guid=\"{a4799dcf-5344-4a13-9b29-5b31f98bbf6d}\" relid=\"0x1b2\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000126\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a6bb3611-7300-4191-8659-c64934db84cf}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000127\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8d21e72c-fa61-4759-be22-b3c8044fedaa}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000128\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2754d0e1-9c9f-4c2b-8b63-f012e8e1148d}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000096\" kind=\"derived_unit\" guid=\"{81bae1df-0586-4601-b58e-972009802996}\" relid=\"0x1b1\" childrelidcntr=\"0x2\">\r\n    <name>Joule per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000129\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ce6a9be7-dc98-4712-abda-399272ca78b8}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000012a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7e06fb7d-2cde-4196-be33-65c89502184f}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000097\" kind=\"derived_unit\" guid=\"{77ce9fbb-b875-4247-a80e-b98bf1929f69}\" relid=\"0x1b0\" childrelidcntr=\"0x4\">\r\n    <name>Ohm</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Ohm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ohm</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ohm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000012b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{71dfef4b-f966-4c1c-8bee-7f0e3ba781d7}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000012c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{522f0e18-000e-4c10-b52f-8583bef1e298}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000012d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{15f0ee1f-c539-402e-af64-3e3aec444650}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000012e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{49341079-2276-44a1-880f-432bc5c2f1f5}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000098\" kind=\"derived_unit\" guid=\"{271c3b06-a120-4b90-8df4-17806cacb508}\" relid=\"0x1af\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg-K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000012f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{957fda04-842d-47ef-a879-ded092390634}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000130\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9df4c7a2-1771-4a20-9517-5c86747b8898}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000099\" kind=\"derived_unit\" guid=\"{c21844b7-c797-427e-8e65-15a3e7f03e79}\" relid=\"0x1ae\" childrelidcntr=\"0x2\">\r\n    <name>Kelvin per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K / s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K / s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000131\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0dbdb56e-1ee3-41ef-bf1a-ea4731eaf237}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000132\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8e3e33ab-597e-45da-8c2c-21b26ea9d343}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000009a\" kind=\"derived_unit\" guid=\"{601fef31-7156-43ac-b901-f7913c82d0a9}\" relid=\"0x1ad\" childrelidcntr=\"0x4\">\r\n    <name>Siemens</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>S</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Siemens</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>S</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000133\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{c0efe101-9fe9-4a7f-94ff-c232d543d276}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000134\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ee917bfa-63b2-43c0-9f56-6cbe80297cd8}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000135\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e57257de-afb7-4b8f-99a6-9068321620df}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000136\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ea38352f-2450-4d2e-b5a3-5c1ad932179a}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000009b\" kind=\"derived_unit\" guid=\"{4e8cae02-6fd9-414d-b2b5-913f94e2cc1c}\" relid=\"0x1ac\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000137\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{33e65bf4-2c8e-4fbe-80aa-725aa55bea58}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000138\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{62b99a4a-2416-4a4d-940c-1a374879545c}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000009c\" kind=\"derived_unit\" guid=\"{b814b8b6-1742-4ff9-8c46-b88774b1f6f7}\" relid=\"0x1ab\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000139\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{8ba18508-2145-4bae-905f-f6c2f2f227ca}\" relid=\"0x2\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000013a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{f8b8de9d-bf34-4fa6-8ff3-f9705b8b49d2}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000009d\" kind=\"derived_unit\" guid=\"{350b8535-9086-46ea-b6e7-53697b8394ac}\" relid=\"0x1aa\" childrelidcntr=\"0x3\">\r\n    <name>Tesla Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s T</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tesla Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s T</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000013b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0a9cc96c-c832-4af1-9bf0-63bc4da650aa}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000013c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e6daff91-18ed-47ca-bc81-59932540fbe4}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000013d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e38e8e0b-1f3c-4208-a526-426d600fd153}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000009e\" kind=\"derived_unit\" guid=\"{3616832c-c57a-4a8d-93a2-68f7f11c7e23}\" relid=\"0x1a9\" childrelidcntr=\"0x3\">\r\n    <name>Coulomb per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000013e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a2a7b73f-8d6e-42b8-a4c8-54d3bfecdbe0}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000013f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5f9b4b4e-0aa5-47d9-92b2-87c270e626da}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000140\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{03665f87-3376-4d8f-aa87-c2c7a9cf88ae}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000009f\" kind=\"derived_unit\" guid=\"{fbc113ec-7f22-450a-b8b8-b467d3de05a9}\" relid=\"0x1a8\" childrelidcntr=\"0x3\">\r\n    <name>Lux</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lx</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lux</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lx</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000141\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9275a6f2-9050-43f4-9be3-0231ebd6f923}\" relid=\"0x3\" referred=\"id-0066-000000b7\">\r\n        <name>Candela</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000142\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{26e9795d-bedf-485b-91a0-61a35e691b9d}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000143\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ee490cf3-65d3-49ff-b63c-0a1c7f65a1d5}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a0\" kind=\"derived_unit\" guid=\"{5d706ea3-d249-4054-980d-95a553782804}\" relid=\"0x1a7\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000144\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{78f223b5-6d27-45f3-841e-45f95a68bdf2}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000145\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{b6b67ab9-3cc1-4217-8d5b-209f18c71f4b}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a1\" kind=\"derived_unit\" guid=\"{1c79a464-b1a5-402b-8e95-0bdc5699a951}\" relid=\"0x1a6\" childrelidcntr=\"0x2\">\r\n    <name>Meter per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000146\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ce8e2f66-c12f-4527-94c6-d1358c51ed37}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000147\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{65e0edc6-e998-45f6-acae-3a1c2c69047f}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a2\" kind=\"derived_unit\" guid=\"{c0f9a4bd-295d-4e8d-be84-f0eb10914b86}\" relid=\"0x1a5\" childrelidcntr=\"0x4\">\r\n    <name>Farad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>F</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Farad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>F</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000148\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5d5d434e-5162-4fc3-8029-d7678f707974}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000149\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{44148595-a49c-47ea-94e3-edb01e9617dc}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000014a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{dacd77cf-6f34-4ff5-97ce-e682de78ad3d}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000014b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{3f28a709-162d-43f5-a0bb-c509ea673f76}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a3\" kind=\"derived_unit\" guid=\"{83fbaf99-87cc-4835-8b42-97530055bdb7}\" relid=\"0x1a4\" childrelidcntr=\"0x3\">\r\n    <name>Joule per Kilogram Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/(kg-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(kg-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000014c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{12e75d6d-773f-4161-a80a-ad15313838b4}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000014d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0887cfeb-afb8-4a33-a321-d94a12ac7901}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000014e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{676355b6-6980-4cf1-9db6-776db272c0ef}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a4\" kind=\"derived_unit\" guid=\"{c25ad369-627c-4cec-9205-0b7c75be0400}\" relid=\"0x1a3\" childrelidcntr=\"0x2\">\r\n    <name>Ampere Turn</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>At</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere Turn</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>At</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000014f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{53cd346c-60d2-4757-8584-bbfb2b5f2749}\" relid=\"0x2\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000150\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{54a59e85-6e17-49e2-bcab-cd4393ef2fa4}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a5\" kind=\"derived_unit\" guid=\"{8ab2a7fb-aeb4-49e7-8547-ff1536a9a99a}\" relid=\"0x1a2\" childrelidcntr=\"0x4\">\r\n    <name>Joule Meter per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J m mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule Meter per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J m mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000151\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{575dc94e-cb83-445b-8f33-ebe60587c586}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000152\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ea45360e-0a4e-4e65-b127-a14a755afa20}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000153\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2558f721-96a9-491e-9620-ccd9c72236f1}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000154\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{79d7d8b9-d2c8-401c-8951-6da431579558}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a6\" kind=\"derived_unit\" guid=\"{380f6a7d-e2bb-4600-8cfd-dd5f64a2bd57}\" relid=\"0x1a1\" childrelidcntr=\"0x4\">\r\n    <name>Watt Square Meter per Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W m^2 sr^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt Square Meter per Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W m^2 sr^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000155\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{39e2bf0b-5246-4c1a-97ac-097ae6d86ff1}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000156\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{bbea615d-2520-438e-ac60-b5a886bda02f}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000157\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{926e26b2-af2c-4978-bde7-6f8e55043da4}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000158\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6e0f0677-e4db-4454-90de-5173ffdb6f64}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a7\" kind=\"derived_unit\" guid=\"{378b8885-ea88-4fed-8b44-1f83ea92c38d}\" relid=\"0x1a0\" childrelidcntr=\"0x2\">\r\n    <name>Kilogram per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000159\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{ec0fc608-bdeb-4831-8209-20029d5e5faf}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000015a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{775f718a-8cf1-477b-bcbe-20a6a43e1b16}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a8\" kind=\"derived_unit\" guid=\"{440a02eb-bbec-44e9-b1de-f30ad7207b91}\" relid=\"0x19f\" childrelidcntr=\"0x2\">\r\n    <name>Mole Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol-K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol-K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000015b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{09e8307c-fbe8-418a-927d-45e371f6dadc}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000015c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{84a32e92-3e4e-4988-ad1d-82af784e23c5}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000a9\" kind=\"derived_unit\" guid=\"{e847545d-47be-4e21-9b92-a36d475b7e5b}\" relid=\"0x19e\" childrelidcntr=\"0x3\">\r\n    <name>Joule per Kilogram Kelvin per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram Kelvin per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(kg-K-m^3)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000015d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{868a6165-b6be-4411-becd-cc8591dfc94c}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000015e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{0bd001f3-55fb-4c82-929b-694b18cddefa}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000015f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e5960796-f492-4ae6-8b70-e32018b88455}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000aa\" kind=\"derived_unit\" guid=\"{e33acdd3-3de5-4c3e-afb1-31ac06a394e2}\" relid=\"0x19d\" childrelidcntr=\"0x4\">\r\n    <name>Joule per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/mol</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/mol</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000160\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{88650602-6a2d-4175-876d-6c6cc312dd45}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000161\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9e7e157d-55b8-4b92-b78b-563c683ce9fb}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000162\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e3b57e22-1f80-4b3e-8e6c-04fb73b08de2}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000163\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{5b61da7d-15c6-4cd5-824c-695cde23d310}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ab\" kind=\"derived_unit\" guid=\"{8c77876e-b671-4b2b-8140-08aecaa1cb22}\" relid=\"0x19c\" childrelidcntr=\"0x2\">\r\n    <name>Lumen</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lumen</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000164\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{9eae79ea-0aa2-4d18-bfd4-399009d91537}\" relid=\"0x2\" referred=\"id-0066-000000b7\">\r\n        <name>Candela</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000165\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{69a50743-343d-4172-a7ef-d84f727cde35}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ac\" kind=\"derived_unit\" guid=\"{246a6cb3-acd2-467f-b482-fd7949b74227}\" relid=\"0x19b\" childrelidcntr=\"0x2\">\r\n    <name>Square Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2-K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2-K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000166\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a7e37af0-3194-44eb-85c5-d371942075e1}\" relid=\"0x2\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000167\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7e39fb74-bf36-443f-a5e1-417da284063c}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ad\" kind=\"derived_unit\" guid=\"{bca4939f-60f9-4175-960e-1652e74a2d55}\" relid=\"0x19a\" childrelidcntr=\"0x4\">\r\n    <name>Henry</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>H</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Henry</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>H</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000168\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{961ae589-91bc-4b32-a904-d400a3fae699}\" relid=\"0x4\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000169\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{53b15b18-8d4b-4b48-a2c2-cde35217afe1}\" relid=\"0x3\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000016a\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{6dd4c7b7-a666-4d05-9e90-58983600bb38}\" relid=\"0x2\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000016b\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{7ba167c2-8eb4-4a62-8a1a-757631451551}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-2</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ae\" kind=\"derived_unit\" guid=\"{6054e086-68f3-4bd6-9042-31b0fff4fede}\" relid=\"0x199\" childrelidcntr=\"0x3\">\r\n    <name>SquareEnergy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000016c\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{826edd6c-291d-4b5c-a292-2cb2bfcbc697}\" relid=\"0x3\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-4</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000016d\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{fd13b856-e93e-48aa-9c3c-6f9ef9419b4f}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>2</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-0000016e\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{fb38adb1-5d8e-4e5b-8596-d59c73cb7fd0}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>4</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000af\" kind=\"derived_unit\" guid=\"{33a4a87a-8681-4e16-9114-8bf69a2728a2}\" relid=\"0x198\" childrelidcntr=\"0x3\">\r\n    <name>Joule per Kilogram Kelvin per Pascal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram Kelvin per Pascal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(km-K-Pa)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000016f\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{2c000ee8-a0e3-4955-bad7-e237d09061c9}\" relid=\"0x3\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000170\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{d27033a6-5899-4756-a45d-1a3e8bf6af40}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000171\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{e814ede4-475b-4209-9ddc-20cd491882ef}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>3</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b0\" kind=\"derived_unit\" guid=\"{a79ee075-f8d3-4cc8-9609-3f40ab40f955}\" relid=\"0x197\" childrelidcntr=\"0x2\">\r\n    <name>Mole per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000172\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{a3b90627-86bf-47a4-a5b5-e77858344e28}\" relid=\"0x2\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>-1</value>\r\n        </attribute>\r\n    </reference>\r\n    <reference id=\"id-0067-00000173\" kind=\"derived_unit_element\" role=\"derived_unit_element\" guid=\"{69d46659-dfe5-4f30-ae1e-9aa897cbf998}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"exponent\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b1\" kind=\"conversion_based_unit\" guid=\"{c29a7bc3-7359-4b8b-90a4-a71fd6227e44}\" relid=\"0x196\" childrelidcntr=\"0x1\">\r\n    <name>Farad per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>F/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Farad per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>F m^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000174\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{869392ed-9f03-4a57-931b-37c4886db37d}\" relid=\"0x1\" referred=\"id-0065-0000003f\">\r\n        <name>Farad per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b2\" kind=\"conversion_based_unit\" guid=\"{185f6d8e-515b-467e-89ba-31582867a95b}\" relid=\"0x195\" childrelidcntr=\"0x1\">\r\n    <name>Relative Permittivity</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Relative Permittivity</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ÃŽÂµr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000175\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6675f7ee-d245-43f0-8a67-3c7d0f20bfcf}\" relid=\"0x1\" referred=\"id-0065-0000003f\">\r\n        <name>Farad per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>8.8541878170000005e-012</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b3\" kind=\"conversion_based_unit\" guid=\"{dc34017b-739f-4599-8772-c886263bff67}\" relid=\"0x194\" childrelidcntr=\"0x1\">\r\n    <name>Abfarad per Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abfarad per Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abF/cm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000176\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{23af8332-4606-485f-a24e-8f4e81027fe8}\" relid=\"0x1\" referred=\"id-0065-0000003f\">\r\n        <name>Farad per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>100000000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b4\" kind=\"conversion_based_unit\" guid=\"{5367ef07-1737-4e5b-9f01-2b7d35c12510}\" relid=\"0x193\" childrelidcntr=\"0x1\">\r\n    <name>Square Coulomb Meter per Joule</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C^2 m^2 J^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Coulomb Meter per Joule</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C^2 m^2 J^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000177\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6e370bf4-f407-49bd-b31e-a703c3cc7880}\" relid=\"0x1\" referred=\"id-0065-00000040\">\r\n        <name>Square Coulomb Meter per Joule</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b5\" kind=\"conversion_based_unit\" guid=\"{a580533f-4236-4c95-af87-b3b3e54972ba}\" relid=\"0x192\" childrelidcntr=\"0x1\">\r\n    <name>Gray per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Gy/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gray per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Gy/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000178\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a0ad25cb-92f6-4237-8ba0-6bf47e64e809}\" relid=\"0x1\" referred=\"id-0065-00000041\">\r\n        <name>Gray per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b6\" kind=\"conversion_based_unit\" guid=\"{791df7d0-d94c-4200-8864-947167268a4e}\" relid=\"0x191\" childrelidcntr=\"0x1\">\r\n    <name>Pascal per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>P / hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>P / hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000179\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b1b80dd6-7c77-49b7-b8bb-9d119fab2ac1}\" relid=\"0x1\" referred=\"id-0065-00000042\">\r\n        <name>Pascal per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00027777777799999997</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b7\" kind=\"conversion_based_unit\" guid=\"{150579cf-5f2f-42d1-9f3f-42e582c11063}\" relid=\"0x190\" childrelidcntr=\"0x1\">\r\n    <name>Pascal per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>P / min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000017a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{20e7f300-a601-4131-8c37-a96aef037233}\" relid=\"0x1\" referred=\"id-0065-00000042\">\r\n        <name>Pascal per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.016666666699999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b8\" kind=\"conversion_based_unit\" guid=\"{2f9095ab-703b-4d8f-b251-540ce62ef65b}\" relid=\"0x18f\" childrelidcntr=\"0x1\">\r\n    <name>Pascal per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>P / s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>P / s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000017b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{de4dec82-471b-4bdc-ba7f-f5f5d0d5f435}\" relid=\"0x1\" referred=\"id-0065-00000042\">\r\n        <name>Pascal per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000b9\" kind=\"conversion_based_unit\" guid=\"{8c1e02b7-88ce-47a1-96a0-26ee3146e6a3}\" relid=\"0x18e\" childrelidcntr=\"0x1\">\r\n    <name>Pound Force per Square Inch Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbf / in^2-s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Force per Square Inch Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbf / in^2-s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000017c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0831fe80-b91f-4478-ae14-c439e4c73bcf}\" relid=\"0x1\" referred=\"id-0065-00000042\">\r\n        <name>Pascal per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6894.7578899999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ba\" kind=\"conversion_based_unit\" guid=\"{64ad62dc-e009-4f11-913f-d3fee7ba0bff}\" relid=\"0x18d\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram Meter Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Meter Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg-m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000017d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{76c7f765-8ca1-4880-95a7-43aae175e9ec}\" relid=\"0x1\" referred=\"id-0065-00000043\">\r\n        <name>Kilogram Meter Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000bb\" kind=\"conversion_based_unit\" guid=\"{cdfccd0e-a2cb-47bd-a103-871c7d5a38dc}\" relid=\"0x18c\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Kilogram Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3 kg^-1 s^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Kilogram Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3 kg^-1 s^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000017e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{603214bb-f84a-4d5b-a666-2db472e0c9c3}\" relid=\"0x1\" referred=\"id-0065-00000044\">\r\n        <name>Cubic Meter per Kilogram Second Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000bc\" kind=\"conversion_based_unit\" guid=\"{7056832a-e662-4fa3-87f9-65cc21fd2734}\" relid=\"0x18b\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m^-3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000017f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b206a4d2-701a-4e83-8ed1-cd18f3e952cd}\" relid=\"0x1\" referred=\"id-0065-00000045\">\r\n        <name>Coulomb per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000bd\" kind=\"conversion_based_unit\" guid=\"{dfc4bb9c-92b8-45a4-b9cd-cc3d4af677e9}\" relid=\"0x18a\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000180\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{00f6a260-caad-4d1a-9862-54d0dd2d7b4a}\" relid=\"0x1\" referred=\"id-0065-00000046\">\r\n        <name>Cubic Meter per Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000be\" kind=\"conversion_based_unit\" guid=\"{5c3c0bb3-f5e8-4a46-b9c3-4b279698b1d9}\" relid=\"0x189\" childrelidcntr=\"0x1\">\r\n    <name>Meter per Farad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Farad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m/F</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000181\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{592d0fb8-e6c4-43f6-8b42-bbfbc967020c}\" relid=\"0x1\" referred=\"id-0065-00000047\">\r\n        <name>Meter per Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000bf\" kind=\"conversion_based_unit\" guid=\"{6717ff07-7afd-465f-b13c-d9a2db998031}\" relid=\"0x188\" childrelidcntr=\"0x1\">\r\n    <name>Tesla Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m T</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tesla Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m T</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000182\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{405b6081-3da2-43ca-ac6d-ebd185e8de79}\" relid=\"0x1\" referred=\"id-0065-00000048\">\r\n        <name>Tesla Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c0\" kind=\"conversion_based_unit\" guid=\"{29ec62a4-36a4-4de8-92b5-2fce6138bc43}\" relid=\"0x187\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram Meter Per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-m/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Meter Per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg m s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000183\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{77b0fe5b-93e4-4197-9604-6bcd4b0f5da4}\" relid=\"0x1\" referred=\"id-0065-00000049\">\r\n        <name>Kilogram Meter Per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c1\" kind=\"conversion_based_unit\" guid=\"{2429929d-6139-4203-9861-d8d4d545679f}\" relid=\"0x186\" childrelidcntr=\"0x1\">\r\n    <name>Planck Momentum</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Momentum</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000184\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5ac137fc-b554-4a42-b5f0-340e6cf68456}\" relid=\"0x1\" referred=\"id-0065-00000049\">\r\n        <name>Kilogram Meter Per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.5248499999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c2\" kind=\"conversion_based_unit\" guid=\"{14d6baa4-9c35-428f-9162-1bf88141484e}\" relid=\"0x185\" childrelidcntr=\"0x1\">\r\n    <name>Per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000185\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7f6aee56-2148-4429-80de-8b9db1d580c0}\" relid=\"0x1\" referred=\"id-0065-0000004a\">\r\n        <name>Per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c3\" kind=\"conversion_based_unit\" guid=\"{081e7f8c-fbfe-476f-a2c9-a8dd6ce1e136}\" relid=\"0x184\" childrelidcntr=\"0x1\">\r\n    <name>Kelvin per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K/W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K/W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000186\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{06e28d36-f4c3-4ab7-bf4f-4ae5561b1a48}\" relid=\"0x1\" referred=\"id-0065-0000004b\">\r\n        <name>Kelvin per Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c4\" kind=\"conversion_based_unit\" guid=\"{a79216d7-ae12-449c-8ee8-122d7181058d}\" relid=\"0x183\" childrelidcntr=\"0x1\">\r\n    <name>Mega Electron Volt Femtometer</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>MeV fm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mega Electron Volt Femtometer</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>MeV fm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000187\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{76d83742-9fe6-4696-ae51-cf3c4cf6b53f}\" relid=\"0x1\" referred=\"id-0065-0000004c\">\r\n        <name>LengthEnergy</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.60217653e-028</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c5\" kind=\"conversion_based_unit\" guid=\"{96f04ea6-daf6-41ad-b0ec-0d4c4e61f3ba}\" relid=\"0x182\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C kg^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000188\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{55e5ccc5-4021-4a3d-8591-8aa48c537278}\" relid=\"0x1\" referred=\"id-0065-0000004d\">\r\n        <name>Coulomb per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c6\" kind=\"conversion_based_unit\" guid=\"{2610f5c9-b9b2-4f69-b42e-88910d91027d}\" relid=\"0x181\" childrelidcntr=\"0x1\">\r\n    <name>Hertz per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000189\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{12343cfc-4f13-440c-869a-68ee6a080d9b}\" relid=\"0x1\" referred=\"id-0065-0000004d\">\r\n        <name>Coulomb per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c7\" kind=\"conversion_based_unit\" guid=\"{66afb529-7709-4394-befb-4176656a4c25}\" relid=\"0x180\" childrelidcntr=\"0x1\">\r\n    <name>Mega Hertz per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>MHz T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mega Hertz per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>MHz T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000018a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ec01ddf9-1c45-4a58-9af0-8f5e65f2282b}\" relid=\"0x1\" referred=\"id-0065-0000004d\">\r\n        <name>Coulomb per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c8\" kind=\"conversion_based_unit\" guid=\"{cb87bc8f-7f59-4e73-b592-605e6dd0bf2c}\" relid=\"0x17f\" childrelidcntr=\"0x1\">\r\n    <name>Per Tesla Second Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s^-1 T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Tesla Second Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s^-1 T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000018b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0e0b33c6-a49a-4407-b634-4dd49db355c6}\" relid=\"0x1\" referred=\"id-0065-0000004d\">\r\n        <name>Coulomb per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000c9\" kind=\"conversion_based_unit\" guid=\"{11083491-5971-4246-85d8-104e8c756025}\" relid=\"0x17e\" childrelidcntr=\"0x1\">\r\n    <name>Kilohertz</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>KHz</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilohertz</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>KHz</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000018c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{397f1ff2-6f43-4f81-b60f-c0e20c539a24}\" relid=\"0x1\" referred=\"id-0065-0000004e\">\r\n        <name>Hertz</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ca\" kind=\"conversion_based_unit\" guid=\"{590a80d3-b2a3-4e0f-8b85-71d2a74370f7}\" relid=\"0x17d\" childrelidcntr=\"0x1\">\r\n    <name>Megahertz</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>MHz</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Megahertz</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>MHz</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000018d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{89e0ed57-da68-4f01-8123-dd25a3d12328}\" relid=\"0x1\" referred=\"id-0065-0000004e\">\r\n        <name>Hertz</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000cb\" kind=\"conversion_based_unit\" guid=\"{ae0ac975-ed79-49bf-9f75-c19574d24508}\" relid=\"0x17c\" childrelidcntr=\"0x1\">\r\n    <name>Hertz</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000018e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{618cfad8-d49c-4117-b2df-694de2461c64}\" relid=\"0x1\" referred=\"id-0065-0000004e\">\r\n        <name>Hertz</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000cc\" kind=\"conversion_based_unit\" guid=\"{fb3db7e3-044b-46ef-8ef5-b89dcbe86932}\" relid=\"0x17b\" childrelidcntr=\"0x1\">\r\n    <name>Gigahertz</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>GHz</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gigahertz</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>GHz</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000018f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8ec2c353-2adc-42ff-b43f-8ba8897fe32f}\" relid=\"0x1\" referred=\"id-0065-0000004e\">\r\n        <name>Hertz</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000cd\" kind=\"conversion_based_unit\" guid=\"{ba72c6ff-87d8-4c38-907b-06bcdb39b21c}\" relid=\"0x17a\" childrelidcntr=\"0x1\">\r\n    <name>Planck Frequency</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Frequency</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000190\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{67aadee3-cc43-4d2f-94ac-042692d7ec3b}\" relid=\"0x1\" referred=\"id-0065-0000004e\">\r\n        <name>Hertz</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.8548700000000001e+043</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ce\" kind=\"conversion_based_unit\" guid=\"{48961218-4eae-44ca-84a6-a0c1559e433e}\" relid=\"0x179\" childrelidcntr=\"0x1\">\r\n    <name>Inverse Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Inverse Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000191\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9ae9f4a0-39cd-462b-bdf8-012a870e8549}\" relid=\"0x1\" referred=\"id-0065-0000004e\">\r\n        <name>Hertz</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000cf\" kind=\"conversion_based_unit\" guid=\"{6f1d7e35-0bba-4c73-bb99-059afc4faa14}\" relid=\"0x178\" childrelidcntr=\"0x1\">\r\n    <name>Mole per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000192\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5b9c24ab-a8b0-4939-b696-7d3474dc3cef}\" relid=\"0x1\" referred=\"id-0065-0000004f\">\r\n        <name>Mole per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d0\" kind=\"conversion_based_unit\" guid=\"{68a8a8e3-2b74-4c22-ba03-c4fac52567a7}\" relid=\"0x177\" childrelidcntr=\"0x1\">\r\n    <name>US Survey Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ftUS</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>US Survey Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000193\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3634cd0f-8095-4b53-8f77-2b6d8f412dcb}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.30480059999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d1\" kind=\"conversion_based_unit\" guid=\"{316d17ec-fed1-4bde-8451-46e50056e071}\" relid=\"0x176\" childrelidcntr=\"0x1\">\r\n    <name>Fermi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>fm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Fermi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>fm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000194\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{366cb994-a948-44b0-88f7-f14364c79ac8}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.0000000000000001e-015</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d2\" kind=\"conversion_based_unit\" guid=\"{60a4bd20-58eb-4cce-8a3c-80e2082c18bc}\" relid=\"0x175\" childrelidcntr=\"0x1\">\r\n    <name>Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000195\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9a42791a-3bbb-434a-ad17-816bcb12cfd3}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d3\" kind=\"conversion_based_unit\" guid=\"{89fa8bdd-19e0-4a24-b6db-d177440d6846}\" relid=\"0x174\" childrelidcntr=\"0x1\">\r\n    <name>Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000196\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c806dfdb-e1fa-4cfb-88b3-a2d0370950f5}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.01</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d4\" kind=\"conversion_based_unit\" guid=\"{c18f49a5-4988-4b21-b2ba-c7941c38734e}\" relid=\"0x173\" childrelidcntr=\"0x1\">\r\n    <name>Mile - International Standard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>miINT</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mile - International Standard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000197\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0a98d856-6f75-4676-8e8d-fb3df5f24c4d}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1609.3440000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d5\" kind=\"conversion_based_unit\" guid=\"{14f9f4ca-268c-41a5-a416-bc4751fbcf6b}\" relid=\"0x172\" childrelidcntr=\"0x1\">\r\n    <name>Planck Length</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Length</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>l_P</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000198\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{499772c7-8a9e-4cd5-9b55-37dd52a8904b}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.616252e-035</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d6\" kind=\"conversion_based_unit\" guid=\"{db50fa61-e659-4e97-b46d-094c73980e9c}\" relid=\"0x171\" childrelidcntr=\"0x1\">\r\n    <name>Fathom</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>fath</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Fathom</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>fath</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000199\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7cfe8a32-cba0-40e8-a35f-a5377229c91d}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.8288</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d7\" kind=\"conversion_based_unit\" guid=\"{b517d27a-60b5-446f-9302-95d444f7e177}\" relid=\"0x170\" childrelidcntr=\"0x1\">\r\n    <name>Chain</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ch</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Chain</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ch</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000019a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ccba25cc-2822-4216-85ad-36bcad4eec62}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>20.116800000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d8\" kind=\"conversion_based_unit\" guid=\"{d72cca05-ef8e-42a5-8c60-b6802fc2ab17}\" relid=\"0x16f\" childrelidcntr=\"0x1\">\r\n    <name>Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000019b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7170987e-df26-450a-b420-9195dbb64bd4}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.30480000000000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000d9\" kind=\"conversion_based_unit\" guid=\"{44c0fc27-90bf-424e-acbd-a5930a46e6a0}\" relid=\"0x16e\" childrelidcntr=\"0x1\">\r\n    <name>Microinch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>in^-6</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Microinch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>in^-6</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000019c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2749c96b-c4da-4782-96b3-92e42b7b2cf8}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.5399999999999999e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000da\" kind=\"conversion_based_unit\" guid=\"{2d87c76d-8f23-463f-aa3d-53a8de0e8767}\" relid=\"0x16d\" childrelidcntr=\"0x1\">\r\n    <name>Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>in</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>in</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000019d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{746d369e-8669-4f8b-b8b5-50f47cd82de9}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.025399999999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000db\" kind=\"conversion_based_unit\" guid=\"{4e39b00c-efa7-45f1-8884-aa27e6087bbc}\" relid=\"0x16c\" childrelidcntr=\"0x1\">\r\n    <name>Astronomical Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>au</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Astronomical Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>au</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000019e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b5e8522f-93bd-41e9-a9d9-bc38e52413be}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>149597870000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000dc\" kind=\"conversion_based_unit\" guid=\"{185c447a-8431-4cca-893b-338a846ccba3}\" relid=\"0x16b\" childrelidcntr=\"0x1\">\r\n    <name>Femtometer</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>fm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Femtometer</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>fm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000019f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{576078e5-f498-43e7-99f4-df2a66d4d278}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.0000000000000001e-015</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000dd\" kind=\"conversion_based_unit\" guid=\"{0e0f5f8d-e661-402f-8b0d-d371c1cdcf81}\" relid=\"0x16a\" childrelidcntr=\"0x1\">\r\n    <name>Point</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>pt</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Point</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>pt</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6c58eb10-94c3-42e7-874b-6028dd556a72}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.5400000000000001e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000de\" kind=\"conversion_based_unit\" guid=\"{7134a856-1ca6-4352-a34f-f9ad25dadfa8}\" relid=\"0x169\" childrelidcntr=\"0x1\">\r\n    <name>Rod</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rd</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Rod</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rd</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8004b614-0395-46df-b094-a8701fdf3100}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>5.02921</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000df\" kind=\"conversion_based_unit\" guid=\"{83c77566-6885-455b-9cf2-a0e97d1d1766}\" relid=\"0x168\" childrelidcntr=\"0x1\">\r\n    <name>Furlong</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>fur</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Furlong</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>fur</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2bf594dc-9d5e-4178-adbb-15d5bdf4de62}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>201.16800000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e0\" kind=\"conversion_based_unit\" guid=\"{12977c4a-ac95-41df-acca-b76fc8c122f4}\" relid=\"0x167\" childrelidcntr=\"0x1\">\r\n    <name>Micrometer</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Ã‚Âµm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Micrometer</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Ã‚Âµm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a4364ba2-bcdf-4168-ad1b-27943ee5b5a3}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e1\" kind=\"conversion_based_unit\" guid=\"{0f01c3ba-817e-46f4-be73-77be28c0e4b2}\" relid=\"0x166\" childrelidcntr=\"0x1\">\r\n    <name>Mile US Statute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>miUS</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mile US Statute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{881c0666-a227-41d1-8fa8-5e6b994e20e3}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1609.347</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e2\" kind=\"conversion_based_unit\" guid=\"{f7b1e497-8b22-416e-997e-1a15284aa768}\" relid=\"0x165\" childrelidcntr=\"0x1\">\r\n    <name>Light Year</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ly</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Light Year</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ly</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b7412339-5271-482b-9589-75af1eaa447f}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9460730472580800</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e3\" kind=\"conversion_based_unit\" guid=\"{d5d1b63c-ae4b-4c66-a3a8-dcf04cade4fa}\" relid=\"0x164\" childrelidcntr=\"0x1\">\r\n    <name>Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>yd</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>yd</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{349e1a33-fea7-4a68-8368-5f74bad16ed8}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.91439999999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e4\" kind=\"conversion_based_unit\" guid=\"{877000fd-0d94-432c-bc05-61042cd5b6f7}\" relid=\"0x163\" childrelidcntr=\"0x1\">\r\n    <name>Kilometer </name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>km</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilometer </value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>km</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{33d3a874-c89f-4ed4-a7d8-e74189f0323d}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e5\" kind=\"conversion_based_unit\" guid=\"{29c2344d-73fa-4dff-aadc-7bafe8e7dfa4}\" relid=\"0x162\" childrelidcntr=\"0x1\">\r\n    <name>Nautical Mile</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>nmi</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Nautical Mile</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>n mile</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5b260442-6d2f-4a91-a34c-100ae98abe4d}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1852</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e6\" kind=\"conversion_based_unit\" guid=\"{a6ca7c46-6cce-46fc-bff1-7116a02210b3}\" relid=\"0x161\" childrelidcntr=\"0x1\">\r\n    <name>Angstrom</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Ãƒâ€¦</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Angstrom</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Ãƒâ€¦</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001a9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{846d489a-541b-4d3e-ae1c-28fd7e8c6bb9}\" relid=\"0x1\" referred=\"id-0066-000000ba\">\r\n        <name>Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1e-010</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e7\" kind=\"conversion_based_unit\" guid=\"{964b0ef2-7b59-4a6a-9174-c5651b4c0e81}\" relid=\"0x160\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W sr^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001aa\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{18151a95-2b29-477f-9895-5e92e02dbe96}\" relid=\"0x1\" referred=\"id-0065-00000050\">\r\n        <name>Watt per Steradian</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e8\" kind=\"conversion_based_unit\" guid=\"{cb953f9b-1b7c-4627-911a-a9facd5442ab}\" relid=\"0x15f\" childrelidcntr=\"0x1\">\r\n    <name>Watt Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ab\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{dcc70bf1-1b24-492c-980b-7665f4afa8e1}\" relid=\"0x1\" referred=\"id-0065-00000051\">\r\n        <name>Watt Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000e9\" kind=\"conversion_based_unit\" guid=\"{7f39f6b4-d767-4bda-b907-f1d2f379db38}\" relid=\"0x15e\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Mole Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/(mol-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Mole Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J mol^-1 K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ac\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{be4e49ea-ade4-4bef-a7df-adca0768992a}\" relid=\"0x1\" referred=\"id-0065-00000052\">\r\n        <name>Joule per Mole Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ea\" kind=\"conversion_based_unit\" guid=\"{d38cbbcf-f4ab-4a53-a718-d4b15fd29125}\" relid=\"0x15d\" childrelidcntr=\"0x1\">\r\n    <name>Electron Volt Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>eV s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Electron Volt Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>eV s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ad\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0de48e38-221c-4e29-9ba6-2c054efa1cb7}\" relid=\"0x1\" referred=\"id-0065-00000053\">\r\n        <name>Joule Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.6021765313999999e-019</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000eb\" kind=\"conversion_based_unit\" guid=\"{3d8cf06f-e4ad-4f22-8673-e56428a579d4}\" relid=\"0x15c\" childrelidcntr=\"0x1\">\r\n    <name>Erg Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Erg Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>erg s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ae\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a91e2cf5-3293-48b2-b9bc-8e81bb079b2d}\" relid=\"0x1\" referred=\"id-0065-00000053\">\r\n        <name>Joule Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ec\" kind=\"conversion_based_unit\" guid=\"{69570768-4ba7-42a5-a7ba-6eeaf5883683}\" relid=\"0x15b\" childrelidcntr=\"0x1\">\r\n    <name>Joule Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001af\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e968a9f2-717d-450f-9d75-4f2a1489d043}\" relid=\"0x1\" referred=\"id-0065-00000053\">\r\n        <name>Joule Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ed\" kind=\"conversion_based_unit\" guid=\"{d7236b9c-0d4c-48b3-9b73-9b729bad3628}\" relid=\"0x15a\" childrelidcntr=\"0x1\">\r\n    <name>Degree per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>deg/h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>deg/h</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{407605ee-08fb-421b-99a1-cdf461fd12b8}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.8481368099999997e-006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ee\" kind=\"conversion_based_unit\" guid=\"{f86400e0-edba-4e0d-9c00-57b9a4a80657}\" relid=\"0x159\" childrelidcntr=\"0x1\">\r\n    <name>Degree per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>deg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>deg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a485bef5-6a50-44d7-85c7-589338ed2d9d}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.017453292499999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ef\" kind=\"conversion_based_unit\" guid=\"{4c9a6c50-4d6c-4635-9889-57d59568f841}\" relid=\"0x158\" childrelidcntr=\"0x1\">\r\n    <name>Radian per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Radian per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9c2d21b0-cc62-4f9f-90ac-dc6d763302da}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f0\" kind=\"conversion_based_unit\" guid=\"{93ae72b3-6d72-4232-9c5b-c74ca85b69ac}\" relid=\"0x157\" childrelidcntr=\"0x1\">\r\n    <name>Radian per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad/h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Radian per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad/h</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1057e15c-9db1-409b-898d-f52813dd747d}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3600</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f1\" kind=\"conversion_based_unit\" guid=\"{549847aa-17a4-45f6-9240-611a9f096c34}\" relid=\"0x156\" childrelidcntr=\"0x1\">\r\n    <name>Revolution per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rev/h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Revolution per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rev/h</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{065f6d2b-9c8b-41e8-8538-f677a106bfe2}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00174532925</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f2\" kind=\"conversion_based_unit\" guid=\"{3ff5df1f-a43c-4d08-81d9-9efaece65bf6}\" relid=\"0x155\" childrelidcntr=\"0x1\">\r\n    <name>Degree per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{518ddaf7-2f09-4f69-b084-bb645f67d906}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00029088820899999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f3\" kind=\"conversion_based_unit\" guid=\"{d414c4f2-7abd-453d-8492-9297929744c9}\" relid=\"0x154\" childrelidcntr=\"0x1\">\r\n    <name>Revolution per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rev/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Revolution per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rev/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{adce1169-cfb0-4681-b62b-8307f986be45}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.104719755</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f4\" kind=\"conversion_based_unit\" guid=\"{93596479-12cd-422c-a8a4-be642b066e19}\" relid=\"0x153\" childrelidcntr=\"0x1\">\r\n    <name>Revolution per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rev/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Revolution per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rev/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{994a7828-a36f-4044-8131-c0debe319fcc}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.2831853100000004</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f5\" kind=\"conversion_based_unit\" guid=\"{a7e82203-1bc2-4f6a-a6ee-a74ca12ded42}\" relid=\"0x152\" childrelidcntr=\"0x1\">\r\n    <name>Radian per second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Radian per second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1531a338-da10-47f4-a620-9d5d50cd0daf}\" relid=\"0x1\" referred=\"id-0065-00000054\">\r\n        <name>Radian per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>60</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f6\" kind=\"conversion_based_unit\" guid=\"{6296b056-c5a1-4c76-82d3-839b173683a1}\" relid=\"0x151\" childrelidcntr=\"0x1\">\r\n    <name>Planck Mass</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Mass</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m_P</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001b9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{be726c21-7f64-4e4b-aa6a-a9b35398d561}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.1764400000000001e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f7\" kind=\"conversion_based_unit\" guid=\"{461afae7-694e-4795-8699-a9b3470c37f5}\" relid=\"0x150\" childrelidcntr=\"0x1\">\r\n    <name>Pound Troy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Troy</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ba\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1e996ce6-595d-4576-ac86-7f64553183ce}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.37324172160000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f8\" kind=\"conversion_based_unit\" guid=\"{c33ec748-6aeb-487c-92bc-9e011025363b}\" relid=\"0x14f\" childrelidcntr=\"0x1\">\r\n    <name>Ton - Long</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ton</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ton - Long</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ton</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001bb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d4570660-4d0b-4a13-8fa7-3b5900907ac1}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1016.0469088</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000f9\" kind=\"conversion_based_unit\" guid=\"{589c744e-cec7-48ca-aca7-560471ea2d42}\" relid=\"0x14e\" childrelidcntr=\"0x1\">\r\n    <name>Ton - Short</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ton</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ton - Short</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ton</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001bc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d378bf69-884d-425e-9de8-899cbe862bf1}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>907.18474000000003</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000fa\" kind=\"conversion_based_unit\" guid=\"{6a9ae5a5-36f3-466b-b131-212e5069ef64}\" relid=\"0x14d\" childrelidcntr=\"0x1\">\r\n    <name>Pound Mass</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Mass</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001bd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d71152c0-d016-4442-a8a0-8b15d96314d5}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.45359237000000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000fb\" kind=\"conversion_based_unit\" guid=\"{bb13761c-78c4-4c5b-82bf-6335be0c79be}\" relid=\"0x14c\" childrelidcntr=\"0x1\">\r\n    <name>Unified Atomic Mass Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>u</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Unified Atomic Mass Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>u</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001be\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cc69e58d-c5c3-4b3e-9ea9-fe6901a3f82a}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.1093821499999992e-031</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000fc\" kind=\"conversion_based_unit\" guid=\"{47104be7-b79f-49fe-8a27-b4028830394c}\" relid=\"0x14b\" childrelidcntr=\"0x1\">\r\n    <name>Carat</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Nm/ct</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Carat</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Nm/ct</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001bf\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8865ac22-00b1-418e-8908-224e3e6e15d5}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00020000000000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000fd\" kind=\"conversion_based_unit\" guid=\"{e7c15999-44d5-4ccd-8f60-6ffd689600d8}\" relid=\"0x14a\" childrelidcntr=\"0x1\">\r\n    <name>Slug</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>slug</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Slug</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>slug</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{bbc21217-11a6-4ac7-b4e3-ce0e502a1dc7}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>14.593902999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000fe\" kind=\"conversion_based_unit\" guid=\"{4304edfe-2687-4561-8161-8de404f85ffa}\" relid=\"0x149\" childrelidcntr=\"0x1\">\r\n    <name>Ton Assay</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>AT</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ton Assay</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>AT</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{64f2d15a-9e48-4bc8-8baa-40e6a8dfbf97}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.032666667000000003</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000000ff\" kind=\"conversion_based_unit\" guid=\"{a94b0232-577b-4efd-b227-43b403abe914}\" relid=\"0x148\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{40f8b492-32f9-4202-87c8-16122394a84f}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000100\" kind=\"conversion_based_unit\" guid=\"{1395bb0d-cdb1-4cb3-8a86-3fbcfd9c01da}\" relid=\"0x147\" childrelidcntr=\"0x1\">\r\n    <name>Metric Ton</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mT</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Metric Ton</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mT</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f65d6cd3-9fde-429d-81c1-9f04341309bb}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000101\" kind=\"conversion_based_unit\" guid=\"{ac42709c-bd2e-4e1b-ac1d-6188cbcb40fe}\" relid=\"0x146\" childrelidcntr=\"0x1\">\r\n    <name>Ounce Mass</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ozm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce Mass</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ozm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6ad81ffc-3b1c-460b-b374-ef6dc23f2f01}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.028349523125000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000102\" kind=\"conversion_based_unit\" guid=\"{d8027a85-af9a-4b7e-ace4-f58433e12bd1}\" relid=\"0x145\" childrelidcntr=\"0x1\">\r\n    <name>Penny Weight</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>dwt</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Penny Weight</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>dwt</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d4c8286f-ba59-4266-a68f-03a8a5f1c6d1}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0015551738400000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000103\" kind=\"conversion_based_unit\" guid=\"{850b5364-3d0e-4bce-b89e-f0c97353ded0}\" relid=\"0x144\" childrelidcntr=\"0x1\">\r\n    <name>Hundred Weight - Short</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cwt</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hundred Weight - Short</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cwt</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6853d035-8ea6-4bf8-8f72-ba39814192d0}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>45.359237</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000104\" kind=\"conversion_based_unit\" guid=\"{fc005904-6ffa-4945-b123-d109ba3ca3e8}\" relid=\"0x143\" childrelidcntr=\"0x1\">\r\n    <name>Gram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>g</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>g</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7be38c87-c3cc-4e43-a2ed-220465cc7be4}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000105\" kind=\"conversion_based_unit\" guid=\"{0c89aa7f-2330-4c3d-9bc0-31d4fda91bce}\" relid=\"0x142\" childrelidcntr=\"0x1\">\r\n    <name>Ounce Troy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>oz</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce Troy</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>oz</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a26e39b7-0198-463d-be32-535bfdcc6aa9}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.031103476800000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000106\" kind=\"conversion_based_unit\" guid=\"{e1085449-5c48-457b-bc74-ac0539e6df1b}\" relid=\"0x141\" childrelidcntr=\"0x1\">\r\n    <name>Grain</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>gr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Grain</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>gr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001c9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{656a4263-a68b-42c3-97c8-489f18e3243f}\" relid=\"0x1\" referred=\"id-0066-000000bd\">\r\n        <name>Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.4798909999999995e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000107\" kind=\"conversion_based_unit\" guid=\"{bbbe4dba-9a6d-4ba5-a261-201cf9296138}\" relid=\"0x140\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m^2-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m^2-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ca\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cf61b288-fe14-4b08-9a57-cfd96267c316}\" relid=\"0x1\" referred=\"id-0065-00000055\">\r\n        <name>Watt per Square Meter Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000108\" kind=\"conversion_based_unit\" guid=\"{195360b7-9ace-4e19-894f-1eaefd375253}\" relid=\"0x13f\" childrelidcntr=\"0x1\">\r\n    <name>Per Tesla Meter Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^-1 T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Tesla Meter Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-1 T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001cb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7d4a2856-3c6f-4209-8613-3e207d36090d}\" relid=\"0x1\" referred=\"id-0065-00000057\">\r\n        <name>Per Tesla Meter Unit</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000109\" kind=\"conversion_based_unit\" guid=\"{490ac19c-c2b1-4353-a21f-7c9a6b92540c}\" relid=\"0x13e\" childrelidcntr=\"0x1\">\r\n    <name>Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001cc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f99ea25a-f327-4d27-b58f-8bcbf50b41db}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.092903040000000006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000010a\" kind=\"conversion_based_unit\" guid=\"{39e2c815-c7a0-4403-a37a-f591ed2ed69d}\" relid=\"0x13d\" childrelidcntr=\"0x1\">\r\n    <name>Acre</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ac</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Acre</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ac</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001cd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{124a9291-cddf-4f68-b3f8-b3681deec3ea}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4046.8564224000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000010b\" kind=\"conversion_based_unit\" guid=\"{1d7912f0-ffca-4e64-965d-c340edcc866c}\" relid=\"0x13c\" childrelidcntr=\"0x1\">\r\n    <name>Square Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ce\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f039ca3b-c372-413d-bc55-3487677a3821}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00064515999999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000010c\" kind=\"conversion_based_unit\" guid=\"{921d6f7f-3743-487c-844c-683066e6f568}\" relid=\"0x13b\" childrelidcntr=\"0x1\">\r\n    <name>Barn</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>b</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Barn</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>b</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001cf\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7a038550-8953-41c0-a5f3-adf06fc8ffcf}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999997e-029</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000010d\" kind=\"conversion_based_unit\" guid=\"{0d5adf42-296e-4c2b-8f83-7a67bec98409}\" relid=\"0x13a\" childrelidcntr=\"0x1\">\r\n    <name>Hectare</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ha</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hectare</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ha</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{91f5f6fa-fb0f-41b2-b512-43e201878c55}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000010e\" kind=\"conversion_based_unit\" guid=\"{a99459af-b4d4-49c2-b0fc-ef8e25293057}\" relid=\"0x139\" childrelidcntr=\"0x1\">\r\n    <name>Are</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>a</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Are</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>a</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{50367335-1fbc-4d8d-a877-58a07992dfc8}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>100</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000010f\" kind=\"conversion_based_unit\" guid=\"{4400f436-db0a-4327-8c5e-7938353d8059}\" relid=\"0x138\" childrelidcntr=\"0x1\">\r\n    <name>Square Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>yd^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>yd^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ef39958f-b983-4658-b5aa-6bc850c29ab7}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.83612735999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000110\" kind=\"conversion_based_unit\" guid=\"{e70cb355-53da-4206-a05b-50e209544081}\" relid=\"0x137\" childrelidcntr=\"0x1\">\r\n    <name>Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f0a35526-d5fc-49c5-8819-7887b1af0c3b}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000111\" kind=\"conversion_based_unit\" guid=\"{eac96a3e-8cfc-4103-84f7-e87785a79547}\" relid=\"0x136\" childrelidcntr=\"0x1\">\r\n    <name>Square Mile</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mi^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Mile</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mi^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{734069d4-4a1e-45d3-943a-8720df52d0b6}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2589988.1099999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000112\" kind=\"conversion_based_unit\" guid=\"{0e06463b-348f-4c66-a90a-d1cc07f9d649}\" relid=\"0x135\" childrelidcntr=\"0x1\">\r\n    <name>Planck Area</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Area</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cab58ec7-7f74-44cd-be49-1e5f27d98675}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.61223e-070</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000113\" kind=\"conversion_based_unit\" guid=\"{ff0024e3-8d8f-420a-ad1c-859e1b596cab}\" relid=\"0x134\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{27932455-3f95-4b10-91b0-1c0ba20e4b8c}\" relid=\"0x1\" referred=\"id-0065-00000058\">\r\n        <name>Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000114\" kind=\"conversion_based_unit\" guid=\"{ab84ef76-474d-4d16-868b-2b08da9af6c0}\" relid=\"0x133\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Inch per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>in^3/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Inch per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>in^3/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a1a3ec58-44c9-49db-a0c1-15ebbf784ecc}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.7311773333333333e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000115\" kind=\"conversion_based_unit\" guid=\"{057b3f6e-b054-4a08-baf0-69933938a275}\" relid=\"0x132\" childrelidcntr=\"0x1\">\r\n    <name>US Gallon per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>gal/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>US Gallon per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>gal/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6102875e-6031-4e83-9f3d-6f0583fcf8d0}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.3090199999999994e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000116\" kind=\"conversion_based_unit\" guid=\"{0dc4a04f-6ffe-4cee-9219-0c9fee10d3ad}\" relid=\"0x131\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3/h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/h</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001d9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c5eba88a-065b-4df2-b7d0-fb323940585c}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00027777777777777778</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000117\" kind=\"conversion_based_unit\" guid=\"{46c233f5-4b02-4a12-ac2d-e1e00a3a5870}\" relid=\"0x130\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Foot per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft^3/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Foot per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft^3/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001da\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1f256fbc-743f-4482-a2ce-ef4da4112e89}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0004719474432000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000118\" kind=\"conversion_based_unit\" guid=\"{46f13b8b-4d04-4c4a-ac12-3a65d4af0bf7}\" relid=\"0x12f\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Yard per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>yd^3/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Yard per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>yd^3/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001db\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{56c5dfd4-1521-4231-8344-cbdedc1df49d}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0127425809664</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000119\" kind=\"conversion_based_unit\" guid=\"{e2c4897c-7444-4487-8d0e-e8ba35a27056}\" relid=\"0x12e\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Foot per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft^3/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Foot per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft^3/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001dc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{343a3d6e-4135-4640-8089-8c0cc0ca3dcb}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.028316846592000004</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000011a\" kind=\"conversion_based_unit\" guid=\"{19f869a1-82b9-4080-a55f-6621073523c0}\" relid=\"0x12d\" childrelidcntr=\"0x1\">\r\n    <name>US Gallon per Day</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>gal/d</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>US Gallon per Day</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>gal/d</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001dd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4c670f0d-e54c-4b3f-a176-dea97a722238}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.3812638900000002e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000011b\" kind=\"conversion_based_unit\" guid=\"{7459b28f-0977-4d3e-9f7a-a453042490ff}\" relid=\"0x12c\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001de\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9dc05a26-550a-4755-977b-14debdc33070}\" relid=\"0x1\" referred=\"id-0065-00000059\">\r\n        <name>Cubic Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000011c\" kind=\"conversion_based_unit\" guid=\"{ce33e867-993e-4cd6-8edc-69104c0eb504}\" relid=\"0x12b\" childrelidcntr=\"0x1\">\r\n    <name>Hertz per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001df\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b9724f34-1b09-4c1e-9f28-1a0a39109ac9}\" relid=\"0x1\" referred=\"id-0065-0000005a\">\r\n        <name>Hertz per Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000011d\" kind=\"conversion_based_unit\" guid=\"{ab866e15-5ffd-4ab3-b4bb-3ec04079410e}\" relid=\"0x12a\" childrelidcntr=\"0x1\">\r\n    <name>Mega Hertz per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>MHz K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mega Hertz per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>MHz K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4f444655-2903-429a-b8d5-b7da5029b027}\" relid=\"0x1\" referred=\"id-0065-0000005a\">\r\n        <name>Hertz per Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000011e\" kind=\"conversion_based_unit\" guid=\"{8927ca33-5fa8-48c6-a9d2-59a92db15df5}\" relid=\"0x129\" childrelidcntr=\"0x1\">\r\n    <name>BTU per Hour Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Btu/(hr-ft^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>BTU per Hour Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Btu/(hr-ft^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3eff9875-2071-4005-8b45-eae46a7d4e1f}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.1545907500000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000011f\" kind=\"conversion_based_unit\" guid=\"{ec46c2d3-f750-4296-a2cb-c89cbcca1623}\" relid=\"0x128\" childrelidcntr=\"0x1\">\r\n    <name>Kilocalorie per Square Centimeter Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kcal/(cm^2-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilocalorie per Square Centimeter Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kcal/(cm^2-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{aa37fdee-05a4-43a9-b271-d9a041d31232}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.1839999999999999e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000120\" kind=\"conversion_based_unit\" guid=\"{d6b06c46-acf4-480f-8de5-754422f9072c}\" relid=\"0x127\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c88c4fe2-ab87-47fe-b28e-145dcc126949}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000121\" kind=\"conversion_based_unit\" guid=\"{690cf41c-1ba8-4c52-b5d9-94d20811176e}\" relid=\"0x126\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c6ac10c3-3c64-46c2-adaf-92854bd9a48e}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10.7639104</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000122\" kind=\"conversion_based_unit\" guid=\"{4249f7c2-9a44-4135-806a-6118a6041e66}\" relid=\"0x125\" childrelidcntr=\"0x1\">\r\n    <name>Erg per Square Centimeter Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>erg/(cm^2-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Erg per Square Centimeter Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>erg/(cm^2-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{532af8b4-b05e-4578-aba7-5afc1afb17e2}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000123\" kind=\"conversion_based_unit\" guid=\"{580628fe-ad6b-42cd-a81f-f647458d4244}\" relid=\"0x124\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c4e4e20e-d098-4a1c-91b3-bb01989d7ec7}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000124\" kind=\"conversion_based_unit\" guid=\"{692915f3-1e7d-4666-b8d8-533c57c95837}\" relid=\"0x123\" childrelidcntr=\"0x1\">\r\n    <name>BTU per Second Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Btu/(s-ft^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>BTU per Second Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Btu/(s-ft^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e9f31bc6-2ed5-42fd-bd2f-1b1d5c37c303}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>11356.5267</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000125\" kind=\"conversion_based_unit\" guid=\"{27e77411-d4cc-406b-b619-40b33b232917}\" relid=\"0x122\" childrelidcntr=\"0x1\">\r\n    <name>Foot Pound Force per Square Foot Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft-lbf(ft^2-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot Pound Force per Square Foot Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft-lbf(ft^2-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{87db3160-4951-46df-82e6-9d4f2c20b93a}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>14.593904200000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000126\" kind=\"conversion_based_unit\" guid=\"{0dfdca7c-b86e-42a7-a964-8a1f0822ea86}\" relid=\"0x121\" childrelidcntr=\"0x1\">\r\n    <name>Kilocalorie per Square Centimeter Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kcal/(cm^2-min)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilocalorie per Square Centimeter Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kcal/(cm^2-min)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001e9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c5fdbf46-0878-4ab8-b2e8-102ed177a116}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.9733333300000004e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000127\" kind=\"conversion_based_unit\" guid=\"{41f73f17-1e24-4765-802e-42f308a642d4}\" relid=\"0x120\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ea\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{bd076285-901e-422c-8a90-0a3720dfaafb}\" relid=\"0x1\" referred=\"id-0065-0000005b\">\r\n        <name>Watt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1550.0030999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000128\" kind=\"conversion_based_unit\" guid=\"{92ec4dfe-c6b4-496f-9fa9-45c0cf1f374e}\" relid=\"0x11f\" childrelidcntr=\"0x1\">\r\n    <name>Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001eb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{df732711-f295-44ee-8f7e-f88c7a684ba0}\" relid=\"0x1\" referred=\"id-0065-0000005c\">\r\n        <name>Meter Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000129\" kind=\"conversion_based_unit\" guid=\"{23036873-eaa0-4964-9f0c-6477b295d46e}\" relid=\"0x11e\" childrelidcntr=\"0x1\">\r\n    <name>Stathenry per Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Stathenry per Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statH/cm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ec\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{eb497854-6e67-467c-a36f-3202fb72e581}\" relid=\"0x1\" referred=\"id-0065-0000005d\">\r\n        <name>Henry per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>89876000000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000012a\" kind=\"conversion_based_unit\" guid=\"{6291fa57-ff49-41ec-b19d-550f29201f53}\" relid=\"0x11d\" childrelidcntr=\"0x1\">\r\n    <name>Relative Permeability</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Relative Permeability</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ÃŽÂ¼r</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ed\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9cbd6d63-2b34-467f-b03b-bd5c800fb187}\" relid=\"0x1\" referred=\"id-0065-0000005d\">\r\n        <name>Henry per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.2566370599999999e-006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000012b\" kind=\"conversion_based_unit\" guid=\"{8f6ba85a-d246-41a2-b5d6-d91cbd1f4898}\" relid=\"0x11c\" childrelidcntr=\"0x1\">\r\n    <name>Henry per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>H/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Henry per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>H/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ee\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{853cbc75-f729-4e9b-ab50-ea0d2f262c1c}\" relid=\"0x1\" referred=\"id-0065-0000005d\">\r\n        <name>Henry per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000012c\" kind=\"conversion_based_unit\" guid=\"{a110a275-1e99-4b19-99ae-fb9ed575be5d}\" relid=\"0x11b\" childrelidcntr=\"0x1\">\r\n    <name>Ampere per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ef\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b0673877-1e72-46a3-bf26-211751b2b620}\" relid=\"0x1\" referred=\"id-0065-0000005e\">\r\n        <name>Ampere per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000012d\" kind=\"conversion_based_unit\" guid=\"{77b91c26-bd96-4a01-ab9f-34cadb90bf46}\" relid=\"0x11a\" childrelidcntr=\"0x1\">\r\n    <name>Abampere per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abA / cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abampere per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{00bd4bc5-b2ba-4cb8-a71c-cc37f1cdc543}\" relid=\"0x1\" referred=\"id-0065-0000005e\">\r\n        <name>Ampere per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>100000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000012e\" kind=\"conversion_based_unit\" guid=\"{c80ed638-9209-428f-bc1b-c1ece1664da3}\" relid=\"0x119\" childrelidcntr=\"0x1\">\r\n    <name>Statampere per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statA / cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statampere per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{27661ec5-51db-4168-9518-c3dc52fc5f13}\" relid=\"0x1\" referred=\"id-0065-0000005e\">\r\n        <name>Ampere per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.335641e-006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000012f\" kind=\"conversion_based_unit\" guid=\"{4b70c3d8-5796-4f10-ba66-9f2d39c3761c}\" relid=\"0x118\" childrelidcntr=\"0x1\">\r\n    <name>Planck Current Density</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Current Density</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{048f4d73-2687-48ef-91f1-065ed0fcf031}\" relid=\"0x1\" referred=\"id-0065-0000005e\">\r\n        <name>Ampere per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.3317740000000001e+095</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000130\" kind=\"conversion_based_unit\" guid=\"{a4ee5064-f077-4e3c-a782-b8fc880badf1}\" relid=\"0x117\" childrelidcntr=\"0x1\">\r\n    <name>Dyne</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>dyn</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Dyne</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>dyn</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{792cee40-7796-49c9-822e-36b45645f7c3}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.0000000000000001e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000131\" kind=\"conversion_based_unit\" guid=\"{b547fe9c-3c2e-4233-8327-4d6cfb08d589}\" relid=\"0x116\" childrelidcntr=\"0x1\">\r\n    <name>Kilopond</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kp</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilopond</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kp</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9e78ea4d-1393-4f23-9db8-57ed8c52d69c}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.8066499999999994</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000132\" kind=\"conversion_based_unit\" guid=\"{6a07330a-18a0-4ad1-a3d6-cfee8c5764ec}\" relid=\"0x115\" childrelidcntr=\"0x1\">\r\n    <name>Pound Force</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbf</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Force</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbf</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d884a987-65c8-48c0-92c0-c498e19e5326}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.4482220000000003</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000133\" kind=\"conversion_based_unit\" guid=\"{db6f166d-25f3-47c2-8781-b3db3e3e91c7}\" relid=\"0x114\" childrelidcntr=\"0x1\">\r\n    <name>Poundal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>pdl</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Poundal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>pdl</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7a3f53f5-025f-4bb7-a241-8b5522d9e6a7}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.13825495437599999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000134\" kind=\"conversion_based_unit\" guid=\"{8d3070eb-ceed-4b8f-ab2d-8627ffce150b}\" relid=\"0x113\" childrelidcntr=\"0x1\">\r\n    <name>Planck Force</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Force</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{43f51089-9a97-44d7-abb1-ac7f4b77d1ae}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.2102699999999999e+044</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000135\" kind=\"conversion_based_unit\" guid=\"{b302847d-af76-4d78-9993-ae2fc8ba2241}\" relid=\"0x112\" childrelidcntr=\"0x1\">\r\n    <name>Newton</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>N</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Newton</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>N</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6e76d578-53fc-409f-a8fe-8b68eb89ceab}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000136\" kind=\"conversion_based_unit\" guid=\"{1686dd0c-0204-4de5-9307-8a6f913dcd58}\" relid=\"0x111\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram Force</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kgf</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Force</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kgf</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001f9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1e92d18c-4e4d-4638-ab21-1745d26ee455}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.8066499999999994</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000137\" kind=\"conversion_based_unit\" guid=\"{bd573613-581a-4fad-b455-ee1b8ccea4d7}\" relid=\"0x110\" childrelidcntr=\"0x1\">\r\n    <name>Ounce Force</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ozf</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce Force</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ozf</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001fa\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{107372a9-f995-42a1-a13e-f517bc8a445f}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.27801387500000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000138\" kind=\"conversion_based_unit\" guid=\"{2ba7476d-d8e7-432c-98cc-0d93a823e53c}\" relid=\"0x10f\" childrelidcntr=\"0x1\">\r\n    <name>Kip</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kip</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kip</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kip</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001fb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6444db50-5043-4aa8-9fbf-423eef454659}\" relid=\"0x1\" referred=\"id-0065-0000005f\">\r\n        <name>Newton</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4448.2219999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000139\" kind=\"conversion_based_unit\" guid=\"{fc5d59d0-9c13-41dc-820a-5cb2966b710f}\" relid=\"0x10e\" childrelidcntr=\"0x1\">\r\n    <name>Per Mole Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Mole Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001fc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{54be98c8-49f4-4676-b009-61206fb9916c}\" relid=\"0x1\" referred=\"id-0065-00000060\">\r\n        <name>Per Mole Unit</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000013a\" kind=\"conversion_based_unit\" guid=\"{f04791fa-768e-4eaf-b39a-ace43efb7720}\" relid=\"0x10d\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/in</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/in</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001fd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5dda072b-384f-4b0a-a50d-1a04b2b9b4a0}\" relid=\"0x1\" referred=\"id-0065-00000061\">\r\n        <name>Kilogram per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>17.857967322834646</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000013b\" kind=\"conversion_based_unit\" guid=\"{168a2e54-09b7-41ea-b887-bb027a88b7da}\" relid=\"0x10c\" childrelidcntr=\"0x1\">\r\n    <name>Slug per Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>slug/ft</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Slug per Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>slug/ft</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001fe\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0e3b66d5-b797-4c4f-80ad-628a951a7796}\" relid=\"0x1\" referred=\"id-0065-00000061\">\r\n        <name>Kilogram per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>47.880259186351701</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000013c\" kind=\"conversion_based_unit\" guid=\"{3e140802-e3c3-4b15-a221-7f375ad834ec}\" relid=\"0x10b\" childrelidcntr=\"0x1\">\r\n    <name>Tex</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>tex</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tex</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>tex</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000001ff\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{948dda6d-838d-48c6-b619-100adcdd239b}\" relid=\"0x1\" referred=\"id-0065-00000061\">\r\n        <name>Kilogram per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000013d\" kind=\"conversion_based_unit\" guid=\"{9438c861-5883-4ff0-b0f8-e8596209c859}\" relid=\"0x10a\" childrelidcntr=\"0x1\">\r\n    <name>Denier</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Denier</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000200\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a22ec1e0-b474-49e2-8e74-66f9bee565da}\" relid=\"0x1\" referred=\"id-0065-00000061\">\r\n        <name>Kilogram per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.1000000000000001e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000013e\" kind=\"conversion_based_unit\" guid=\"{f12bf87c-b4b1-408d-a4bf-ba372517648c}\" relid=\"0x109\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/ft</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/ft</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000201\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c290ae72-709d-4d24-ae7b-bff72c48bc16}\" relid=\"0x1\" referred=\"id-0065-00000061\">\r\n        <name>Kilogram per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.4881639435695537</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000013f\" kind=\"conversion_based_unit\" guid=\"{c88a319e-b379-4e45-8167-91049c16a1c5}\" relid=\"0x108\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000202\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d5557d1e-eea1-4223-888f-92a5b6fa6d03}\" relid=\"0x1\" referred=\"id-0065-00000061\">\r\n        <name>Kilogram per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000140\" kind=\"conversion_based_unit\" guid=\"{4b61cd9d-b826-41a3-88f7-296bdcc969c5}\" relid=\"0x107\" childrelidcntr=\"0x1\">\r\n    <name>Volt per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>V m^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>V m^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000203\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{25ba3c95-b5a9-42d8-b68e-c5d94c0b95f7}\" relid=\"0x1\" referred=\"id-0065-00000062\">\r\n        <name>Volt per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000141\" kind=\"conversion_based_unit\" guid=\"{2cc7ca07-bbd4-4c51-b7bc-798a084555ee}\" relid=\"0x106\" childrelidcntr=\"0x1\">\r\n    <name>Pascal Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Pa-s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pa-s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000204\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a5e86418-ac22-4bf6-a77d-5093930f1fd0}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000142\" kind=\"conversion_based_unit\" guid=\"{f30dde4b-23f3-446d-8e33-f8189d42df9c}\" relid=\"0x105\" childrelidcntr=\"0x1\">\r\n    <name>Poise</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>P</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Poise</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>P</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000205\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a5242b16-695e-4b4c-87f9-b183303cb0f0}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.10000000000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000143\" kind=\"conversion_based_unit\" guid=\"{98a595dd-8a33-4f7b-b8c7-a3a15a8483fb}\" relid=\"0x104\" childrelidcntr=\"0x1\">\r\n    <name>Slug per Foot Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>slug/(ft-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Slug per Foot Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>slug/(ft-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000206\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{add93d66-fd15-4e08-8ea7-9d88358a4b82}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>47.880259186351701</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000144\" kind=\"conversion_based_unit\" guid=\"{eaa3dd3f-05e4-4a74-a0eb-93f52517f8d7}\" relid=\"0x103\" childrelidcntr=\"0x1\">\r\n    <name>Pound Force Second per Square Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbf-s/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Force Second per Square Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbf-s/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000207\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{bbf21040-d790-4db9-91f9-08bb0d0de2cb}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6894.7578899999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000145\" kind=\"conversion_based_unit\" guid=\"{b106d8b3-ffc4-4ed5-af60-4dd908a7c2f3}\" relid=\"0x102\" childrelidcntr=\"0x1\">\r\n    <name>Centipoise</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cP</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Centipoise</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cP</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000208\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c3bb34a4-caa5-4f17-8380-040abac8a867}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.01</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000146\" kind=\"conversion_based_unit\" guid=\"{09ac8315-9cc3-4616-a056-7e08a2f2283e}\" relid=\"0x101\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Foot Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/(ft-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Foot Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/(ft-s)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000209\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{bc4053f1-b388-4d83-b1a1-7d5b1027f8d1}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.4881639435695537</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000147\" kind=\"conversion_based_unit\" guid=\"{78d96850-1ebf-4bcc-9049-ccbe33331361}\" relid=\"0x100\" childrelidcntr=\"0x1\">\r\n    <name>Pound Force Second per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbf-s/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Force Second per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbf-s/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000020a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{83900945-618b-403c-a7dc-041cd4d11947}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>47.880263100000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000148\" kind=\"conversion_based_unit\" guid=\"{f115bcd2-323c-4e17-86f1-bd462b66b3c8}\" relid=\"0xff\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Foot Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/(ft-hr)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Foot Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/(ft-hr)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000020b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{18858c48-43de-43f0-addb-fd1eb5099ec6}\" relid=\"0x1\" referred=\"id-0065-00000063\">\r\n        <name>Pascal Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00041337887321376491</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000149\" kind=\"conversion_based_unit\" guid=\"{ff31bf9f-d298-4e38-ae79-1011b4782b5a}\" relid=\"0xfe\" childrelidcntr=\"0x1\">\r\n    <name>Clo</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>clo</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Clo</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>clo</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000020c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2345b27c-8147-4fb7-8476-3aa6da669ebc}\" relid=\"0x1\" referred=\"id-0065-00000065\">\r\n        <name>Square Meter Kelvin per Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.155</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000014a\" kind=\"conversion_based_unit\" guid=\"{c67f687a-99f5-4c23-8995-da3ab2e6c974}\" relid=\"0xfd\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter Kelvin per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>(K^2)m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter Kelvin per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>(K^2)m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000020d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8392570a-0726-42a1-a5cf-7e835a3eede5}\" relid=\"0x1\" referred=\"id-0065-00000065\">\r\n        <name>Square Meter Kelvin per Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000014b\" kind=\"conversion_based_unit\" guid=\"{64a7dcf6-d73d-4ec9-a3f0-c598e6482260}\" relid=\"0xfc\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000020e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{41104488-9485-4353-b097-b68889d05478}\" relid=\"0x1\" referred=\"id-0065-00000066\">\r\n        <name>Cubic Meter per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000014c\" kind=\"conversion_based_unit\" guid=\"{2504a869-a147-4431-af4e-79562ebcfc68}\" relid=\"0xfb\" childrelidcntr=\"0x1\">\r\n    <name>Microsecond</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>microsec</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Microsecond</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>microsec</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000020f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0975cb8f-85f3-4d3a-833b-8f039b90b92f}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000014d\" kind=\"conversion_based_unit\" guid=\"{40ad31a4-8a3b-4949-aa30-4252d2894388}\" relid=\"0xfa\" childrelidcntr=\"0x1\">\r\n    <name>Day</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>d</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Day</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>d</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000210\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2caa788e-e405-4329-9565-68920dd5c16d}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>86400</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000014e\" kind=\"conversion_based_unit\" guid=\"{e6f6585b-3d42-435a-9e3b-073ad805082d}\" relid=\"0xf9\" childrelidcntr=\"0x1\">\r\n    <name>Planck Time</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Time</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>t_P</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000211\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f900075a-d9c1-4305-935a-36576d7c76bd}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>5.3912399999999998e-044</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000014f\" kind=\"conversion_based_unit\" guid=\"{a68b6166-a313-4bd0-8032-ef07494e6dcd}\" relid=\"0xf8\" childrelidcntr=\"0x1\">\r\n    <name>Shake</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Sh</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Shake</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Sh</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000212\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{34ae95dc-b8c1-4e4c-a2ab-6238d55bc549}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000150\" kind=\"conversion_based_unit\" guid=\"{bf78a9ac-174f-490b-bc32-564f70949436}\" relid=\"0xf7\" childrelidcntr=\"0x1\">\r\n    <name>Millisecond</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ms</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Millisecond</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ms</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000213\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{90c26117-fe99-41ed-8aa5-ac5d0e00b06e}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000151\" kind=\"conversion_based_unit\" guid=\"{2214fab5-ddfb-4666-a5c8-27667320b0fa}\" relid=\"0xf6\" childrelidcntr=\"0x1\">\r\n    <name>Year (365 Day)</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>yr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Year (365 Day)</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>yr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000214\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7ec318d6-e91e-4515-bf29-518db71b0f25}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>31536000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000152\" kind=\"conversion_based_unit\" guid=\"{94ad9cf9-256a-41eb-b8ab-5cbacf1961bf}\" relid=\"0xf5\" childrelidcntr=\"0x1\">\r\n    <name>Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000215\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e6ab05b7-29b3-438d-8233-1629e7726aef}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3600</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000153\" kind=\"conversion_based_unit\" guid=\"{20bd0fd6-95be-4e2d-849e-1418d35ba41a}\" relid=\"0xf4\" childrelidcntr=\"0x1\">\r\n    <name>Year Sidereal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>yr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Year Sidereal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>yr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000216\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cf045ec0-181e-4ff4-97ca-960a68cc6945}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>31558149.7632</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000154\" kind=\"conversion_based_unit\" guid=\"{93dc001f-bb2b-446a-841c-1ac36fff7f4a}\" relid=\"0xf3\" childrelidcntr=\"0x1\">\r\n    <name>Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000217\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{571c726c-5dcc-4309-8c2a-c50e31b5b32c}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000155\" kind=\"conversion_based_unit\" guid=\"{13082615-cea3-4c72-95b9-c800c3951674}\" relid=\"0xf2\" childrelidcntr=\"0x1\">\r\n    <name>Minute Time</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Minute Time</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000218\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e2bc2f6c-f92b-4701-a114-8170b2a20a31}\" relid=\"0x1\" referred=\"id-0066-000000b9\">\r\n        <name>Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>60</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000156\" kind=\"conversion_based_unit\" guid=\"{5e959446-d086-41fd-b3ad-5aa83df09a96}\" relid=\"0xf1\" childrelidcntr=\"0x1\">\r\n    <name>Planck Current</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Current</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000219\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8587431f-5137-4a1a-bd57-a8732756a98b}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.4789000000000002e+025</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000157\" kind=\"conversion_based_unit\" guid=\"{135d52dc-7b13-425b-9ac1-37caf1f5cb00}\" relid=\"0xf0\" childrelidcntr=\"0x1\">\r\n    <name>Biot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Bi</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Biot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Bi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000021a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1b43fead-73bc-47c1-ab64-ee4b58707b23}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.335641e-010</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000158\" kind=\"conversion_based_unit\" guid=\"{930d193c-32d0-42bc-a548-eb64d5863c89}\" relid=\"0xef\" childrelidcntr=\"0x1\">\r\n    <name>Statampere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statA</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statampere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statA</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000021b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1b700fa6-d204-4a9a-a97a-7e598ed874ff}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.335641e-010</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000159\" kind=\"conversion_based_unit\" guid=\"{acdc1fb2-cfe6-4f11-8e97-fc4c04ebacde}\" relid=\"0xee\" childrelidcntr=\"0x1\">\r\n    <name>Abampere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abA</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abampere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abA</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000021c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{51a5f9fd-ea06-45cd-8ff2-574ee3bf4d6a}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000015a\" kind=\"conversion_based_unit\" guid=\"{450fcb3a-3e4f-4716-9dc6-ed79027f301f}\" relid=\"0xed\" childrelidcntr=\"0x1\">\r\n    <name>Ampere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000021d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9608808f-27f3-48f2-a7e5-fc36feb34801}\" relid=\"0x1\" referred=\"id-0066-000000b6\">\r\n        <name>Ampere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000015b\" kind=\"conversion_based_unit\" guid=\"{73c51460-e7bd-406d-bb27-538b9d0fb7c7}\" relid=\"0xec\" childrelidcntr=\"0x1\">\r\n    <name>Radian per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Radian per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000021e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3d674a2f-6d72-4611-b61c-369339b725fc}\" relid=\"0x1\" referred=\"id-0065-00000068\">\r\n        <name>Radian per Second Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000015c\" kind=\"conversion_based_unit\" guid=\"{c7640c4a-600a-4b2f-b145-ad1a50cb501d}\" relid=\"0xeb\" childrelidcntr=\"0x1\">\r\n    <name>Degree per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>deg/(s^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>deg/(s^2)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000021f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{244f68e6-894b-41d5-b465-f74187897e05}\" relid=\"0x1\" referred=\"id-0065-00000068\">\r\n        <name>Radian per Second Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.017453292499999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000015d\" kind=\"conversion_based_unit\" guid=\"{719a169e-b01e-4576-b01a-e323586a6ca6}\" relid=\"0xea\" childrelidcntr=\"0x1\">\r\n    <name>Revolution per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Revolution per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000220\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{91420b48-da63-44b5-9cd2-b376aa1cf2af}\" relid=\"0x1\" referred=\"id-0065-00000068\">\r\n        <name>Radian per Second Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.2831853100000004</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000015e\" kind=\"conversion_based_unit\" guid=\"{5c2cd4ef-8b1f-4928-899c-23a3696c50aa}\" relid=\"0xe9\" childrelidcntr=\"0x1\">\r\n    <name>Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000221\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{45fd7f13-8003-469f-8559-412f75e322cd}\" relid=\"0x1\" referred=\"id-0066-000000b8\">\r\n        <name>Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000015f\" kind=\"conversion_based_unit\" guid=\"{8e5a6fc2-709c-43dd-82bd-3a3ed5e3939d}\" relid=\"0xe8\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Meter Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m^2-sr)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m^2-sr)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000222\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{fbcc2094-7220-46c4-b028-e36c5047979d}\" relid=\"0x1\" referred=\"id-0065-00000069\">\r\n        <name>Watt per Square Meter Steradian</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000160\" kind=\"conversion_based_unit\" guid=\"{9f7ade99-2dfb-4b9a-bbe9-f2d1c9cb8acb}\" relid=\"0xe7\" childrelidcntr=\"0x1\">\r\n    <name>Imperial Pint</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>pi</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Imperial Pint</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>pi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000223\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f3d6c8cd-24d8-4ede-8223-4abcde00f439}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0056826124999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000161\" kind=\"conversion_based_unit\" guid=\"{fea1d654-2b21-4e25-8cdd-93b6d774a558}\" relid=\"0xe6\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cm^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cm^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000224\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d5790409-e920-4523-9146-3f5741bdb8d5}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000162\" kind=\"conversion_based_unit\" guid=\"{0858b979-3843-4ff4-8b37-b6a411f7e82b}\" relid=\"0xe5\" childrelidcntr=\"0x1\">\r\n    <name>Planck Volume</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Volume</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000225\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e2b70685-9572-4f80-abea-58fd4e3976b0}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.2241899999999998e-105</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000163\" kind=\"conversion_based_unit\" guid=\"{c7917d73-ade5-4292-83f0-e08f2fb3efb6}\" relid=\"0xe4\" childrelidcntr=\"0x1\">\r\n    <name>Board Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Bf</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Board Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Bf</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000226\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2f9d35e1-4a5e-472c-a1c0-0d3df8f957bf}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0023600000000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000164\" kind=\"conversion_based_unit\" guid=\"{e14bdd7c-917d-4a22-8392-6a642acdad55}\" relid=\"0xe3\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>in^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>in^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000227\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5c39be69-18ae-49df-ae2d-2ee3f666adb9}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.6387063999999999e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000165\" kind=\"conversion_based_unit\" guid=\"{6caea2fb-20fd-4b4d-8e85-875a809df841}\" relid=\"0xe2\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Mile</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mi^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Mile</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mi^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000228\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0ff4561c-3803-4496-89de-e5a2e097d61c}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4168181830</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000166\" kind=\"conversion_based_unit\" guid=\"{c9186db3-401a-4e2d-b94a-c4d87f44d155}\" relid=\"0xe1\" childrelidcntr=\"0x1\">\r\n    <name>Stere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>st</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Stere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>st</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000229\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{96fabb56-cf6e-4948-adac-7adaa7f39a85}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000167\" kind=\"conversion_based_unit\" guid=\"{4c6477fa-1cad-44b2-955f-2cf3df0b4e64}\" relid=\"0xe0\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000022a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{15fee4f2-5dc7-437c-853e-e28b9345c73c}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000168\" kind=\"conversion_based_unit\" guid=\"{0b1fe3f8-bc18-4895-89c1-3238128933e3}\" relid=\"0xdf\" childrelidcntr=\"0x1\">\r\n    <name>Tablespoon</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>tbsp</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tablespoon</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>tbsp</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000022b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c9bc7984-b08d-4cb0-b75a-0b5aa8521c85}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00014786765599999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000169\" kind=\"conversion_based_unit\" guid=\"{daea891c-b1a2-4af7-9501-eae8fb15c4a6}\" relid=\"0xde\" childrelidcntr=\"0x1\">\r\n    <name>Register Ton</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>RT</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Register Ton</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>RT</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000022c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ffe680b8-6b35-4692-b123-a588eebffdb0}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.8316846592</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000016a\" kind=\"conversion_based_unit\" guid=\"{c6c9be88-d9ce-4ac4-8812-8f3fb6a09a1c}\" relid=\"0xdd\" childrelidcntr=\"0x1\">\r\n    <name>Teaspoon</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>tsp</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Teaspoon</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>tsp</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000022d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{253cb134-dc8d-4982-90b9-521cd508f1b6}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.9289218699999999e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000016b\" kind=\"conversion_based_unit\" guid=\"{b6197dd9-66e2-41ec-ab4c-654ea6283b8e}\" relid=\"0xdc\" childrelidcntr=\"0x1\">\r\n    <name>Acre Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ac-ft</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Acre Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ac-ft</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000022e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0cd11d37-d12c-4aa8-9f43-24c7c396adde}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1233.4818375475202</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000016c\" kind=\"conversion_based_unit\" guid=\"{8f8a9f68-ada7-48f9-b846-191fc565a952}\" relid=\"0xdb\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000022f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{19d071c0-a3d1-42ff-8c1e-997114ca5d44}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.028316846592000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000016d\" kind=\"conversion_based_unit\" guid=\"{0227e858-753e-4865-a98a-db6ccd34ed47}\" relid=\"0xda\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>yd^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>yd^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000230\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e7e258cd-5492-4a86-908b-68c6791b909b}\" relid=\"0x1\" referred=\"id-0065-0000006a\">\r\n        <name>Stere</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.76455485798400002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000016e\" kind=\"conversion_based_unit\" guid=\"{99290c75-605a-4572-ba1d-c691e42e7b61}\" relid=\"0xd9\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Square Meter Quartic Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W m^-2 K^-4</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Square Meter Quartic Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W m^-2 K^-4</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000231\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ccdb0f72-64fa-41e4-855e-1cfe43858ed6}\" relid=\"0x1\" referred=\"id-0065-0000006b\">\r\n        <name>Watt per Square Meter Quartic Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000016f\" kind=\"conversion_based_unit\" guid=\"{97c46715-96c3-49c6-9dd7-c43da376c85c}\" relid=\"0xd8\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^3 mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3 mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000232\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{af388c43-76bf-4c80-87c6-d4c7950e4793}\" relid=\"0x1\" referred=\"id-0065-0000006c\">\r\n        <name>Cubic Meter per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000170\" kind=\"conversion_based_unit\" guid=\"{96a80d40-ac65-4b61-ad8e-afacdd79b431}\" relid=\"0xd7\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Kilometer per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Kilometer per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>km^3/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000233\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c71212dc-3488-4fc7-a673-d3301f8320c0}\" relid=\"0x1\" referred=\"id-0065-0000006d\">\r\n        <name>Cubic Meter per Second Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000171\" kind=\"conversion_based_unit\" guid=\"{2450053e-7ad8-453b-8010-d2136b89139f}\" relid=\"0xd6\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Meter per Second Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Meter per Second Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^3/s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000234\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f0127b15-cee0-403e-ab18-354196f84924}\" relid=\"0x1\" referred=\"id-0065-0000006d\">\r\n        <name>Cubic Meter per Second Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000172\" kind=\"conversion_based_unit\" guid=\"{376ffa33-701b-4789-ac1b-acd6de3b9d10}\" relid=\"0xd5\" childrelidcntr=\"0x1\">\r\n    <name>Joule Second per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J s mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule Second per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J s mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000235\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7ca54469-1a2e-41b4-b212-f50aa3ad9823}\" relid=\"0x1\" referred=\"id-0065-0000006e\">\r\n        <name>Joule Second per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000173\" kind=\"conversion_based_unit\" guid=\"{7c487bb0-51d1-464a-9dd2-f1441e368b50}\" relid=\"0xd4\" childrelidcntr=\"0x1\">\r\n    <name>Hour Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>hr-ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hour Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>hr-ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000236\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{19d275fe-9d3b-43cb-bae1-54b8bc54a6c2}\" relid=\"0x1\" referred=\"id-0065-0000006f\">\r\n        <name>AreaTime</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>334.45094399999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000174\" kind=\"conversion_based_unit\" guid=\"{e4be8c92-2220-470a-b7cf-955abecfaa89}\" relid=\"0xd3\" childrelidcntr=\"0x1\">\r\n    <name>Square Centimeter Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Centimeter Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cm^2-s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000237\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ba42f5d3-cdb6-47e4-a9a6-c55134f22141}\" relid=\"0x1\" referred=\"id-0065-0000006f\">\r\n        <name>AreaTime</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000175\" kind=\"conversion_based_unit\" guid=\"{108ba065-ac86-4933-b60e-0366eace6cdf}\" relid=\"0xd2\" childrelidcntr=\"0x1\">\r\n    <name>Square Centimeter Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cm^2-m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Centimeter Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cm^2-m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000238\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6c4479a5-5720-4437-b091-587965e7a2dc}\" relid=\"0x1\" referred=\"id-0065-0000006f\">\r\n        <name>AreaTime</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0060000000000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000176\" kind=\"conversion_based_unit\" guid=\"{628bc38f-b480-4843-a4c7-54c9bffcec44}\" relid=\"0xd1\" childrelidcntr=\"0x1\">\r\n    <name>Second Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s-ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Second Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s-ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000239\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b353966c-bf16-4176-916e-ad0bf601186b}\" relid=\"0x1\" referred=\"id-0065-0000006f\">\r\n        <name>AreaTime</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.092903040000000006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000177\" kind=\"conversion_based_unit\" guid=\"{ece5f8b7-8959-4861-b721-c9d6999c5ae1}\" relid=\"0xd0\" childrelidcntr=\"0x1\">\r\n    <name>Electron Volt per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>eV T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Electron Volt per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>eV T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000023a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e83fb2f1-55df-4d64-93c3-3db8109a1453}\" relid=\"0x1\" referred=\"id-0065-00000071\">\r\n        <name>Joule per Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.6021765313999999e-019</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000178\" kind=\"conversion_based_unit\" guid=\"{37abe31b-5bcd-4175-92cb-2d9c442c5172}\" relid=\"0xcf\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000023b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6dac05de-94d2-4934-83c2-ea228d0c1074}\" relid=\"0x1\" referred=\"id-0065-00000071\">\r\n        <name>Joule per Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000179\" kind=\"conversion_based_unit\" guid=\"{67857054-daee-4e0b-b83b-f9abda182897}\" relid=\"0xce\" childrelidcntr=\"0x1\">\r\n    <name>Katal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kat</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Katal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kat</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000023c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9b5475d4-e15b-43ed-978f-a88f347345d3}\" relid=\"0x1\" referred=\"id-0065-00000072\">\r\n        <name>Katal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000017a\" kind=\"conversion_based_unit\" guid=\"{34aad360-bd6d-429e-91ca-f9c62bf757f3}\" relid=\"0xcd\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2 s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2 s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000023d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a6b45bfd-80e2-48c6-82aa-f1e5a4db98e6}\" relid=\"0x1\" referred=\"id-0065-00000073\">\r\n        <name>Square Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000017b\" kind=\"conversion_based_unit\" guid=\"{d52b6d08-de4a-4b34-a801-f2dbe61d3c67}\" relid=\"0xcc\" childrelidcntr=\"0x1\">\r\n    <name>Abvolt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abV</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abvolt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abV</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000023e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{03b38675-3a0c-437d-b1e8-c047a492ab9e}\" relid=\"0x1\" referred=\"id-0065-00000074\">\r\n        <name>Volt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000017c\" kind=\"conversion_based_unit\" guid=\"{6dd34c5c-4f40-4a8a-9f28-4fbb3c124b62}\" relid=\"0xcb\" childrelidcntr=\"0x1\">\r\n    <name>Volt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>V</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>V</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000023f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a2969bfd-60b3-4057-83ea-a9fa4a0abe73}\" relid=\"0x1\" referred=\"id-0065-00000074\">\r\n        <name>Volt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000017d\" kind=\"conversion_based_unit\" guid=\"{6a291e26-2bfb-473a-9bfe-573ebdff06d4}\" relid=\"0xca\" childrelidcntr=\"0x1\">\r\n    <name>Planck Volt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Volt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000240\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a4f50988-5018-4f62-b04d-a1834e2b0b60}\" relid=\"0x1\" referred=\"id-0065-00000074\">\r\n        <name>Volt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.04295e+027</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000017e\" kind=\"conversion_based_unit\" guid=\"{6b3e9d71-d324-47de-9b14-393f3756c5ce}\" relid=\"0xc9\" childrelidcntr=\"0x1\">\r\n    <name>Statvolt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statV</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statvolt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statV</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000241\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4746eacd-6ab5-49bf-87ee-f04c4fb72eb4}\" relid=\"0x1\" referred=\"id-0065-00000074\">\r\n        <name>Volt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>299.79245800000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000017f\" kind=\"conversion_based_unit\" guid=\"{ffd71c01-29e6-438d-a31b-7c219afc0f52}\" relid=\"0xc8\" childrelidcntr=\"0x1\">\r\n    <name>Candela per Square Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cd/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Candela per Square Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cd/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000242\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1aedc60f-9453-4ba7-b8cf-fc335ea14f4d}\" relid=\"0x1\" referred=\"id-0065-00000075\">\r\n        <name>Candela per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1550.0031000062002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000180\" kind=\"conversion_based_unit\" guid=\"{e04e6a1a-c7e4-4c40-aa0a-bf8179d82f66}\" relid=\"0xc7\" childrelidcntr=\"0x1\">\r\n    <name>Candela per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cd/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Candela per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cd/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000243\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d9680258-147f-4f0b-a6e3-24efc51883af}\" relid=\"0x1\" referred=\"id-0065-00000075\">\r\n        <name>Candela per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000181\" kind=\"conversion_based_unit\" guid=\"{1ddd29ce-c29b-4005-8b21-0e66a7fa54ee}\" relid=\"0xc6\" childrelidcntr=\"0x1\">\r\n    <name>Foot Lambert</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft-L</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot Lambert</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft-L</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000244\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ef593f51-3a4f-4912-ae08-a2e1a69434c9}\" relid=\"0x1\" referred=\"id-0065-00000075\">\r\n        <name>Candela per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.4262590999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000182\" kind=\"conversion_based_unit\" guid=\"{a5be6596-821b-423a-bb34-80eacf80926f}\" relid=\"0xc5\" childrelidcntr=\"0x1\">\r\n    <name>Lambert</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>L</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lambert</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>L</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000245\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1e148409-8e5a-41e4-9d06-8a46a21dc4f0}\" relid=\"0x1\" referred=\"id-0065-00000075\">\r\n        <name>Candela per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3183.0988600000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000183\" kind=\"conversion_based_unit\" guid=\"{6f603cb3-eaf7-4a14-a0f2-423fbed04d9d}\" relid=\"0xc4\" childrelidcntr=\"0x1\">\r\n    <name>Stilb</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>sb</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Stilb</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>sb</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000246\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6dfdb308-8475-4179-8d7b-6da182734ad3}\" relid=\"0x1\" referred=\"id-0065-00000075\">\r\n        <name>Candela per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000184\" kind=\"conversion_based_unit\" guid=\"{f9da5de3-15ba-4610-81b4-5adf7ead4a79}\" relid=\"0xc3\" childrelidcntr=\"0x1\">\r\n    <name>Kelvin per Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K T^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000247\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{08b0c609-cfdb-4c26-b793-779b11e33f4e}\" relid=\"0x1\" referred=\"id-0065-00000076\">\r\n        <name>Kelvin per Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000185\" kind=\"conversion_based_unit\" guid=\"{1a2d1f74-57b2-4624-88bd-f2bfb59d5fdb}\" relid=\"0xc2\" childrelidcntr=\"0x1\">\r\n    <name>Lumen per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lumen per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000248\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6cc8a42f-6f9e-482d-9d10-5912c56effc8}\" relid=\"0x1\" referred=\"id-0065-00000077\">\r\n        <name>Lumen per Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000186\" kind=\"conversion_based_unit\" guid=\"{abc422fa-1aa2-495d-9d5e-cdd34b5a6dbc}\" relid=\"0xc1\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Cubic Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/(m^3 K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Cubic Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(m^3 K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000249\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{898be6a0-726b-4915-8b55-715f0d328186}\" relid=\"0x1\" referred=\"id-0065-00000079\">\r\n        <name>Joule per Cubic Meter Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000187\" kind=\"conversion_based_unit\" guid=\"{6efb9242-b64d-4b3a-b851-36c11fa49625}\" relid=\"0xc0\" childrelidcntr=\"0x1\">\r\n    <name>Meter Kelvin per Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K-m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter Kelvin per Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K-m/W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000024a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6ccf54e2-4837-4e0b-9025-830998a4e1f5}\" relid=\"0x1\" referred=\"id-0065-0000007a\">\r\n        <name>Meter Kelvin per Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000188\" kind=\"conversion_based_unit\" guid=\"{580a088b-bcd4-4055-826c-05232b2f0037}\" relid=\"0xbf\" childrelidcntr=\"0x1\">\r\n    <name>Square Foot per BTU Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft^2/(Btu-in)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Foot per BTU Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft^2/(Btu-in)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000024b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a575a001-80a0-4435-b675-e038b25a4627}\" relid=\"0x1\" referred=\"id-0065-0000007a\">\r\n        <name>Meter Kelvin per Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0034667358900000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000189\" kind=\"conversion_based_unit\" guid=\"{9ebc1f4c-a259-4292-aea7-f4ebef9e0ce4}\" relid=\"0xbe\" childrelidcntr=\"0x1\">\r\n    <name>Second Time Squared</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Second Time Squared</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000024c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6ff4d698-bfe3-4c02-953b-03f3d586ae9a}\" relid=\"0x1\" referred=\"id-0065-0000007b\">\r\n        <name>Second Time Squared</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000018a\" kind=\"conversion_based_unit\" guid=\"{0bff991f-5b75-4963-a560-75752c6dea0e}\" relid=\"0xbd\" childrelidcntr=\"0x1\">\r\n    <name>Per Meter Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Meter Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000024d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f86c4fd2-77c0-4d42-9877-acb836022bc4}\" relid=\"0x1\" referred=\"id-0065-0000007c\">\r\n        <name>Per Meter Unit</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000018b\" kind=\"conversion_based_unit\" guid=\"{c414c3aa-ff0b-4a2c-bf27-792e883f56b3}\" relid=\"0xbc\" childrelidcntr=\"0x1\">\r\n    <name>Kilopascal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>KPa</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilopascal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>KPa</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000024e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{fdc7b02d-d28c-4eb1-bf68-55ef03411fe2}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000018c\" kind=\"conversion_based_unit\" guid=\"{7dbff804-db0c-437b-865c-4def4ea996d0}\" relid=\"0xbb\" childrelidcntr=\"0x1\">\r\n    <name>Pound Force per Square Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>psi</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Force per Square Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>psi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000024f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ee530e60-f973-4db9-81d1-cab9f68ec2c7}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6894.7578899999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000018d\" kind=\"conversion_based_unit\" guid=\"{e00ffd55-a3fa-4cea-9c63-0b087f765915}\" relid=\"0xba\" childrelidcntr=\"0x1\">\r\n    <name>Poundal per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>pdl/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Poundal per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>pdl/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000250\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{453b9831-2efa-4390-bb5f-68d234663df9}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.4881644300000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000018e\" kind=\"conversion_based_unit\" guid=\"{91ed4d29-d541-4aaf-8089-c8799eccf575}\" relid=\"0xb9\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram Force per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kgf/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Force per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kgf/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000251\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{414c6ed3-71af-4d16-b61c-5cbc6d2c11ab}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>98066.5</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000018f\" kind=\"conversion_based_unit\" guid=\"{7f7290ba-fe4d-46eb-8b68-d7084e844927}\" relid=\"0xb8\" childrelidcntr=\"0x1\">\r\n    <name>Technical Atmosphere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>at</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Technical Atmosphere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>at</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000252\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5b55c5ab-d7a0-42dc-b027-9ea2b5fb0f25}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>98066.5</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000190\" kind=\"conversion_based_unit\" guid=\"{0910a841-dcec-4644-bda8-df18f2fa1b17}\" relid=\"0xb7\" childrelidcntr=\"0x1\">\r\n    <name>Standard Atmosphere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>atm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Standard Atmosphere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>atm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000253\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d5add08b-fbd9-449d-8d6e-773d14fd11da}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>101325</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000191\" kind=\"conversion_based_unit\" guid=\"{da5ba6de-e3b5-4e6d-9f62-6bca5c874f4b}\" relid=\"0xb6\" childrelidcntr=\"0x1\">\r\n    <name>Centimeter of Water</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cmH2O</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Centimeter of Water</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cmH2O</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000254\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cedae9df-a1c6-4c38-bd6d-d7a634a7c5c9}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>98.063001600000007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000192\" kind=\"conversion_based_unit\" guid=\"{c6ffd632-28d5-40d0-a9f0-66b1b00ac5ba}\" relid=\"0xb5\" childrelidcntr=\"0x1\">\r\n    <name>Bar</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>bar</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Bar</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>bar</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000255\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{2337fa33-68ca-4b36-8ce5-cf3d4d908349}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>100000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000193\" kind=\"conversion_based_unit\" guid=\"{8baff1da-7438-40d6-b11d-bd764c546565}\" relid=\"0xb4\" childrelidcntr=\"0x1\">\r\n    <name>Inch of Mercury</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>inHg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Inch of Mercury</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>inHg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000256\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{325425fd-fe7a-4774-af48-749eeaca5737}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3386.3890000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000194\" kind=\"conversion_based_unit\" guid=\"{20d485e4-b010-49b1-a09c-39399140d3e8}\" relid=\"0xb3\" childrelidcntr=\"0x1\">\r\n    <name>Pascal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Pa</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pascal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pa</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000257\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d8ce08b4-33c8-49aa-bb5a-8ab41babb4ec}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000195\" kind=\"conversion_based_unit\" guid=\"{60e9325c-e82d-4617-bcb0-efae9e6a365c}\" relid=\"0xb2\" childrelidcntr=\"0x1\">\r\n    <name>Pound Force per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lbf/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound Force per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbf/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000258\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c526aab1-5cdb-40cb-ac76-0f55e0f5673c}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>47.880263100000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000196\" kind=\"conversion_based_unit\" guid=\"{39cd6cb5-4cd9-4a39-8657-03d8025aea70}\" relid=\"0xb1\" childrelidcntr=\"0x1\">\r\n    <name>Inch of Water</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>inAq</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Inch of Water</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>inAq</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000259\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e8bcaa12-9871-4fd2-96a0-afbbcabb034b}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>249.08002400000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000197\" kind=\"conversion_based_unit\" guid=\"{fe7b3e4c-1851-47ac-8b37-cd71e6fca4f5}\" relid=\"0xb0\" childrelidcntr=\"0x1\">\r\n    <name>Millibar</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mbar</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Millibar</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mbar</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000025a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f2dfbe97-fa25-4dd3-aba2-790f94f4d9b1}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>100</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000198\" kind=\"conversion_based_unit\" guid=\"{a2f55155-72d0-4800-8827-6bb6e8f434b4}\" relid=\"0xaf\" childrelidcntr=\"0x1\">\r\n    <name>Millimeter of Mercury</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mmHg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Millimeter of Mercury</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mmHg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000025b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6ad11bef-eded-417c-8080-0acce154fc94}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>86014.280599999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000199\" kind=\"conversion_based_unit\" guid=\"{e1d26a42-df07-412b-9333-ff3872fdbe91}\" relid=\"0xae\" childrelidcntr=\"0x1\">\r\n    <name>MilliTorr</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>utorr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>MilliTorr</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>utorr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000025c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5ccbfc2f-023f-4f76-a0ca-8b2b0a1784a6}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.133322</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000019a\" kind=\"conversion_based_unit\" guid=\"{f4614be2-b9ee-4030-a048-f5d2d5f1d68f}\" relid=\"0xad\" childrelidcntr=\"0x1\">\r\n    <name>Planck Pressure</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Pressure</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000025d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{95d567f1-125f-4dcd-bc13-387d022bee23}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.6330899999999999e+113</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000019b\" kind=\"conversion_based_unit\" guid=\"{c46899c7-ee3f-406c-a604-769a172c4b84}\" relid=\"0xac\" childrelidcntr=\"0x1\">\r\n    <name>Dyne per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>dyn/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Dyne per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>dyn/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000025e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{82b337bc-5a18-468c-ab06-e145d1aa8ae4}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.10000000000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000019c\" kind=\"conversion_based_unit\" guid=\"{86f2e11d-b2d7-4332-8670-6c584c7c4c6c}\" relid=\"0xab\" childrelidcntr=\"0x1\">\r\n    <name>Torr</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>torr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Torr</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>torr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000025f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4be0d433-4f7d-4b12-867f-7e7b757fa495}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>133.322</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000019d\" kind=\"conversion_based_unit\" guid=\"{16d91186-0bdd-4524-b54b-8748c461468a}\" relid=\"0xaa\" childrelidcntr=\"0x1\">\r\n    <name>MicroTorr</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Ã‚Âµtorr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>MicroTorr</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Ã‚Âµtorr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000260\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d66ee38f-80e0-4641-868e-b3fc35431e85}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00013332200000000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000019e\" kind=\"conversion_based_unit\" guid=\"{b60741b9-54e0-4572-a154-6d0ce420e464}\" relid=\"0xa9\" childrelidcntr=\"0x1\">\r\n    <name>Kip per Square Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kip/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kip per Square Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kip/in^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000261\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{563b8a39-ef70-44ea-aa55-af315a2b996f}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6894757.8899999997</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000019f\" kind=\"conversion_based_unit\" guid=\"{013d0cc1-e2df-478a-b68b-4696ff5c47d6}\" relid=\"0xa8\" childrelidcntr=\"0x1\">\r\n    <name>Kilopascal Absolute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>KPaA</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilopascal Absolute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>KPaA</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000262\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0b364866-af36-4887-b0db-e1d1336d49a9}\" relid=\"0x1\" referred=\"id-0065-0000007d\">\r\n        <name>Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a0\" kind=\"conversion_based_unit\" guid=\"{fcb6dbb9-f52a-449d-9f02-76b90db51b2b}\" relid=\"0xa7\" childrelidcntr=\"0x1\">\r\n    <name>Ampere Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A-hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A-hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000263\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{06052168-2d85-408e-ba1a-0bb2ec745e4d}\" relid=\"0x1\" referred=\"id-0065-0000007e\">\r\n        <name>Coulomb</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3600</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a1\" kind=\"conversion_based_unit\" guid=\"{47ca3eb3-b027-4e93-80b6-99f0e7618b5e}\" relid=\"0xa6\" childrelidcntr=\"0x1\">\r\n    <name>Statcoulomb</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statC</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statcoulomb</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statC</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000264\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{834b0473-e1b3-4769-94f1-b8b973d68e58}\" relid=\"0x1\" referred=\"id-0065-0000007e\">\r\n        <name>Coulomb</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.3356400000000002e-010</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a2\" kind=\"conversion_based_unit\" guid=\"{6d8e6128-af7a-48cd-b21a-7445dcbfede5}\" relid=\"0xa5\" childrelidcntr=\"0x1\">\r\n    <name>Planck Charge</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Q_p</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Charge</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Q_p</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000265\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e18ffc38-33eb-41a2-899d-173c0d791272}\" relid=\"0x1\" referred=\"id-0065-0000007e\">\r\n        <name>Coulomb</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.87554587e-018</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a3\" kind=\"conversion_based_unit\" guid=\"{5340b2df-772e-4c18-bc5d-eb9e9eb5d490}\" relid=\"0xa4\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000266\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6190a615-4b59-43e5-b800-4f8c39e78ae9}\" relid=\"0x1\" referred=\"id-0065-0000007e\">\r\n        <name>Coulomb</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a4\" kind=\"conversion_based_unit\" guid=\"{ef310b04-4749-4a86-a38d-39eee95ff25b}\" relid=\"0xa3\" childrelidcntr=\"0x1\">\r\n    <name>Abcoulomb</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abC</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abcoulomb</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abC</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000267\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9da3b311-3a80-4d9a-acde-924bf61d7397}\" relid=\"0x1\" referred=\"id-0065-0000007e\">\r\n        <name>Coulomb</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a5\" kind=\"conversion_based_unit\" guid=\"{80f3b313-e227-4ed6-8081-cc3722593260}\" relid=\"0xa2\" childrelidcntr=\"0x1\">\r\n    <name>Faraday</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>F</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Faraday</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>F</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000268\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8674c198-af0a-4d52-8eba-ab21e71f140c}\" relid=\"0x1\" referred=\"id-0065-0000007e\">\r\n        <name>Coulomb</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>96485.339900000006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a6\" kind=\"conversion_based_unit\" guid=\"{095a69ca-53c4-4808-8f3d-d1290a976066}\" relid=\"0xa1\" childrelidcntr=\"0x1\">\r\n    <name>Quartic Coulomb Meter per Cubic Energy</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C^4 m^4 J^-3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Quartic Coulomb Meter per Cubic Energy</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C^4 m^4 J^-3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000269\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8ff45a3d-649f-4eff-bc4a-176d73c2c352}\" relid=\"0x1\" referred=\"id-0065-0000007f\">\r\n        <name>QuarticElectricDipoleMomentPerCubicEnergy</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>1</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a7\" kind=\"conversion_based_unit\" guid=\"{26c031b4-eb2a-468c-9774-140f50421634}\" relid=\"0xa0\" childrelidcntr=\"0x1\">\r\n    <name>Abtesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abtesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abT</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000026a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{90b06963-2c22-4108-89e3-3aa4f13dac20}\" relid=\"0x1\" referred=\"id-0065-00000080\">\r\n        <name>Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a8\" kind=\"conversion_based_unit\" guid=\"{5bf35e9d-5a4b-4f79-9ebb-96107de5fa36}\" relid=\"0x9f\" childrelidcntr=\"0x1\">\r\n    <name>Gauss</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>G</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gauss</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>G</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000026b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a98815b6-8939-4c68-a837-d6bc3c52e41c}\" relid=\"0x1\" referred=\"id-0065-00000080\">\r\n        <name>Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001a9\" kind=\"conversion_based_unit\" guid=\"{18ee383c-f7fa-4fb0-b22f-554ec21a2cde}\" relid=\"0x9e\" childrelidcntr=\"0x1\">\r\n    <name>Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>T</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>T</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000026c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b1015e14-19d3-41f6-aaed-bcd635348ab7}\" relid=\"0x1\" referred=\"id-0065-00000080\">\r\n        <name>Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001aa\" kind=\"conversion_based_unit\" guid=\"{d4d319c6-28b5-47b4-8097-3fb6f1421a22}\" relid=\"0x9d\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2-sr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2-sr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000026d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1e0fbe30-7730-4eca-a134-774395bac3cb}\" relid=\"0x1\" referred=\"id-0065-00000081\">\r\n        <name>Square Meter Steradian</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ab\" kind=\"conversion_based_unit\" guid=\"{4584518c-d04e-4c61-8f40-f66d9d5c8f11}\" relid=\"0x9c\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000026e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f61c0a0a-babc-472a-bfad-868343794da0}\" relid=\"0x1\" referred=\"id-0065-00000082\">\r\n        <name>Coulomb Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ac\" kind=\"conversion_based_unit\" guid=\"{680f2fcf-bc57-49c1-89fd-59a03befab5e}\" relid=\"0x9b\" childrelidcntr=\"0x1\">\r\n    <name>Debye</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>D</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Debye</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>D</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000026f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c7ca26e2-3ed2-4ef7-b772-74127883d5b2}\" relid=\"0x1\" referred=\"id-0065-00000082\">\r\n        <name>Coulomb Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.33564e-030</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ad\" kind=\"conversion_based_unit\" guid=\"{638ac98b-c708-4dfb-9b68-b422eff2e878}\" relid=\"0x9a\" childrelidcntr=\"0x1\">\r\n    <name>Meter Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m-kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m-kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000270\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{101ef8cf-0682-4a9b-b411-44d4a4386988}\" relid=\"0x1\" referred=\"id-0065-00000083\">\r\n        <name>Meter Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ae\" kind=\"conversion_based_unit\" guid=\"{8978222e-9026-4a4f-adf9-d26db72b3a4e}\" relid=\"0x99\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Square Tesla</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J T^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Square Tesla</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J T^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000271\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6f7baa62-beb3-4297-a4cd-f1ac3d56494c}\" relid=\"0x1\" referred=\"id-0065-00000084\">\r\n        <name>Joule per Square Tesla</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001af\" kind=\"conversion_based_unit\" guid=\"{975ce6f9-1fd0-47cc-afb0-131a32cdf781}\" relid=\"0x98\" childrelidcntr=\"0x1\">\r\n    <name>Ampere per Joule</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A/J</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Joule</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A J^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000272\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4158fb1a-bace-464a-9d0a-4948a5b4c232}\" relid=\"0x1\" referred=\"id-0065-00000085\">\r\n        <name>Ampere per Joule</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b0\" kind=\"conversion_based_unit\" guid=\"{ef4b6a43-90d9-492c-b000-b922d43c6802}\" relid=\"0x97\" childrelidcntr=\"0x1\">\r\n    <name>Per Meter Kelvin Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^-1 K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Meter Kelvin Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^-1 K^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000273\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{65146052-688e-4801-91da-ecddbe8322a3}\" relid=\"0x1\" referred=\"id-0065-00000086\">\r\n        <name>Per Meter Kelvin Unit</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b1\" kind=\"conversion_based_unit\" guid=\"{1344a7fe-0696-4d8d-8f3b-479dc02e8634}\" relid=\"0x94\" childrelidcntr=\"0x1\">\r\n    <name>Exbi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Exbi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Ei</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000274\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{73282d29-3049-4c1e-8f1c-8ecb685b4f60}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.5292150460684698e+017</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b2\" kind=\"conversion_based_unit\" guid=\"{7900649e-4c88-48b9-a14b-8056e0e1b1db}\" relid=\"0x91\" childrelidcntr=\"0x1\">\r\n    <name>Kibi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kibi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Ki</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000275\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4c84109f-040f-405c-bf71-92df1e913ef9}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1024</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b3\" kind=\"conversion_based_unit\" guid=\"{bb3ea243-4ecd-4b82-85d0-e4f73f0a9b04}\" relid=\"0x8c\" childrelidcntr=\"0x1\">\r\n    <name>Yotta</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Yotta</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Y</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000276\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1f556532-9465-4bf8-8a30-4364b415a1ac}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999998e+023</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b4\" kind=\"conversion_based_unit\" guid=\"{56b469b4-ec5c-4314-a40c-c857b07e3d5d}\" relid=\"0x8b\" childrelidcntr=\"0x1\">\r\n    <name>Yobi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Yobi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Yi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000277\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{47360352-580d-438e-909b-f488daef3ccd}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.2089258196146292e+024</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b5\" kind=\"conversion_based_unit\" guid=\"{c7708a79-d629-4fc9-9826-01c6aeda82da}\" relid=\"0x8a\" childrelidcntr=\"0x1\">\r\n    <name>Unitless</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>unitless</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Unitless</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>U</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000278\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{57355e21-ded1-4dd5-adc3-bdb9c863f253}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b6\" kind=\"conversion_based_unit\" guid=\"{0dac6ef5-f816-47d4-bc7a-8460e9717cda}\" relid=\"0x82\" childrelidcntr=\"0x1\">\r\n    <name>Gibi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gibi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Gi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000279\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e75e0bef-9deb-44bb-8cda-9d355f28e0be}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1073741824</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b7\" kind=\"conversion_based_unit\" guid=\"{f7230219-3972-4ae0-9406-ec2f978a6570}\" relid=\"0x81\" childrelidcntr=\"0x1\">\r\n    <name>Mebi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mebi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Mi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000027a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{96f37b49-728a-48b7-ba66-b64da55f1d53}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1048576</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b8\" kind=\"conversion_based_unit\" guid=\"{edca1c0e-1e2d-4cc2-b07e-6db5f55ab001}\" relid=\"0x80\" childrelidcntr=\"0x1\">\r\n    <name>Tebi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tebi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Ti</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000027b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8102c86b-0d2c-454f-bb81-fb5fa6b4a9e4}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1099511627776</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001b9\" kind=\"conversion_based_unit\" guid=\"{9924c8a3-bb13-42e2-8969-a4223d832fab}\" relid=\"0x7d\" childrelidcntr=\"0x1\">\r\n    <name>Zebi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Zebi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Zi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000027c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a17d83ac-ceae-4767-9b20-0e5196b77cf5}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.1805916207174113e+021</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ba\" kind=\"conversion_based_unit\" guid=\"{481e7cbc-5e64-4431-b060-2debb67d3466}\" relid=\"0x7a\" childrelidcntr=\"0x1\">\r\n    <name>Pebi</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pebi</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Pi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000027d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{84830d72-0276-48be-86b4-b7cd1bf22821}\" relid=\"0x1\" referred=\"id-0066-000000bc\">\r\n        <name>Unitless</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>125899906842624</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001bb\" kind=\"conversion_based_unit\" guid=\"{26221ae7-f76a-4d58-bf95-df56b5ca9da0}\" relid=\"0x79\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000027e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ec2ebe22-b4f8-4e84-86aa-30c247123c53}\" relid=\"0x1\" referred=\"id-0065-00000088\">\r\n        <name>Coulomb per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001bc\" kind=\"conversion_based_unit\" guid=\"{bcee88f5-8c7e-4e56-a85a-708c204c6a55}\" relid=\"0x78\" childrelidcntr=\"0x1\">\r\n    <name>Statcoulomb per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statC/mol</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statcoulomb per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statC/mol</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000027f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c7fec3fd-d8be-4630-87b3-a949724692c2}\" relid=\"0x1\" referred=\"id-0065-00000088\">\r\n        <name>Coulomb per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.3356400000000002e-010</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001bd\" kind=\"conversion_based_unit\" guid=\"{5e5bdc45-ec9f-469b-99e8-fb186a6be265}\" relid=\"0x77\" childrelidcntr=\"0x1\">\r\n    <name>Candela</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cd</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Candela</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cd</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000280\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7b64a616-8a7f-4a3a-8d64-6dfe1a7b1445}\" relid=\"0x1\" referred=\"id-0066-000000b7\">\r\n        <name>Candela</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001be\" kind=\"conversion_based_unit\" guid=\"{928c8ed3-7258-4fa2-a2af-1ad413b22877}\" relid=\"0x76\" childrelidcntr=\"0x1\">\r\n    <name>Volt per second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>V / sec</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt per second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>V / sec</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000281\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{60751ed7-eb6a-400c-9074-f68a28bc9961}\" relid=\"0x1\" referred=\"id-0065-00000089\">\r\n        <name>Volt per second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001bf\" kind=\"conversion_based_unit\" guid=\"{7cd20b2e-f671-4f01-a090-baf7f9180012}\" relid=\"0x75\" childrelidcntr=\"0x1\">\r\n    <name>Foot Pound Force per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft-lbf/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot Pound Force per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft-lbf/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000282\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6a276f2c-5de4-498f-85ee-56ebcef6eebb}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.022596967799999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c0\" kind=\"conversion_based_unit\" guid=\"{08ef78e8-4529-4644-a814-50913a34e1c4}\" relid=\"0x74\" childrelidcntr=\"0x1\">\r\n    <name>BTU per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Btu/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>BTU per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Btu/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000283\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{419eec2a-0e24-4708-bf6a-9d5cbfd957cd}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.29307106999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c1\" kind=\"conversion_based_unit\" guid=\"{ac2856e5-e2e0-40e0-9f36-2aca896ad026}\" relid=\"0x73\" childrelidcntr=\"0x1\">\r\n    <name>Planck Power</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Power</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000284\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{84937c17-fc14-41bf-b6ed-f24d11c5ee43}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.6283099999999998e+052</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c2\" kind=\"conversion_based_unit\" guid=\"{90909aa0-d643-4079-856e-cbcacdcaf166}\" relid=\"0x72\" childrelidcntr=\"0x1\">\r\n    <name>Horsepower</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>HP</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Horsepower</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>HP</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000285\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d0f3b9d8-a878-4cf2-95af-3fc86ce0cc85}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>745.69989999999996</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c3\" kind=\"conversion_based_unit\" guid=\"{eb73e97b-6ebc-4318-8971-53e4478c445e}\" relid=\"0x71\" childrelidcntr=\"0x1\">\r\n    <name>Kilocalorie per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kcal/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilocalorie per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kcal/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000286\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6154a60c-4637-455f-8f27-651931fde8ab}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>69.733333299999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c4\" kind=\"conversion_based_unit\" guid=\"{f35b6fd1-8135-4cc5-9b69-43df2e579787}\" relid=\"0x70\" childrelidcntr=\"0x1\">\r\n    <name>Foot Pound Force per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft-lbf/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot Pound Force per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft-lbf/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000287\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{53034cf1-173f-4d03-b41f-99185a8dd1c4}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.35581807</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c5\" kind=\"conversion_based_unit\" guid=\"{85186146-64d1-4d30-be17-6f81bb741558}\" relid=\"0x6f\" childrelidcntr=\"0x1\">\r\n    <name>Erg per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>erg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Erg per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>erg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000288\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{69b869d8-aca6-4887-9517-bb02ccfd277d}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c6\" kind=\"conversion_based_unit\" guid=\"{458e1182-7b0b-4d62-ae37-ce355bc9ded8}\" relid=\"0x6e\" childrelidcntr=\"0x1\">\r\n    <name>Watt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000289\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{4a56e57c-062b-493b-8b25-c020e89950eb}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c7\" kind=\"conversion_based_unit\" guid=\"{f5690bca-6de0-4455-8b06-e13a107dabf5}\" relid=\"0x6d\" childrelidcntr=\"0x1\">\r\n    <name>Kilocalorie per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kcal/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilocalorie per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kcal/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000028a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{32bccd73-5ca0-4d2a-a41e-86f870ebb5b4}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4184</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c8\" kind=\"conversion_based_unit\" guid=\"{45fb6477-3897-4f7a-8621-cd7a77044546}\" relid=\"0x6c\" childrelidcntr=\"0x1\">\r\n    <name>Ton of Refrigeration</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>t/fg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ton of Refrigeration</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>t/fg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000028b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f7d148d9-6872-45d7-9da8-c631f7b33da1}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3517</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001c9\" kind=\"conversion_based_unit\" guid=\"{ff904b06-2ce0-4fad-9f61-f79ebbd4b158}\" relid=\"0x6b\" childrelidcntr=\"0x1\">\r\n    <name>BTU per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Btu/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>BTU per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Btu/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000028c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8c0cbb1c-19e1-4620-a8d7-91fd54651aa4}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1055.05585262</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ca\" kind=\"conversion_based_unit\" guid=\"{959b3f61-83f3-44e5-9215-cff405d3ec3a}\" relid=\"0x6a\" childrelidcntr=\"0x1\">\r\n    <name>Kilowatt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kW</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilowatt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kW</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000028d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{57ed0528-9ece-4dbd-acc9-1913ed0322bf}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001cb\" kind=\"conversion_based_unit\" guid=\"{6e0dfdc1-563a-4576-9b59-114f2468d7e9}\" relid=\"0x69\" childrelidcntr=\"0x1\">\r\n    <name>Foot Pound Force per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft-lbf/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot Pound Force per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft-lbf/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000028e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f682a8e3-c396-4869-b8fc-e09aedafe5d9}\" relid=\"0x1\" referred=\"id-0065-0000008a\">\r\n        <name>Watt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0037661612899999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001cc\" kind=\"conversion_based_unit\" guid=\"{83d41f13-3ed0-47d4-8c27-69d7f82f4c04}\" relid=\"0x68\" childrelidcntr=\"0x1\">\r\n    <name>Centimeter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Centimeter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cm/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000028f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6db3fdeb-6a4b-4c1d-9115-f6f220018995}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.01</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001cd\" kind=\"conversion_based_unit\" guid=\"{6d1f1659-5f54-4c2b-9937-b5b0c9f146f9}\" relid=\"0x67\" childrelidcntr=\"0x1\">\r\n    <name>Foot per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000290\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{19c3cb03-1fff-4c89-811e-f709be48f4f1}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0050800000000000003</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ce\" kind=\"conversion_based_unit\" guid=\"{696e3fed-e043-4224-8565-634fa9a046df}\" relid=\"0x66\" childrelidcntr=\"0x1\">\r\n    <name>Inch per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Inch per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000291\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e563b17e-62ed-4fb3-b782-50311dc332d0}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.025399999999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001cf\" kind=\"conversion_based_unit\" guid=\"{81db70eb-c4de-433e-ac9e-8d052e7f2ef7}\" relid=\"0x65\" childrelidcntr=\"0x1\">\r\n    <name>Mile per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mi/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mile per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mi/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000292\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a78b1d59-5a61-47b2-a167-70bb69c70f49}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>26.822399999999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d0\" kind=\"conversion_based_unit\" guid=\"{3c9417a0-4ab9-4f1c-95d3-9e546f730cd1}\" relid=\"0x64\" childrelidcntr=\"0x1\">\r\n    <name>Kilometer per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>km/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilometer per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>km/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000293\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{35ab043e-0626-40f5-bed2-487e803851bd}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.27777777777777779</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d1\" kind=\"conversion_based_unit\" guid=\"{e9baf137-e1b6-4b2d-ab4a-c93abb886bb5}\" relid=\"0x63\" childrelidcntr=\"0x1\">\r\n    <name>Foot per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000294\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9e4c5f93-a86f-4045-a50d-ed4e88fa7fe2}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>8.4666666666666674e-005</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d2\" kind=\"conversion_based_unit\" guid=\"{d6e16482-d646-4df2-ae0d-ffcf8c1a3400}\" relid=\"0x62\" childrelidcntr=\"0x1\">\r\n    <name>Knot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kn</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Knot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kn</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000295\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0317e734-c230-4fde-baa4-7c5d028fa1f7}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.51444444444444448</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d3\" kind=\"conversion_based_unit\" guid=\"{cdc2b9c8-dbba-4f7f-8150-d17806e5132c}\" relid=\"0x61\" childrelidcntr=\"0x1\">\r\n    <name>Foot per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ft/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Foot per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ft/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000296\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0167b5d5-bc6a-4936-8a2f-34625c2381a0}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.30480000000000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d4\" kind=\"conversion_based_unit\" guid=\"{611fc5e7-0759-4d60-8065-1fb18b49ba89}\" relid=\"0x60\" childrelidcntr=\"0x1\">\r\n    <name>Meter per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m min^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000297\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b86d142d-9480-42ad-8a0b-7593d5418698}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.016666666699999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d5\" kind=\"conversion_based_unit\" guid=\"{fbbd0c59-8f2f-4f2a-9001-843ba1d4e248}\" relid=\"0x5f\" childrelidcntr=\"0x1\">\r\n    <name>Kilometer per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>km/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilometer per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>km/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000298\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{db800342-d916-49ce-9226-90ee265dd586}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d6\" kind=\"conversion_based_unit\" guid=\"{6f4401a7-cb01-4d6c-940f-e2a62716e4a3}\" relid=\"0x5e\" childrelidcntr=\"0x1\">\r\n    <name>Mile per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mi/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mile per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mi/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-00000299\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{374f0419-7bcd-4172-8dc4-e3cf4876ad79}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.44703999999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d7\" kind=\"conversion_based_unit\" guid=\"{3e68e50b-79a4-4517-85f1-6507a5ff7ee7}\" relid=\"0x5d\" childrelidcntr=\"0x1\">\r\n    <name>Meter per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m/h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m h^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000029a\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7f5b0452-c937-4e28-86a3-50c5ea97807d}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00027777777799999997</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d8\" kind=\"conversion_based_unit\" guid=\"{ef42ec4e-8e53-4e6b-a0dd-111109323d82}\" relid=\"0x5c\" childrelidcntr=\"0x1\">\r\n    <name>Meter per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m s^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000029b\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6a8d7a08-73b6-4e58-a16f-ac4bfba8bfd1}\" relid=\"0x1\" referred=\"id-0065-0000008b\">\r\n        <name>Meter per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001d9\" kind=\"conversion_based_unit\" guid=\"{a6ad4b90-33c1-46b1-9f13-de8754f57f07}\" relid=\"0x5b\" childrelidcntr=\"0x1\">\r\n    <name>Abvolt Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abV cm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abvolt Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abV cm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000029c\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ff6bdfca-8ebd-4f6d-91db-20dfbad4903b}\" relid=\"0x1\" referred=\"id-0065-0000008c\">\r\n        <name>Volt Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1e-010</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001da\" kind=\"conversion_based_unit\" guid=\"{faf9fe64-3552-4fa0-9278-215553661241}\" relid=\"0x5a\" childrelidcntr=\"0x1\">\r\n    <name>Statvolt Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statV cm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statvolt Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statV cm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000029d\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{21d96a5e-12d2-4f33-b4e0-59c385e9f243}\" relid=\"0x1\" referred=\"id-0065-0000008c\">\r\n        <name>Volt Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2.9979245799999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001db\" kind=\"conversion_based_unit\" guid=\"{187db50b-5ee3-4a53-b186-395e02fed79c}\" relid=\"0x59\" childrelidcntr=\"0x1\">\r\n    <name>Volt Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m V</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Volt Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m V</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000029e\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3393e5fe-24c0-477a-a227-26c3d6275247}\" relid=\"0x1\" referred=\"id-0065-0000008c\">\r\n        <name>Volt Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001dc\" kind=\"conversion_based_unit\" guid=\"{deb0d78d-0162-4db0-b088-41903d189a81}\" relid=\"0x58\" childrelidcntr=\"0x1\">\r\n    <name>Ampere per Degree</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A/deg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Degree</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A/deg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-0000029f\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d4c8b0ad-823d-42bf-918f-2d730c7c3c65}\" relid=\"0x1\" referred=\"id-0065-0000008d\">\r\n        <name>Ampere per Radian</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>57.295779500000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001dd\" kind=\"conversion_based_unit\" guid=\"{06abcaae-d214-4881-baca-b796a4b71058}\" relid=\"0x57\" childrelidcntr=\"0x1\">\r\n    <name>Ampere per Radian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere per Radian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A/rad</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e9c4add6-5e49-4b63-ac7e-00f7d3a12c06}\" relid=\"0x1\" referred=\"id-0065-0000008d\">\r\n        <name>Ampere per Radian</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001de\" kind=\"conversion_based_unit\" guid=\"{f378454f-d30f-4469-ba89-b312a0246195}\" relid=\"0x56\" childrelidcntr=\"0x1\">\r\n    <name>Degree Fahrenheit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>degF</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree Fahrenheit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>degF</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0387f56a-9f0f-4327-b1fb-2bc363340e97}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.55555555555555558</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>255.37037037037038</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001df\" kind=\"conversion_based_unit\" guid=\"{7cc5dfb3-7ec2-4ce2-9836-17e7e14ccb15}\" relid=\"0x55\" childrelidcntr=\"0x1\">\r\n    <name>Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3fb0e32d-413a-46d9-8052-904ba28b08e5}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e0\" kind=\"conversion_based_unit\" guid=\"{5dc182d1-1d40-400d-9905-795796974e07}\" relid=\"0x54\" childrelidcntr=\"0x1\">\r\n    <name>Degree Rankine</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>degR</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree Rankine</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>degR</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6d77d963-b985-44dc-851f-b6132597089e}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.55555555555555558</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e1\" kind=\"conversion_based_unit\" guid=\"{64acd0d5-97d8-4a15-9dc5-86b9e3a3fdb5}\" relid=\"0x53\" childrelidcntr=\"0x1\">\r\n    <name>Degree Celsius</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>degC</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Degree Celsius</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>degC</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c5a45909-e2e2-4b89-bd88-a0eaf51407a4}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>273.14999999999998</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e2\" kind=\"conversion_based_unit\" guid=\"{b28c6a22-48fb-4e07-88d2-43b26a3b6a70}\" relid=\"0x52\" childrelidcntr=\"0x1\">\r\n    <name>Planck Temperature</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Temperature</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ÃŽËœ_P</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{a90e4c66-18f9-40d3-aef1-eedc3bce588c}\" relid=\"0x1\" referred=\"id-0066-000000bb\">\r\n        <name>Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.416785e+032</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e3\" kind=\"conversion_based_unit\" guid=\"{22b0faed-fa81-4e8d-8601-799769ca4896}\" relid=\"0x51\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{743faa79-3727-4632-98e1-b6fe87a931a2}\" relid=\"0x1\" referred=\"id-0065-0000008e\">\r\n        <name>Square Meter per Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e4\" kind=\"conversion_based_unit\" guid=\"{009331ef-0f7d-4560-965d-d211e4b23458}\" relid=\"0x50\" childrelidcntr=\"0x1\">\r\n    <name>Hertz per Volt</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Hz V^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Hertz per Volt</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Hz V^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6ee87142-8377-406b-93d2-86273833768c}\" relid=\"0x1\" referred=\"id-0065-0000008f\">\r\n        <name>Hertz per Volt</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e5\" kind=\"conversion_based_unit\" guid=\"{1d6d6ec5-9a1b-4370-b4e5-38e078fa890a}\" relid=\"0x4f\" childrelidcntr=\"0x1\">\r\n    <name>Abvolt Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abvolt Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abV-s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1e240bf3-4955-4b21-a984-5605ca9318ba}\" relid=\"0x1\" referred=\"id-0065-00000090\">\r\n        <name>Weber</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e6\" kind=\"conversion_based_unit\" guid=\"{6d346a3f-c6c5-446f-8abe-df6c90aabcac}\" relid=\"0x4e\" childrelidcntr=\"0x1\">\r\n    <name>Maxwell</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Mx</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Maxwell</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Mx</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002a9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0ca31e14-4b41-422e-80d8-1a184b23d2c3}\" relid=\"0x1\" referred=\"id-0065-00000090\">\r\n        <name>Weber</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1e-008</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e7\" kind=\"conversion_based_unit\" guid=\"{494c5de9-87f9-493d-98db-a076d2d2ab69}\" relid=\"0x4d\" childrelidcntr=\"0x1\">\r\n    <name>Unit Pole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>U/nWb</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Unit Pole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>U/nWb</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002aa\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{573efeea-902c-4406-a700-19162c0e8616}\" relid=\"0x1\" referred=\"id-0065-00000090\">\r\n        <name>Weber</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.256637e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e8\" kind=\"conversion_based_unit\" guid=\"{49c6037c-b604-4e2f-8635-0f9d7a764cdd}\" relid=\"0x4c\" childrelidcntr=\"0x1\">\r\n    <name>Weber</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Wb</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Weber</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Wb</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ab\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3ffe1752-7a7e-4a40-bb44-d9f9ea6bf580}\" relid=\"0x1\" referred=\"id-0065-00000090\">\r\n        <name>Weber</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001e9\" kind=\"conversion_based_unit\" guid=\"{662a89e0-14b7-43e4-b707-414e5fff0404}\" relid=\"0x4b\" childrelidcntr=\"0x1\">\r\n    <name>Watt per Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W/(m*K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt per Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W/(m*K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ac\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{14056251-a9d8-4865-ab3f-2b6cc81db8ac}\" relid=\"0x1\" referred=\"id-0065-00000091\">\r\n        <name>Watt per Meter Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ea\" kind=\"conversion_based_unit\" guid=\"{a51fb9eb-0f8e-4ce8-b4db-8ae4b4931d4a}\" relid=\"0x4a\" childrelidcntr=\"0x1\">\r\n    <name>Per Square Giga Electron Volt Unit</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>GeV^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Per Square Giga Electron Volt Unit</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>GeV^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ad\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ceb9a417-ddbf-4a5a-973d-3596a2663c9f}\" relid=\"0x1\" referred=\"id-0065-00000092\">\r\n        <name>InverseSquareEnergy</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.8956440499999998e+019</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001eb\" kind=\"conversion_based_unit\" guid=\"{6e196ebc-a7fa-4adc-933c-b290ab18dd3c}\" relid=\"0x49\" childrelidcntr=\"0x1\">\r\n    <name>Cubic Coulomb Meter per Square Joule</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C^3 m^3 J^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Cubic Coulomb Meter per Square Joule</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C^3 m^3 J^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ae\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{342aba3f-1041-4073-9b3b-9456d0bd785a}\" relid=\"0x1\" referred=\"id-0065-00000093\">\r\n        <name>Cubic Coulomb Meter per Square Joule</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ec\" kind=\"conversion_based_unit\" guid=\"{b37f9d23-5fbc-4053-862b-5a15370bdc36}\" relid=\"0x48\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb per Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C/m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002af\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{6678c176-bfc1-4779-b035-b90630388c41}\" relid=\"0x1\" referred=\"id-0065-00000094\">\r\n        <name>Coulomb per Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ed\" kind=\"conversion_based_unit\" guid=\"{1202a2d8-b93b-4587-9a70-4bdf1aaa0884}\" relid=\"0x47\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{487f5e7a-e3b0-4239-bea8-287796ce69fb}\" relid=\"0x1\" referred=\"id-0065-00000095\">\r\n        <name>Coulomb Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ee\" kind=\"conversion_based_unit\" guid=\"{9d945064-d238-4ba3-b706-0f2eaf0721c3}\" relid=\"0x46\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{de79aff6-fa75-4d62-b876-5dbc3d0db1c7}\" relid=\"0x1\" referred=\"id-0065-00000096\">\r\n        <name>Joule per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ef\" kind=\"conversion_based_unit\" guid=\"{6c2a0db9-1772-4215-9cc0-f3f22a608766}\" relid=\"0x45\" childrelidcntr=\"0x1\">\r\n    <name>Kilocalorie per Gram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kcal/gm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilocalorie per Gram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kcal/gm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{699472c2-34a0-4fd8-800e-a3e7d6417ae8}\" relid=\"0x1\" referred=\"id-0065-00000096\">\r\n        <name>Joule per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4184000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f0\" kind=\"conversion_based_unit\" guid=\"{3be007a7-3461-4937-87df-091ec1eb1735}\" relid=\"0x44\" childrelidcntr=\"0x1\">\r\n    <name>BTU per Pound</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Btu/lb</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>BTU per Pound</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Btu/lb</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{606a260a-c2d9-4158-8a4b-fd94836dd369}\" relid=\"0x1\" referred=\"id-0065-00000096\">\r\n        <name>Joule per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>2326</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f1\" kind=\"conversion_based_unit\" guid=\"{1e398663-0180-44ab-9c00-108490fa3e3a}\" relid=\"0x43\" childrelidcntr=\"0x1\">\r\n    <name>Erg per Gram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Erg per Gram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8110d3ce-55ba-440c-8b1c-6fefbffa3289}\" relid=\"0x1\" referred=\"id-0065-00000096\">\r\n        <name>Joule per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f2\" kind=\"conversion_based_unit\" guid=\"{0222e206-8906-4600-a5ca-31bcf5c00cc8}\" relid=\"0x42\" childrelidcntr=\"0x1\">\r\n    <name>Planck Resistance</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Resistance</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b566b40f-8391-4cf0-9801-17d74ff82494}\" relid=\"0x1\" referred=\"id-0065-00000097\">\r\n        <name>Ohm</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>29.979245800000001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f3\" kind=\"conversion_based_unit\" guid=\"{587ebe51-e24e-4609-89b6-84b5ace67053}\" relid=\"0x41\" childrelidcntr=\"0x1\">\r\n    <name>Statohm</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statOhm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statohm</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statOhm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f8cdbe3a-f595-4fb3-ad30-032c294e9648}\" relid=\"0x1\" referred=\"id-0065-00000097\">\r\n        <name>Ohm</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>898760000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f4\" kind=\"conversion_based_unit\" guid=\"{d2c7c4ea-bbda-4af2-9f25-8f79b79e2467}\" relid=\"0x40\" childrelidcntr=\"0x1\">\r\n    <name>Abohm</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abOhm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abohm</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abOhm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{779b6233-97da-466e-bca8-b2c00b21678b}\" relid=\"0x1\" referred=\"id-0065-00000097\">\r\n        <name>Ohm</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.0000000000000001e-009</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f5\" kind=\"conversion_based_unit\" guid=\"{56dcfd2b-ef5e-4ac1-8875-ba722b69b756}\" relid=\"0x3f\" childrelidcntr=\"0x1\">\r\n    <name>Ohm</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Ohm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ohm</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ohm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b093503a-3b75-4633-b464-5058d111b00e}\" relid=\"0x1\" referred=\"id-0065-00000097\">\r\n        <name>Ohm</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f6\" kind=\"conversion_based_unit\" guid=\"{d7b45902-e99a-47f0-8903-a27a6e6e0d0c}\" relid=\"0x3e\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg-K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg-K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002b9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{deffa026-eb2d-4902-9f0d-0ca796fbf8fc}\" relid=\"0x1\" referred=\"id-0065-00000098\">\r\n        <name>Kilogram Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f7\" kind=\"conversion_based_unit\" guid=\"{04e6fb3e-81e3-48f1-aa27-400055d9734f}\" relid=\"0x3d\" childrelidcntr=\"0x1\">\r\n    <name>Kelvin per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K / m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K / m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ba\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cd7aa179-9695-4a53-810a-839daf135ab4}\" relid=\"0x1\" referred=\"id-0065-00000099\">\r\n        <name>Kelvin per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>60</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f8\" kind=\"conversion_based_unit\" guid=\"{c231dabb-acf8-489c-b1bb-ee4dd0552b32}\" relid=\"0x3c\" childrelidcntr=\"0x1\">\r\n    <name>Kelvin per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K / s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K / s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002bb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cdc0a034-6d3b-4c8e-9e45-98b8f08ca1d4}\" relid=\"0x1\" referred=\"id-0065-00000099\">\r\n        <name>Kelvin per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001f9\" kind=\"conversion_based_unit\" guid=\"{41b2469d-8834-4f2f-a4bd-9bea60a5aa0d}\" relid=\"0x3b\" childrelidcntr=\"0x1\">\r\n    <name>Kelvin per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K / h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K / h</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002bc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{1cbd464e-fb29-47b6-90ea-c299761717de}\" relid=\"0x1\" referred=\"id-0065-00000099\">\r\n        <name>Kelvin per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3600</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001fa\" kind=\"conversion_based_unit\" guid=\"{8b0e1a0c-345a-43cb-be55-d5c46907463f}\" relid=\"0x3a\" childrelidcntr=\"0x1\">\r\n    <name>Absiemen</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>aS</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Absiemen</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>aS</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002bd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{48beda8b-0473-436e-b05b-a2c50a7edb9a}\" relid=\"0x1\" referred=\"id-0065-0000009a\">\r\n        <name>Siemens</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001fb\" kind=\"conversion_based_unit\" guid=\"{e7aeb82b-ac16-45c9-98a8-c48d5c217294}\" relid=\"0x39\" childrelidcntr=\"0x1\">\r\n    <name>Siemens</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>S</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Siemens</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>S</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002be\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{382558ea-5323-4a8a-8f3e-b287c7063785}\" relid=\"0x1\" referred=\"id-0065-0000009a\">\r\n        <name>Siemens</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001fc\" kind=\"conversion_based_unit\" guid=\"{240c07b0-fe09-4be6-9cfc-051bd3c8fc30}\" relid=\"0x38\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002bf\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8460977d-91a0-48c1-945f-493da2babe8a}\" relid=\"0x1\" referred=\"id-0065-0000009b\">\r\n        <name>Kilogram per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001fd\" kind=\"conversion_based_unit\" guid=\"{b56d887e-8eda-497e-aef5-b79f8f5c6956}\" relid=\"0x37\" childrelidcntr=\"0x1\">\r\n    <name>Slug per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>slug/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Slug per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>slug/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{12bb441e-c38d-48b5-a6cd-8cb82d8b05ac}\" relid=\"0x1\" referred=\"id-0065-0000009b\">\r\n        <name>Kilogram per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>157.08746452215124</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001fe\" kind=\"conversion_based_unit\" guid=\"{a2ff4c43-cc39-469f-bb56-0230f03ff78e}\" relid=\"0x36\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{598eb503-abd9-4749-b0e0-aa9f1a0bf9c7}\" relid=\"0x1\" referred=\"id-0065-0000009b\">\r\n        <name>Kilogram per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>4.8824276363830501</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-000001ff\" kind=\"conversion_based_unit\" guid=\"{739ce71d-925a-44b9-9507-5e98cd373f74}\" relid=\"0x35\" childrelidcntr=\"0x1\">\r\n    <name>Ounce per Square Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>oz/yd^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce per Square Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>oz/yd^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{06cdda8e-a785-4dc5-ae63-721455ce260d}\" relid=\"0x1\" referred=\"id-0065-0000009b\">\r\n        <name>Kilogram per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0339057474748823</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000200\" kind=\"conversion_based_unit\" guid=\"{2911f329-a65a-45e3-877a-5af1a50a385d}\" relid=\"0x34\" childrelidcntr=\"0x1\">\r\n    <name>Ounce per Square Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>oz/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce per Square Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>oz/ft^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{37410654-4050-4f5d-9769-15316abf3057}\" relid=\"0x1\" referred=\"id-0065-0000009b\">\r\n        <name>Kilogram per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.30515172699999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000201\" kind=\"conversion_based_unit\" guid=\"{49dc2f10-1d44-47c2-8e8c-4b0045c2da7e}\" relid=\"0x33\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{fb6162a6-105d-4564-a522-3f859b6c6b51}\" relid=\"0x1\" referred=\"id-0065-0000009c\">\r\n        <name>Kilogram per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000202\" kind=\"conversion_based_unit\" guid=\"{52c20b50-2357-437a-8462-8b4cc3014fc0}\" relid=\"0x32\" childrelidcntr=\"0x1\">\r\n    <name>Slug per Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>slug/s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Slug per Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>slug/s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7771c57a-243f-42ae-93a1-c992f4191c19}\" relid=\"0x1\" referred=\"id-0065-0000009c\">\r\n        <name>Kilogram per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>14.593902999999999</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000203\" kind=\"conversion_based_unit\" guid=\"{e5a20796-440e-4cf3-9854-73de742b3e94}\" relid=\"0x31\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/h</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/h</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{defd909b-9df6-4e4d-bf43-12198a727f0e}\" relid=\"0x1\" referred=\"id-0065-0000009c\">\r\n        <name>Kilogram per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00027777777799999997</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000204\" kind=\"conversion_based_unit\" guid=\"{a3954e77-6288-4422-98ee-6b3437927e3d}\" relid=\"0x30\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7a46d74a-f574-4782-bf56-e854919dbe50}\" relid=\"0x1\" referred=\"id-0065-0000009c\">\r\n        <name>Kilogram per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.00012599788055555556</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000205\" kind=\"conversion_based_unit\" guid=\"{4e7496dd-c72e-4bf1-b917-6411118079b7}\" relid=\"0x2f\" childrelidcntr=\"0x1\">\r\n    <name>Short Ton per Hour</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ton/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Short Ton per Hour</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ton/hr</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9f6122bd-10ad-4efa-99f2-6ecef9904691}\" relid=\"0x1\" referred=\"id-0065-0000009c\">\r\n        <name>Kilogram per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.25199576099999998</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000206\" kind=\"conversion_based_unit\" guid=\"{678d6b85-43ab-4e11-b60f-928d872cf0e9}\" relid=\"0x2e\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Minute</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/min</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Minute</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/min</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002c9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ecdfb745-86a1-4ac4-8040-22d61c537100}\" relid=\"0x1\" referred=\"id-0065-0000009c\">\r\n        <name>Kilogram per Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0075598728333333334</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000207\" kind=\"conversion_based_unit\" guid=\"{1a314310-0c13-43ed-8b1e-c6232b861c2b}\" relid=\"0x2d\" childrelidcntr=\"0x1\">\r\n    <name>Tesla Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s T</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Tesla Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s T</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ca\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0de90ed7-e225-412a-b00d-6ef0e281405d}\" relid=\"0x1\" referred=\"id-0065-0000009d\">\r\n        <name>Tesla Second</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000208\" kind=\"conversion_based_unit\" guid=\"{87b2fee1-c839-490f-a724-6e5a6492c59a}\" relid=\"0x2c\" childrelidcntr=\"0x1\">\r\n    <name>Coulomb per Square Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>C/m^2</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Coulomb per Square Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>C m^-2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002cb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{19543be6-83c0-4342-bd28-3d053c01211f}\" relid=\"0x1\" referred=\"id-0065-0000009e\">\r\n        <name>Coulomb per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000209\" kind=\"conversion_based_unit\" guid=\"{662d9736-f541-4a8d-b05d-3915e00dd9e8}\" relid=\"0x2b\" childrelidcntr=\"0x1\">\r\n    <name>Statcoulomb per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statcoulomb per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statC/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002cc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{32d34de4-67ae-4248-b6a1-32c8b618f454}\" relid=\"0x1\" referred=\"id-0065-0000009e\">\r\n        <name>Coulomb per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>3.3356400000000001e-006</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000020a\" kind=\"conversion_based_unit\" guid=\"{e78207d8-f3b0-480e-a0b3-6336d854de9b}\" relid=\"0x2a\" childrelidcntr=\"0x1\">\r\n    <name>Abcoulomb per Square Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abcoulomb per Square Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abC/cm^2</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002cd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e0d3c0c4-dfcc-4b3c-bdd4-52810876f8fd}\" relid=\"0x1\" referred=\"id-0065-0000009e\">\r\n        <name>Coulomb per Square Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000020b\" kind=\"conversion_based_unit\" guid=\"{20c3a872-5847-4000-bfdb-2b50d25f3e6b}\" relid=\"0x29\" childrelidcntr=\"0x1\">\r\n    <name>Lux</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lx</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lux</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lx</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ce\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{10095408-2411-4b67-b70a-df23c6907422}\" relid=\"0x1\" referred=\"id-0065-0000009f\">\r\n        <name>Lux</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000020c\" kind=\"conversion_based_unit\" guid=\"{f09c4976-c3b5-4f77-b38a-3dd96e5b6e97}\" relid=\"0x28\" childrelidcntr=\"0x1\">\r\n    <name>Phot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ph</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Phot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ph</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002cf\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{8ebc8948-f52f-4ec9-a3e9-9d1905d5d06c}\" relid=\"0x1\" referred=\"id-0065-0000009f\">\r\n        <name>Lux</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>10000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000020d\" kind=\"conversion_based_unit\" guid=\"{3d1ba516-dec3-4358-b25d-62d227397637}\" relid=\"0x27\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ba7923d1-828f-422e-9c74-1aae10515f80}\" relid=\"0x1\" referred=\"id-0065-000000a0\">\r\n        <name>Kilogram per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000020e\" kind=\"conversion_based_unit\" guid=\"{b7720d35-3654-4091-968f-f6c1abe9a242}\" relid=\"0x26\" childrelidcntr=\"0x1\">\r\n    <name>Meter per Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter per Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m/K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5da1d6d0-3ece-4ec8-bead-af916146da45}\" relid=\"0x1\" referred=\"id-0065-000000a1\">\r\n        <name>Meter per Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000020f\" kind=\"conversion_based_unit\" guid=\"{f60326f8-9e3e-4a69-b381-fe00fc758c24}\" relid=\"0x25\" childrelidcntr=\"0x1\">\r\n    <name>Abfarad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abF</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abfarad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abF</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f8b2053a-2600-4dc6-8742-423b83f536d5}\" relid=\"0x1\" referred=\"id-0065-000000a2\">\r\n        <name>Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1000000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000210\" kind=\"conversion_based_unit\" guid=\"{4cff342b-9a38-4ea4-a2ed-700c099de7e7}\" relid=\"0x24\" childrelidcntr=\"0x1\">\r\n    <name>Microfarad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>microF</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Microfarad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>microF</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c99f5f8f-1adc-4aba-affb-681e055fd0d8}\" relid=\"0x1\" referred=\"id-0065-000000a2\">\r\n        <name>Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000211\" kind=\"conversion_based_unit\" guid=\"{bdc78ba5-f72d-4eb1-8a30-8800c0bebdba}\" relid=\"0x23\" childrelidcntr=\"0x1\">\r\n    <name>Picofarad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>pF</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Picofarad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>pF</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{b153dadb-eca0-47b4-aa77-e1c44da385b7}\" relid=\"0x1\" referred=\"id-0065-000000a2\">\r\n        <name>Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999998e-013</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000212\" kind=\"conversion_based_unit\" guid=\"{c1f90284-048f-421c-b9d1-1fc73f1e6832}\" relid=\"0x22\" childrelidcntr=\"0x1\">\r\n    <name>Farad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>F</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Farad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>F</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cba8ffa2-d66c-4d7a-8248-21dd8eb08422}\" relid=\"0x1\" referred=\"id-0065-000000a2\">\r\n        <name>Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000213\" kind=\"conversion_based_unit\" guid=\"{f8ce61b4-1c7d-493c-9b38-5f8491344159}\" relid=\"0x21\" childrelidcntr=\"0x1\">\r\n    <name>Nanofarad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>nF</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Nanofarad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>nF</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9b6e2f0a-fd08-41b7-8cb9-648553c573ba}\" relid=\"0x1\" referred=\"id-0065-000000a2\">\r\n        <name>Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.0000000000000001e-009</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000214\" kind=\"conversion_based_unit\" guid=\"{d92202a8-28ff-494f-b291-77f0fe6b589e}\" relid=\"0x20\" childrelidcntr=\"0x1\">\r\n    <name>Statfarad</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statF</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Statfarad</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statF</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d7c49d4d-d986-49f3-bbc9-328e3f5cf53e}\" relid=\"0x1\" referred=\"id-0065-000000a2\">\r\n        <name>Farad</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.113e-012</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000215\" kind=\"conversion_based_unit\" guid=\"{7a931eaf-c919-4b3e-850d-cb921f89e3ae}\" relid=\"0x1f\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Kilogram Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/(kg-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(kg-K)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d67998f7-e7dc-4719-8f17-7c6147da7c72}\" relid=\"0x1\" referred=\"id-0065-000000a3\">\r\n        <name>Joule per Kilogram Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000216\" kind=\"conversion_based_unit\" guid=\"{39cc619d-2f37-4d07-85b0-e70cbf783103}\" relid=\"0x1e\" childrelidcntr=\"0x1\">\r\n    <name>Gilbert</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Gi</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Gilbert</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Gi</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002d9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{989b775e-5006-44fd-b553-6b1733b15e26}\" relid=\"0x1\" referred=\"id-0065-000000a4\">\r\n        <name>Ampere Turn</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.79577471499999997</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000217\" kind=\"conversion_based_unit\" guid=\"{c04c553c-88a3-45f5-95c2-529be98181ed}\" relid=\"0x1d\" childrelidcntr=\"0x1\">\r\n    <name>Oersted Centimeter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>Oe-cm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Oersted Centimeter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>Oe-cm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002da\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cc70f612-4adc-44fa-a19c-4fa7c4b8a123}\" relid=\"0x1\" referred=\"id-0065-000000a4\">\r\n        <name>Ampere Turn</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.79577471499999997</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000218\" kind=\"conversion_based_unit\" guid=\"{8c8c2d68-2488-4674-b236-1597bda335b1}\" relid=\"0x1c\" childrelidcntr=\"0x1\">\r\n    <name>Ampere Turn</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>At</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere Turn</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>At</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002db\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{fe246681-3e49-4450-89cb-ce394fe983e8}\" relid=\"0x1\" referred=\"id-0065-000000a4\">\r\n        <name>Ampere Turn</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000219\" kind=\"conversion_based_unit\" guid=\"{9a205976-60a2-4dbc-ac08-826a0553e183}\" relid=\"0x1b\" childrelidcntr=\"0x1\">\r\n    <name>Joule Meter per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J m mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule Meter per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J m mol^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002dc\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{e3df38e3-f587-4fea-8b75-ad73b605ae75}\" relid=\"0x1\" referred=\"id-0065-000000a5\">\r\n        <name>Joule Meter per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000021a\" kind=\"conversion_based_unit\" guid=\"{4d2baa6c-23ad-4c48-b1f6-1dae03077f07}\" relid=\"0x1a\" childrelidcntr=\"0x1\">\r\n    <name>Watt Square Meter per Steradian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>W m^2 sr^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Watt Square Meter per Steradian</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>W m^2 sr^-1</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002dd\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{ff7c4f63-8620-4cf6-8daa-d889c2531a53}\" relid=\"0x1\" referred=\"id-0065-000000a6\">\r\n        <name>Watt Square Meter per Steradian</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000021b\" kind=\"conversion_based_unit\" guid=\"{c5ff7db8-aab2-4f9c-aeef-62c1cd9d42f2}\" relid=\"0x19\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lbm/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002de\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9cfac295-9895-4096-ba90-1ebb42099f0e}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.45359237000000002</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000021c\" kind=\"conversion_based_unit\" guid=\"{bb0d8fc6-22c1-411c-88cc-6d7e5efec1af}\" relid=\"0x18\" childrelidcntr=\"0x1\">\r\n    <name>Ounce per Cubic Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>oz/in^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce per Cubic Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>oz/in^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002df\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0b0e7f82-ced3-4271-a04d-325c036fd32d}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1729.99404</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000021d\" kind=\"conversion_based_unit\" guid=\"{8e29b813-404b-4ca5-97c5-0dc7c72aa7be}\" relid=\"0x17\" childrelidcntr=\"0x1\">\r\n    <name>Grain per Gallon</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>gr/gal</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Grain per Gallon</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>gr/gal</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{f4b29d31-f6a2-4c30-bb1c-e7901f7b66b6}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.0142537675</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000021e\" kind=\"conversion_based_unit\" guid=\"{935f898f-3d9d-463d-bb75-73d84302560b}\" relid=\"0x16\" childrelidcntr=\"0x1\">\r\n    <name>Kilogram per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg/m^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{5d693f51-b595-4c5c-8b71-7b67e3cd1936}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000021f\" kind=\"conversion_based_unit\" guid=\"{336f7da9-7b6b-4e78-8eaf-0f8ead0f0707}\" relid=\"0x15\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Cubic Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/ft^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Cubic Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/ft^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{56dfc75d-e249-44c1-a19a-2b83be475270}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>16.018463373960138</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000220\" kind=\"conversion_based_unit\" guid=\"{cbe8db92-80d0-4097-a78c-53b9552b9d01}\" relid=\"0x14\" childrelidcntr=\"0x1\">\r\n    <name>Ounce per Gallon</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>oz/gal</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ounce per Gallon</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>oz/gal</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{374b8799-7233-4b33-99a0-1d5ebd6ea47c}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>6.2360232900000003</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000221\" kind=\"conversion_based_unit\" guid=\"{a77ddfe4-d866-45c4-b851-0d25150b29a9}\" relid=\"0x13\" childrelidcntr=\"0x1\">\r\n    <name>Ton Short per Cubic Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ton/yd</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ton Short per Cubic Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ton/yd</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{17fcbd5e-5c50-4008-ade3-6b19d65c6800}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1186.552842515566</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000222\" kind=\"conversion_based_unit\" guid=\"{f0fbeeb1-3204-43c8-940e-62b8e0b2e7e6}\" relid=\"0x12\" childrelidcntr=\"0x1\">\r\n    <name>Slug per Cubic Foot</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>slug/ft^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Slug per Cubic Foot</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>slug/ft^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{eb5291e2-189c-41da-b3db-a589d120274d}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>515.37882061073242</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000223\" kind=\"conversion_based_unit\" guid=\"{4fda8e07-79e0-4e10-a9e8-4323d659c0e8}\" relid=\"0x11\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Cubic Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/yd^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Cubic Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/yd^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{3a11e526-fab8-4485-a1fc-3a8949520dae}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.5932764212577829</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000224\" kind=\"conversion_based_unit\" guid=\"{6db907df-7dc9-4129-94ec-f8ad8aa1463a}\" relid=\"0x10\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Cubic Inch</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/in^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Cubic Inch</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/in^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e7\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{0c91e8eb-26c8-4f39-8e38-ca93fd23a1d3}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>27679.904710203125</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000225\" kind=\"conversion_based_unit\" guid=\"{b265ccb7-ffb5-4902-bcbe-9acc08571b2a}\" relid=\"0xf\" childrelidcntr=\"0x1\">\r\n    <name>Pound per Gallon</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lb/gal</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Pound per Gallon</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lb/gal</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e8\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{89dfdc56-4331-4187-9bb4-474d64381526}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>99.776372699999996</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000226\" kind=\"conversion_based_unit\" guid=\"{f0b3e6d5-3a8a-4b05-aed6-44fda0a90b0f}\" relid=\"0xe\" childrelidcntr=\"0x1\">\r\n    <name>Ton Long per Cubic Yard</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>ton/yd^3</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ton Long per Cubic Yard</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>ton/yd^3</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002e9\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{bb75b96b-9921-4a94-a98a-e1fc5759cf5b}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1328.9391836174336</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000227\" kind=\"conversion_based_unit\" guid=\"{b19da4bd-471d-4dae-b24a-98b87c67a395}\" relid=\"0xd\" childrelidcntr=\"0x1\">\r\n    <name>Planck Density</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Planck Density</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ea\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{cae9a6d5-a7eb-4b46-89c1-923776a5ce0f}\" relid=\"0x1\" referred=\"id-0065-000000a7\">\r\n        <name>Kilogram per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>5.1550000000000003e+096</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000228\" kind=\"conversion_based_unit\" guid=\"{abded539-e403-4163-8cce-395b12756852}\" relid=\"0xc\" childrelidcntr=\"0x1\">\r\n    <name>Mole Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol-K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol-K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002eb\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{64284153-a371-4d8a-9a01-084e03c4b6e8}\" relid=\"0x1\" referred=\"id-0065-000000a8\">\r\n        <name>Mole Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000229\" kind=\"conversion_based_unit\" guid=\"{2d29e5d8-b5c6-4b99-8181-a010cf8fc6e9}\" relid=\"0xb\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Kilogram Kelvin per Cubic Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram Kelvin per Cubic Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(kg-K-m^3)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ec\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{dc22ba6e-3561-4b96-8d45-489550264aeb}\" relid=\"0x1\" referred=\"id-0065-000000a9\">\r\n        <name>Joule per Kilogram Kelvin per Cubic Meter</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000022a\" kind=\"conversion_based_unit\" guid=\"{7a7427d6-6ef8-410d-9092-ae455362ef03}\" relid=\"0xa\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>J/mol</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/mol</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ed\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c92d701b-f660-4dfe-9298-b84798dbf3cb}\" relid=\"0x1\" referred=\"id-0065-000000aa\">\r\n        <name>Joule per Mole</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000022b\" kind=\"conversion_based_unit\" guid=\"{d6ec75e7-6c41-496f-9a50-b5c6ba79ed06}\" relid=\"0x9\" childrelidcntr=\"0x1\">\r\n    <name>Lumen</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>lm</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Lumen</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>lm</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ee\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{c8677b53-4374-45de-ad5a-019b142208f3}\" relid=\"0x1\" referred=\"id-0065-000000ab\">\r\n        <name>Lumen</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000022c\" kind=\"conversion_based_unit\" guid=\"{8d42547c-c3ea-4773-b461-66c4c4e5562d}\" relid=\"0x8\" childrelidcntr=\"0x1\">\r\n    <name>Square Meter Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m^2-K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Square Meter Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m^2-K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002ef\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{87e6c915-2f24-4b2f-aafd-30fbf243d6f4}\" relid=\"0x1\" referred=\"id-0065-000000ac\">\r\n        <name>Square Meter Kelvin</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000022d\" kind=\"conversion_based_unit\" guid=\"{1c8e0f68-a6ab-4568-86d7-b96f1ba500e9}\" relid=\"0x7\" childrelidcntr=\"0x1\">\r\n    <name>Henry</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>H</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Henry</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>H</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f0\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{d9dedf88-9840-4efb-b97e-ebb45a1b010e}\" relid=\"0x1\" referred=\"id-0065-000000ad\">\r\n        <name>Henry</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000022e\" kind=\"conversion_based_unit\" guid=\"{b327fdb1-f705-495c-ab52-58f235432ffb}\" relid=\"0x6\" childrelidcntr=\"0x1\">\r\n    <name>Abhenry</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>abH</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Abhenry</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>abH</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f1\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{9f294318-fd52-408e-9b61-1e0eda26dd14}\" relid=\"0x1\" referred=\"id-0065-000000ad\">\r\n        <name>Henry</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1.0000000000000001e-009</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-0000022f\" kind=\"conversion_based_unit\" guid=\"{192dcc44-396a-46b1-9f67-d60053002af1}\" relid=\"0x5\" childrelidcntr=\"0x1\">\r\n    <name>Millihenry</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>milliH</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Millihenry</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>milliH</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f2\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{619b5d65-e587-4e22-9754-4a7f7f6cfef5}\" relid=\"0x1\" referred=\"id-0065-000000ad\">\r\n        <name>Henry</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>0.001</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000230\" kind=\"conversion_based_unit\" guid=\"{a975fd20-f1b1-4b42-b331-8465cca5d3a2}\" relid=\"0x4\" childrelidcntr=\"0x1\">\r\n    <name>Stathenry</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>statH</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Stathenry</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>statH</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f3\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{bb13b846-f7ab-44d3-9137-f3cf11b9f6b2}\" relid=\"0x1\" referred=\"id-0065-000000ad\">\r\n        <name>Henry</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>898760000000</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000231\" kind=\"conversion_based_unit\" guid=\"{d299505d-00e7-4b99-8066-66ffef71b906}\" relid=\"0x3\" childrelidcntr=\"0x1\">\r\n    <name>Microhenry</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>microH</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Microhenry</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>microH</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f4\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{18e2d8f8-cee1-4691-9810-04e5faa250c1}\" relid=\"0x1\" referred=\"id-0065-000000ad\">\r\n        <name>Henry</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>9.9999999999999995e-007</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000232\" kind=\"conversion_based_unit\" guid=\"{f16002ae-f5f9-4108-8394-61f5829f1375}\" relid=\"0x2\" childrelidcntr=\"0x1\">\r\n    <name>Joule per Kilogram Kelvin per Pascal</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Joule per Kilogram Kelvin per Pascal</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>J/(km-K-Pa)</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f5\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{7ac515e7-0b18-418f-9a9d-6fc2b15d8bd5}\" relid=\"0x1\" referred=\"id-0065-000000af\">\r\n        <name>Joule per Kilogram Kelvin per Pascal</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<model id=\"id-0065-00000233\" kind=\"conversion_based_unit\" guid=\"{6dbbfed1-5eda-4a8f-8763-481295491fb1}\" relid=\"0x1\" childrelidcntr=\"0x1\">\r\n    <name>Mole per Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole per Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol/kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <reference id=\"id-0067-000002f6\" kind=\"reference_unit\" role=\"reference_unit\" guid=\"{99ff5664-bc86-4242-bfac-80764ce0cdd4}\" relid=\"0x1\" referred=\"id-0065-000000b0\">\r\n        <name>Mole per Kilogram</name>\r\n        <attribute kind=\"conversion_factor\">\r\n            <value>1</value>\r\n        </attribute>\r\n        <attribute kind=\"conversion_offset\">\r\n            <value>0</value>\r\n        </attribute>\r\n    </reference>\r\n</model>\r\n<atom id=\"id-0066-000000b5\" kind=\"si_unit\" guid=\"{2c98a7ac-604e-45d3-998d-e276a6fe75fc}\" relid=\"0x211\">\r\n    <name>Radian</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>rad</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Plane Angle</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>rad</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>radian</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\" status=\"meta\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000b6\" kind=\"si_unit\" guid=\"{40177786-1c34-4363-8827-dd3535d61839}\" relid=\"0x210\">\r\n    <name>Ampere</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>A</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Ampere</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>A</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>ampere</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000b7\" kind=\"si_unit\" guid=\"{a1aefb0b-39be-497a-b3d5-5c7013611fa1}\" relid=\"0x20f\">\r\n    <name>Candela</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>cd</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Candela</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>cd</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>candela</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000b8\" kind=\"si_unit\" guid=\"{0065ce77-59d9-4741-8a94-3adfdde73e90}\" relid=\"0x20e\">\r\n    <name>Mole</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>mol</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Mole</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>mol</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>mole</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000b9\" kind=\"si_unit\" guid=\"{c21a3d62-ebb9-421b-8c05-0cac969d626a}\" relid=\"0x20d\">\r\n    <name>Second</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>s</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Second</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>s</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>second</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000ba\" kind=\"si_unit\" guid=\"{5b2c7b00-2bf9-424a-a194-1827e3a5c5c6}\" relid=\"0x20c\">\r\n    <name>Meter</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>m</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Meter</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>m</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>metre</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000bb\" kind=\"si_unit\" guid=\"{32b08086-ed72-45ec-8d1f-0fe06e6a8f81}\" relid=\"0x20b\">\r\n    <name>Kelvin</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>K</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>K</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>kelvin</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000bc\" kind=\"si_unit\" guid=\"{e180330b-9101-4e77-9468-fd26da6d4f77}\" relid=\"0x20a\">\r\n    <name>Unitless</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>unitless</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Unitless</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>U</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>radian</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n<atom id=\"id-0066-000000bd\" kind=\"si_unit\" guid=\"{aa4a669f-ceb8-488e-bb6c-2b980289f6b7}\" relid=\"0x209\">\r\n    <name>Kilogram</name>\r\n    <attribute kind=\"Abbreviation\">\r\n        <value>kg</value>\r\n    </attribute>\r\n    <attribute kind=\"FullName\">\r\n        <value>Kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"Symbol\">\r\n        <value>kg</value>\r\n    </attribute>\r\n    <attribute kind=\"URI\" status=\"meta\">\r\n        <value></value>\r\n    </attribute>\r\n    <attribute kind=\"amount_of_substance_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"electric_current_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"length_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"luminous_intensity_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"mass_exponent\">\r\n        <value>1</value>\r\n    </attribute>\r\n    <attribute kind=\"si_unit_name\">\r\n        <value>kilogram</value>\r\n    </attribute>\r\n    <attribute kind=\"thermodynamic_temperature_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n    <attribute kind=\"time_exponent\">\r\n        <value>0</value>\r\n    </attribute>\r\n</atom>\r\n</folder>\r\n</folder>\r\n<regnode name=\"modtime\" isopaque=\"yes\">\r\n    <value>130433642193365789</value>\r\n</regnode>\r\n</folder>\r\n</folder>\r\n</project>\r\n",
    "execute.py.ejs": "import os\nimport sys\nimport shutil\nimport zipfile\nimport logging\nimport subprocess\nimport win32com.client\n\n## Setup a logger\n# Create logger with 'spam_application'.\nlogger = logging.getLogger()\nlogger.setLevel(logging.DEBUG)\n\n# Create file handler which logs even debug messages.\nif not os.path.isdir('log'):\n    os.mkdir('log')\n\nfh = logging.FileHandler(os.path.join('log', 'execute.log'))\nfh.setLevel(logging.DEBUG)\n\n# Create console handler with a higher log level.\nch = logging.StreamHandler()\nch.setLevel(logging.INFO)\n\n# Create formatter and add it to the handlers.\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfh.setFormatter(formatter)\nch.setFormatter(formatter)\n\n# Add the handlers to the logger.\nlogger.addHandler(fh)\nlogger.addHandler(ch)\n\n\n## Obtain the root directory for the META-tools.\n# Get the running meta-python path.\nsys_pieces = sys.executable.split(os.path.sep)\n# Drop the 'bin/Python27/Scripts/python.exe' part.\nsys_pieces = sys_pieces[:-4]\n# Make sure to get the slashes after e.g. \"C:\".\nif sys_pieces[0].endswith(':'):\n    sys_pieces[0] = sys_pieces[0] + os.path.sep\n# Join the pieces.\nMETA_DIR = os.path.join(*sys_pieces)\n\n# Disable early binding: full of race conditions writing the cache files,\n# and changes the semantics since inheritance isn't handled correctly\nimport win32com.client.gencache\n_savedGetClassForCLSID = win32com.client.gencache.GetClassForCLSID\nwin32com.client.gencache.GetClassForCLSID = lambda x: None\n\n\ndef parse_xme_and_save_to_mga(file_name='empty.xme'):\n    \"\"\"\n    Imports the xme project and saves it to a mga-file with the same name.\n    (Will overwrite any existing mga with same path.)\n\n    returns : mga_path : path to newly created mga\n    \"\"\"\n    mga_file = file_name[:-3] + 'mga'\n    mga_path = os.path.abspath(mga_file)\n    logger.debug(\"About to parse .xme, mga will be saved to \" + mga_path)\n    parser = win32com.client.Dispatch('Mga.MgaParser')\n    (paradigm, paradigm_v, paradigm_guid, basename, version) = parser.GetXMLInfo(file_name)\n    logger.debug('Xme info :')\n    logger.debug('  paradigm     : {0}'.format(paradigm))\n    logger.debug('  paradigm_v   : {0}'.format(paradigm_v))\n    logger.debug('  paradigm_guid: {0}'.format(paradigm_guid))\n    logger.debug('  basename     : {0}'.format(basename))\n    logger.debug('  version      : {0}'.format(version))\n    if paradigm != 'CyPhyML':\n        raise IOError(\"Given xme file must be using CyPhyML as paradigm, not {0}\".format(paradigm))\n\n    project = win32com.client.Dispatch('Mga.MgaProject')\n    project.Create('MGA={0}'.format(mga_path), paradigm)\n    try:\n        parser.ParseProject(project, file_name)\n        project.Save()\n        logging.debug(\"Mga saved to \" + mga_file)\n    finally:\n        project.Close(True)\n\n    return mga_path\n\n\ndef extract_components(src_path='ACMs', dst_path='components_extracted'):\n    if os.path.isdir(dst_path):\n        logging.debug('Found dir :{0} - removing and making new...'.format(dst_path))\n        shutil.rmtree(dst_path)\n        os.mkdir(dst_path)\n    files = os.listdir(src_path)\n    logging.debug('Components found in directory : {0}'.format(files))\n    for f_name in files:\n        if f_name.endswith('.zip'):\n            zippy = zipfile.ZipFile(os.path.join(src_path, f_name))\n            zippy.extractall(os.path.join(dst_path, f_name.rstrip('.zip')))\n\n\ndef import_components(mga_path='empty.mga', dir_path='components_extracted'):\n    exec_name = 'CyPhyComponentImporterCL.exe'\n    exec_path = os.path.join(META_DIR, 'bin', 'CyPhyComponentImporterCL.exe')\n    if not os.path.isfile(exec_path):\n        logging.debug('Did not find {0} in bin directory.'.format(exec_name))\n        logging.debug('Assuming developer machine, looking in src directory...'.format(exec_name))\n        exec_path = os.path.join(META_DIR, 'src', 'CyPhyComponentImporterCL', 'bin', 'Release', exec_name)\n        if not os.path.isfile(exec_path):\n            raise IOError('Did not find {0}'.format(exec_path))\n\n    command = '{0} -r \"{1}\" \"{2}\"'.format(exec_path, dir_path, mga_path)\n    logger.debug('About to import components using command:')\n    logger.debug(command)\n    subprocess.call(command)\n\n\ndef import_design(adm_file, mga_path='empty.mga'):\n    project_conn_str = 'MGA={0}'.format(mga_path)\n    project = win32com.client.Dispatch('Mga.MgaProject')\n    project.Open(project_conn_str)\n    is_in_transaction = False\n    try:\n        interpreter = win32com.client.Dispatch('MGA.Interpreter.CyPhyDesignImporter')\n        interpreter.Initialize(project)\n        logger.debug('About to begin transaction..')\n        project.BeginTransactionInNewTerr()\n        logger.info('Transaction began.')\n        is_in_transaction = True\n        logger.debug('Invoking CyPhyDesignImporter.ImportDesign..')\n        design_mga = interpreter.ImportDesign(project, adm_file)\n        logger.info('Import design finished, returned:')\n        logger.info('   Name : {0}'.format(design_mga.Name))\n        logger.info('   Path : {0}'.format(design_mga.AbsPath))\n        logger.info('   GUID : {0}'.format(design_mga.GetGuidDisp()))\n        logger.debug('About to commit transaction..')\n        project.CommitTransaction()\n        logger.info('Transaction committed.')\n        is_in_transaction = False\n    finally:\n        if is_in_transaction:\n            logger.debug('About to abort transaction..')\n            project.AbortTransaction()\n            logger.info('Transaction aborted.')\n            project.Close(True)\n        else:\n            logger.debug('About to save project..')\n            project.Close(False)\n            logger.debug('Project saved.')\n\nif __name__ == '__main__':\n    try:\n        adm_path = [f for f in os.listdir('.') if f.endswith('.adm')][0]\n    except IndexError:\n        logger.error('Could not find an adm file at {0}'.format(os.getcwd()))\n        sys.exit(1)\n    extract_components()\n    logger.info('Components extracted...')\n    mga_file = parse_xme_and_save_to_mga()\n    logger.info('Mga created...')\n    import_components()\n    logger.info('Components imported...')\n    import_design(adm_path)\n    logger.info('Design imported...')",
    "run_execution.cmd.ejs": ":: Executes the package\r\necho off\r\npushd %~dp0\r\n%SystemRoot%\\SysWoW64\\REG.exe query \"HKLM\\software\\META\" /v \"META_PATH\"\r\n\r\nSET QUERY_ERRORLEVEL=%ERRORLEVEL%\r\n\r\nIF %QUERY_ERRORLEVEL% == 0 (\r\n        FOR /F \"skip=2 tokens=2,*\" %%A IN ('%SystemRoot%\\SysWoW64\\REG.exe query \"HKLM\\software\\META\" /v \"META_PATH\"') DO SET META_PATH=%%B)\r\nSET META_PYTHON_EXE=\"%META_PATH%\\bin\\Python27\\Scripts\\Python.exe\"\r\n    %META_PYTHON_EXE% execute.py\r\n)\r\nIF %QUERY_ERRORLEVEL% == 1 (\r\n    echo on\r\necho \"META tools not installed.\" >> _FAILED.txt\r\necho \"See Error Log: _FAILED.txt\"\r\nexit /b %QUERY_ERRORLEVEL%\r\n)\r\npopd"
}});
define('ejs',[], function() {
    var ejs=function(){function require(p){if("fs"==p)return{};if("path"==p)return{};var path=require.resolve(p),mod=require.modules[path];if(!mod)throw new Error('failed to require "'+p+'"');if(!mod.exports){mod.exports={};mod.call(mod.exports,mod,mod.exports,require.relative(path))}return mod.exports}require.modules={};require.resolve=function(path){var orig=path,reg=path+".js",index=path+"/index.js";return require.modules[reg]&&reg||require.modules[index]&&index||orig};require.register=function(path,fn){require.modules[path]=fn};require.relative=function(parent){return function(p){if("."!=p.substr(0,1))return require(p);var path=parent.split("/"),segs=p.split("/");path.pop();for(var i=0;i<segs.length;i++){var seg=segs[i];if(".."==seg)path.pop();else if("."!=seg)path.push(seg)}return require(path.join("/"))}};require.register("ejs.js",function(module,exports,require){var utils=require("./utils"),path=require("path"),dirname=path.dirname,extname=path.extname,join=path.join,fs=require("fs"),read=fs.readFileSync;var filters=exports.filters=require("./filters");var cache={};exports.clearCache=function(){cache={}};function filtered(js){return js.substr(1).split("|").reduce(function(js,filter){var parts=filter.split(":"),name=parts.shift(),args=parts.join(":")||"";if(args)args=", "+args;return"filters."+name+"("+js+args+")"})}function rethrow(err,str,filename,lineno){var lines=str.split("\n"),start=Math.max(lineno-3,0),end=Math.min(lines.length,lineno+3);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?" >> ":"    ")+curr+"| "+line}).join("\n");err.path=filename;err.message=(filename||"ejs")+":"+lineno+"\n"+context+"\n\n"+err.message;throw err}var parse=exports.parse=function(str,options){var options=options||{},open=options.open||exports.open||"<%",close=options.close||exports.close||"%>",filename=options.filename,compileDebug=options.compileDebug!==false,buf="";buf+="var buf = [];";if(false!==options._with)buf+="\nwith (locals || {}) { (function(){ ";buf+="\n buf.push('";var lineno=1;var consumeEOL=false;for(var i=0,len=str.length;i<len;++i){var stri=str[i];if(str.slice(i,open.length+i)==open){i+=open.length;var prefix,postfix,line=(compileDebug?"__stack.lineno=":"")+lineno;switch(str[i]){case"=":prefix="', escape(("+line+", ";postfix=")), '";++i;break;case"-":prefix="', ("+line+", ";postfix="), '";++i;break;default:prefix="');"+line+";";postfix="; buf.push('"}var end=str.indexOf(close,i);if(end<0){throw new Error('Could not find matching close tag "'+close+'".')}var js=str.substring(i,end),start=i,include=null,n=0;if("-"==js[js.length-1]){js=js.substring(0,js.length-2);consumeEOL=true}if(0==js.trim().indexOf("include")){var name=js.trim().slice(7).trim();if(!filename)throw new Error("filename option is required for includes");var path=resolveInclude(name,filename);include=read(path,"utf8");include=exports.parse(include,{filename:path,_with:false,open:open,close:close,compileDebug:compileDebug});buf+="' + (function(){"+include+"})() + '";js=""}while(~(n=js.indexOf("\n",n)))n++,lineno++;if(js.substr(0,1)==":")js=filtered(js);if(js){if(js.lastIndexOf("//")>js.lastIndexOf("\n"))js+="\n";buf+=prefix;buf+=js;buf+=postfix}i+=end-start+close.length-1}else if(stri=="\\"){buf+="\\\\"}else if(stri=="'"){buf+="\\'"}else if(stri=="\r"){}else if(stri=="\n"){if(consumeEOL){consumeEOL=false}else{buf+="\\n";lineno++}}else{buf+=stri}}if(false!==options._with)buf+="'); })();\n} \nreturn buf.join('');";else buf+="');\nreturn buf.join('');";return buf};var compile=exports.compile=function(str,options){options=options||{};var escape=options.escape||utils.escape;var input=JSON.stringify(str),compileDebug=options.compileDebug!==false,client=options.client,filename=options.filename?JSON.stringify(options.filename):"undefined";if(compileDebug){str=["var __stack = { lineno: 1, input: "+input+", filename: "+filename+" };",rethrow.toString(),"try {",exports.parse(str,options),"} catch (err) {","  rethrow(err, __stack.input, __stack.filename, __stack.lineno);","}"].join("\n")}else{str=exports.parse(str,options)}if(options.debug)console.log(str);if(client)str="escape = escape || "+escape.toString()+";\n"+str;try{var fn=new Function("locals, filters, escape, rethrow",str)}catch(err){if("SyntaxError"==err.name){err.message+=options.filename?" in "+filename:" while compiling ejs"}throw err}if(client)return fn;return function(locals){return fn.call(this,locals,filters,escape,rethrow)}};exports.render=function(str,options){var fn,options=options||{};if(options.cache){if(options.filename){fn=cache[options.filename]||(cache[options.filename]=compile(str,options))}else{throw new Error('"cache" option requires "filename".')}}else{fn=compile(str,options)}options.__proto__=options.locals;return fn.call(options.scope,options)};exports.renderFile=function(path,options,fn){var key=path+":string";if("function"==typeof options){fn=options,options={}}options.filename=path;var str;try{str=options.cache?cache[key]||(cache[key]=read(path,"utf8")):read(path,"utf8")}catch(err){fn(err);return}fn(null,exports.render(str,options))};function resolveInclude(name,filename){var path=join(dirname(filename),name);var ext=extname(name);if(!ext)path+=".ejs";return path}exports.__express=exports.renderFile;if(require.extensions){require.extensions[".ejs"]=function(module,filename){filename=filename||module.filename;var options={filename:filename,client:true},template=fs.readFileSync(filename).toString(),fn=compile(template,options);module._compile("module.exports = "+fn.toString()+";",filename)}}else if(require.registerExtension){require.registerExtension(".ejs",function(src){return compile(src,{})})}});require.register("filters.js",function(module,exports,require){exports.first=function(obj){return obj[0]};exports.last=function(obj){return obj[obj.length-1]};exports.capitalize=function(str){str=String(str);return str[0].toUpperCase()+str.substr(1,str.length)};exports.downcase=function(str){return String(str).toLowerCase()};exports.upcase=function(str){return String(str).toUpperCase()};exports.sort=function(obj){return Object.create(obj).sort()};exports.sort_by=function(obj,prop){return Object.create(obj).sort(function(a,b){a=a[prop],b=b[prop];if(a>b)return 1;if(a<b)return-1;return 0})};exports.size=exports.length=function(obj){return obj.length};exports.plus=function(a,b){return Number(a)+Number(b)};exports.minus=function(a,b){return Number(a)-Number(b)};exports.times=function(a,b){return Number(a)*Number(b)};exports.divided_by=function(a,b){return Number(a)/Number(b)};exports.join=function(obj,str){return obj.join(str||", ")};exports.truncate=function(str,len,append){str=String(str);if(str.length>len){str=str.slice(0,len);if(append)str+=append}return str};exports.truncate_words=function(str,n){var str=String(str),words=str.split(/ +/);return words.slice(0,n).join(" ")};exports.replace=function(str,pattern,substitution){return String(str).replace(pattern,substitution||"")};exports.prepend=function(obj,val){return Array.isArray(obj)?[val].concat(obj):val+obj};exports.append=function(obj,val){return Array.isArray(obj)?obj.concat(val):obj+val};exports.map=function(arr,prop){return arr.map(function(obj){return obj[prop]})};exports.reverse=function(obj){return Array.isArray(obj)?obj.reverse():String(obj).split("").reverse().join("")};exports.get=function(obj,prop){return obj[prop]};exports.json=function(obj){return JSON.stringify(obj)}});require.register("utils.js",function(module,exports,require){exports.escape=function(html){return String(html).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")}});return require("ejs")}();
    return ejs;
});

/*globals define*/
/**
* Generated by PluginGenerator from webgme on Tue Apr 29 2014 17:05:39 GMT-0500 (Central Daylight Time).
*/

define('plugin/AdmExporter/AdmExporter/AdmExporter',[
    'plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/AdmExporter/AdmExporter/meta',
    'xmljsonconverter',
    'plugin/AdmExporter/AdmExporter/Templates/Templates',
    'ejs'], function (PluginConfig, PluginBase, MetaTypes, Converter, TEMPLATES, ejs) {
    

    /**
    * Initializes a new instance of AdmExporter.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin AdmExporter.
    * @constructor
    */
    var AdmExporter = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = null;
        this.admData = {
            "@xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
            "@xmlns:xsd": "http://www.w3.org/2001/XMLSchema",
            "@DesignID": '',
            "@Name": '',
            "@xmlns": "avm",
            "RootContainer": null
        };

        this.acmFiles = {};
        this.gatheredAcms = {};
        this.includeAcms = true;
        // No value flows or connector-compositions beyond the root-container
        // should be reported in the adm file.
        this.rootPath = null;
        this.selectedCfg = null;
        this.selectedAlternatives = null;
    };

    // Prototypal inheritance from PluginBase.
    AdmExporter.prototype = Object.create(PluginBase.prototype);
    AdmExporter.prototype.constructor = AdmExporter;

    /**
    * Gets the name of the AdmExporter.
    * @returns {string} The name of the plugin.
    * @public
    */
    AdmExporter.prototype.getName = function () {
        return "ADM Exporter";
    };

    /**
    * Gets the semantic version (semver.org) of the AdmExporter.
    * @returns {string} The version of the plugin.
    * @public
    */
    AdmExporter.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the description of the AdmExporter.
    * @returns {string} The description of the plugin.
    * @public
    */
    AdmExporter.prototype.getDescription = function () {
        return "Exports a design into an adm.";
    };

    /**
    * Gets the configuration structure for the AdmExporter.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    AdmExporter.prototype.getConfigStructure = function () {
        return [
            {
                'name': 'acms',
                'displayName': 'Include ACMs',
                'description': 'Bundles all encountered ACMs within the package and creates scripts for importing the '
                    + 'design into desktop GME.',
                'value': false,
                'valueType': 'boolean',
                'readOnly': false
            },
            {
                'name': 'desertCfg',
                'displayName': 'Desert Configuration.',
                'description': 'Only this configuration will be exported. (If empty whole design space will be exported.)',
                'value': '',
                'valueType': 'string',
                'readOnly': false
            }
        ];
    };


    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    AdmExporter.prototype.main = function (callback) {
        var self = this,
            //timeStart = new Date().getTime(),
            jsonToXml = new Converter.Json2xml(),
            config = self.getCurrentConfig(),
            finishAndSaveArtifact,
            createArtifacts;
        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }
        if (self.isMetaTypeOf(self.activeNode, self.META.Container) === false) {
            self.createMessage(null, 'This plugin must be called from a Container.', 'error');
            callback(null, self.result);
            return;
        }
        self.meta = MetaTypes;
        self.updateMETA(self.meta);
        self.rootPath = self.core.getPath(self.activeNode);
        finishAndSaveArtifact = function (artifact) {
            artifact.save(function (err, hash) {
                if (err) {
                    self.result.setSuccess(false);
                    callback('Could not save artifact : err' + err.toString(), self.result);
                    return;
                }
                self.result.addArtifact(hash);
                self.result.setSuccess(true);
                callback(null, self.result);
            });
        };

        self.setupDesertCfg(config.desertCfg, function (err) {
            if (err) {
                self.logger.error(err);
                callback(null, self.result);
                return;
            }
            if (self.selectedAlternatives) {
                self.logger.info('Running on single configuration');
                self.logger.info(JSON.stringify(self.selectedAlternatives, null));
            }
            createArtifacts = function (err) {
                var artifact,
                    admXmlStr;
                if (err) {
                    callback(err, self.result);
                    return;
                }
                artifact = self.blobClient.createArtifact('design');
                admXmlStr = jsonToXml.convertToString({Design: self.admData});

                artifact.addFile(self.admData['@Name'] + '.adm', admXmlStr, function (err, hash) {
                    if (err) {
                        self.result.setSuccess(false);
                        callback('Could not add adm file : err' + err.toString(), self.result);
                        return;
                    }
                    self.logger.info('ADM hash: ' + hash);
                    if (self.includeAcms) {
                        artifact.addObjectHashes(self.acmFiles, function (err, hashes) {
                            if (err) {
                                self.result.setSuccess(false);
                                callback('Could not add acm files : err' + err.toString(), self.result);
                                return;
                            }
                            self.logger.info('ACM hashes: ' + hashes.toString());
                            artifact.addFiles({
                                'execute.py': ejs.render(TEMPLATES['execute.py.ejs']),
                                'run_execution.cmd': ejs.render(TEMPLATES['run_execution.cmd.ejs']),
                                'empty.xme': ejs.render(TEMPLATES['empty.xme.ejs']),
                                'executor_config.json': JSON.stringify({
                                    cmd: 'run_execution.cmd',
                                    files: [],
                                    dirs: []
                                }, null, 4)
                            }, function (err, hashes) {
                                if (err) {
                                    callback('Could not script files : err' + err.toString(), self.result);
                                    return;
                                }
                                self.logger.info('Script hashes: ' + hashes.toString());
                                finishAndSaveArtifact(artifact);
                            });
                        });
                    } else {
                        finishAndSaveArtifact(artifact);
                    }
                });
            };
            self.exploreDesign(self.activeNode, config.acms, createArtifacts);
        });
    };

    AdmExporter.prototype.setupDesertCfg = function (desertCfgId, callback) {
        var self = this;
        if (!desertCfgId) {
            callback(null);
            return;
        }
        self.core.loadByPath(self.rootNode, desertCfgId, function (err, cfgNode) {
            var name,
                i,
                aas;
            if (err) {
                self.createMessage(null, 'Could not load given configuration node, err: ' + err.toString(), 'error');
                callback(err);
                return;
            }
            if (self.startsWith(desertCfgId, self.rootPath) === false) {
                self.createMessage(cfgNode, 'Given desert configuration is not within design.', 'error');
                callback('Given desert configuration is not within design.');
                return;
            }
            if (self.isMetaTypeOf(cfgNode, self.meta.DesertConfiguration) === false) {
                self.createMessage(cfgNode, 'Given path to desert configuration is not pointing to a DesertConfiguration node.', 'error');
                callback('Wrong meta-type of desert configuration.');
                return;
            }
            name = self.core.getAttribute(cfgNode, 'name');
            aas = JSON.parse(self.core.getAttribute(cfgNode, 'AlternativeAssignments'));
            self.selectedAlternatives = {};
            for (i = 0; i < aas.length; i += 1) {
                self.selectedAlternatives[aas[i].alternativeOf] = aas[i].selectedAlternative;
            }
            callback(null);
        });
    };

    AdmExporter.prototype.shouldBeGenerated = function (node) {
        var self = this,
            parentNode,
            parentId;
        if (!self.selectedAlternatives) {
            return true;
        }
        parentNode = self.core.getParent(node);
        if (self.core.getAttribute(parentNode, 'Type') !== 'Alternative') {
            return true;
        }
        parentId = self.core.getPath(parentNode);
        if (self.selectedAlternatives[parentId]) {
            if (self.selectedAlternatives[parentId] === self.core.getPath(node)) {
                return true;
            }
        } else {
            self.createMessage(parentNode, 'Container is not in the desert-configuration, the latter is out of date.',
                'error');
            return false;
        }

        return false;
    };

    AdmExporter.prototype.exploreDesign = function (startNode, includeACMs, callback) {
        var self = this,
            designName = self.core.getAttribute(startNode, 'name');
        self.includeAcms = includeACMs;
        self.admData['@Name'] = designName;
        self.admData['@DesignID'] = self.core.getGuid(startNode);
        self.rootPath = self.core.getPath(startNode);
        self.logger.info('rootPath is ' + self.rootPath);
        self.visitAllChildrenFromRootContainer(startNode, callback);
    };

    AdmExporter.prototype.atModelNode = function (node, parent, containerData, callback) {
        var self = this,
            nodeType = self.core.getAttribute(self.getMetaType(node), 'name'),
            nodeName = self.core.getAttribute(node, 'name'),
            parentName = self.core.getAttribute(parent, 'name');

        if (nodeType === 'AVMComponentModel') {
            if (self.shouldBeGenerated(node)) {
                self.addComponentInstance(node, parent, containerData, callback);
            } else {
                self.logger.info('At node "' + nodeName + '" of type "' + nodeType + '" with parent "' + parentName + '".');
                self.logger.info('Will not be generated!');
                callback(null);
            }
        } else if (nodeType === 'Connector') {
            self.addConnector(node, parent, containerData, callback);
        } else if (nodeType === 'Property') {
            self.addProperty(node, parent, containerData, callback);
        } else if (nodeType === 'SimpleFormula') {
            self.addFormula(node, parent, containerData, true, callback);
        } else if (nodeType === 'CustomFormula') {
            self.addFormula(node, parent, containerData, false, callback);
        } else if (nodeType === 'DomainPort') {
            self.addDomainPort(node, parent, containerData, callback);
        } else if (nodeType === 'AssemblyRoot') {
            self.addAssemblyRoot(node, parent, containerData, callback);
        } else if (self.isMetaTypeOf(node, self.meta.LayoutConstraint)) {
            self.addLayoutConstraint(node, parent, containerData, callback);
        } else {
            callback(null);
        }
    };

    AdmExporter.prototype.addComponentInstance = function (node, parent, containerData, callback) {
        var self = this,
            pos = self.core.getRegistry(node, 'position'),
            nodeName = self.core.getAttribute(node, 'name'),
            acmHash,
            componentID = self.core.getAttribute(node, 'ID'),
            data = {
                "@Name": nodeName,
                "@ComponentID": componentID,
                "@ID": self.core.getGuid(node),
                "@XPosition": Math.floor(pos.x),
                "@YPosition": Math.floor(pos.y),
                "PortInstance": [],
                "PrimitivePropertyInstance": [],
                "ConnectorInstance": []
            };

        if (containerData.TopLevelSystemUnderTest === undefined) {
            containerData.ComponentInstance.push(data);
        } else {
            containerData.TestComponent.push(data);
        }

        if (self.includeAcms) {
            acmHash = self.core.getAttribute(node, 'Resource');
            if (acmHash) {
                if (self.gatheredAcms[acmHash]) {
                    self.logger.info('ACM of "' + nodeName + '" used twice. Not adding again..');
                } else {
                    self.acmFiles['ACMs/' + nodeName + '__' + componentID.replace(/[^\w]/gi, '_') + '.zip'] = acmHash;
                    self.gatheredAcms[acmHash] = true;
                }
            } else {
                self.logger.error('ACM was not specified for ' + nodeName);
                callback('ACM was not specified for ' + nodeName);
                return;
            }
        }
        self.core.loadChildren(node, function (err, children) {
            var i,
                error = '',
                counter,
                counterCallback;
            if (err) {
                callback('loadChildren failed for ' + nodeName + ' :' + err.toString());
                return;
            }

            counterCallback = function (err) {
                error = err ? error + err : error;
                counter -= 1;
                if (counter <= 0) {
                    callback(error);
                }
            };

            if (children.length === 0) {
                counter = 1;
                counterCallback(null);
                return;
            }

            counter = children.length;

            for (i = 0; i < children.length; i += 1) {
                if (self.isMetaTypeOf(children[i], self.meta.Connector)) {
                    self.addConnector(children[i], node, data, counterCallback);
                } else if (self.isMetaTypeOf(children[i], self.meta.DomainPort)) {
                    self.addDomainPort(children[i], node, data, counterCallback);
                } else if (self.isMetaTypeOf(children[i], self.meta.Property)) {
                    self.addProperty(children[i], node, data, counterCallback);
                } else {
                    counterCallback(null);
                }
            }
        });
    };

//<editor-fold desc="=========================== Connectors/DomainPorts ==========================">
    AdmExporter.prototype.addConnector = function (node, parent, containerData, callback) {
        var self = this,
            parentType = self.core.getAttribute(self.getMetaType(parent), 'name'),
            data = self.getConnectorData(node, parent);

        if (parentType === 'Container') {
            containerData.Connector.push(data);
        } else if (parentType === 'AVMComponentModel') {
            containerData.ConnectorInstance.push(data);
        }

        self.addRoles(node, data, function (err) {
            if (err) {
                callback(err);
                return;
            }
            self.getConnectionString(node, function (err, connectionString) {
                if (err) {
                    callback(err);
                    return;
                }
                data['@ConnectorComposition'] = connectionString;
                callback(null);
            });
        });
    };

    AdmExporter.prototype.addDomainPort = function (node, parent, containerData, callback) {
        var self = this,
            parentType = self.core.getAttribute(self.getMetaType(parent), 'name'),
            data = self.getDomainP(node, parent);

        if (parentType === 'Container') {
            containerData.Port.push(data);
        } else if (parentType === 'AVMComponentModel') {
            containerData.PortInstance.push(data);
        }

        self.getConnectionString(node, function (err, connectionString) {
            if (err) {
                callback(err);
                return;
            }
            data['@PortMap'] = connectionString;
            callback(null);
        });
    };

    AdmExporter.prototype.addRoles = function (connectorNode, data, callback) {
        var self = this,
            domainConnectors = data.Role,
            nodeName;

        if (domainConnectors === undefined) {
            // This a connector within an ACM..
            callback(null);
            return;
        }

        nodeName = self.core.getAttribute(connectorNode, 'name');
        self.core.loadChildren(connectorNode, function (err, children) {
            var i,
                roleData,
                counter = children.length,
                error = '',
                getCounterCallback = function (portData) {
                    return function (err, connectionString) {
                        error = err ? error + err : error;
                        portData['@PortMap'] = connectionString;
                        counter -= 1;
                        if (counter === 0) {
                            callback(error);
                        }
                    };
                };
            if (err) {
                callback('loadChildren failed for connector ' + nodeName + ' :' + err.toString());
                return;
            }

            if (children.length === 0) {
                callback(null);
            }
            for (i = 0; i < children.length; i += 1) {
                roleData = self.getDomainPortData(children[i], connectorNode);
                domainConnectors.push(roleData);
                self.getConnectionString(children[i], getCounterCallback(roleData));
            }
        });
    };


    /**
     * Gets the full connection string for ConnectorComposition/PortMap of a Connector/DomainPort.
     * @param portNode - Connector or DomainPort.
     * @param {function} callback
     */
    AdmExporter.prototype.getConnectionString = function (portNode, callback) {
        var self = this,
            collectionNames =  self.core.getCollectionNames(portNode),
            counter = 2,
            error = '',
            connectionString = '',
            counterCallback = function (err) {
                error = err ? error + err : error;
                counter -= 1;
                if (counter === 0) {
                    callback(error, connectionString);
                }
            };

        if (collectionNames.indexOf('src') > -1) {
            self._getPartialConnectionString(portNode, 'src', function (err, dstId) {
                if (err) {
                    counterCallback(err);
                    return;
                }
                connectionString = self.appendWhiteSpacedString(connectionString, dstId);
                counterCallback(null);
            });
        } else {
            counterCallback(null);
        }
        if (collectionNames.indexOf('dst') > -1) {
            self._getPartialConnectionString(portNode, 'dst', function (err, srcId) {
                if (err) {
                    counterCallback(err);
                    return;
                }
                connectionString = self.appendWhiteSpacedString(connectionString, srcId);
                counterCallback(null);
            });
        } else {
            counterCallback(null);
        }
    };

    AdmExporter.prototype._getPartialConnectionString = function (portNode, collectionName, callback) {
        var self = this,
            pointerName = collectionName === 'src' ? 'dst' : 'src';

        self.core.loadCollection(portNode, collectionName, function (err, connections) {
            var counter, i,
                counterCallback,
                error = '',
                connectedIDs = '';
            if (err) {
                callback(err);
                return;
            }
            counterCallback = function (err, connectedID) {
                if (err) {
                    error += err;
                } else {
                    connectedIDs = self.appendWhiteSpacedString(connectedIDs, connectedID);
                }
                counter -= 1;
                if (counter <= 0) {
                    callback(error, connectedIDs);
                }
            };
            counter = connections.length;
            if (connections.length === 0) {
                counterCallback(null, '');
                return;
            }
            for (i = 0; i < connections.length; i += 1) {
                self.getConnectedPortID(connections[i], pointerName, counterCallback);
            }
        });
    };

    /**
     * Gets the ID of the connected Connector or DomainPort. (If the connected one is not part of the configuration -
     * the 'returned' id is empty.)
     * @param connectionNode - ConnectorComposition or PortMap to get the connected Connector/DomainPort through.
     * @param {string} pointerName - 'src' or 'dst'.
     * @param {function} callback
     */
    AdmExporter.prototype.getConnectedPortID = function (connectionNode, pointerName, callback) {
        var self = this,
            hasPointer = self.core.hasPointer(connectionNode, pointerName);

        if (hasPointer) {
            self.core.loadPointer(connectionNode, pointerName, function (err, connectedPort) {
                var id = '',
                    parent,
                    grandParent,
                    grandParentMetaType,
                    parentMetaType;
                if (err) {
                    callback(err);
                    return;
                }
                if (self.nodeIsWithinDesign(connectedPort)) {
                    parent = self.core.getParent(connectedPort);
                    parentMetaType = self.core.getAttribute(self.getMetaType(parent), 'name');
                    if (parentMetaType === 'AVMComponentModel') {
                        //If parent of parent is alternative, then only add if parent is in AA.
                        if (self.shouldBeGenerated(parent)) {
                            id = 'id-' + self.core.getGuid(parent) + '-' + self.core.getAttribute(connectedPort, 'ID');
                        }
                    } else if (parentMetaType === 'Container') {
                        //If parent of parent is alternative, then only add if parent is in AA.
                        if (self.shouldBeGenerated(parent)) {
                            id = self.core.getGuid(connectedPort);
                        }
                    } else if (parentMetaType === 'Connector') {
                        grandParent = self.core.getParent(parent);
                        grandParentMetaType = self.core.getAttribute(self.getMetaType(grandParent), 'name');
                        if (grandParentMetaType === 'Container') {
                            if (self.shouldBeGenerated(grandParent)) {
                                id = self.core.getGuid(connectedPort);
                            }
                        } else {
                            callback('Unexpected Connector grandParentMetaType ' + grandParentMetaType);
                        }
                    } else {
                        callback('Unexpected Connector parentMetaType ' + parentMetaType);
                    }
                }
                callback(null, id);
            });
        } else {
            self.createMessage(connectionNode, 'Connection with no src/dst exists in design.', 'error');
            callback('A connection with only one direction pointer exists in model.');
        }
    };
//</editor-fold>

    AdmExporter.prototype.addLayoutConstraint = function (node, container, containerData, callback) {
        var self = this,
            pos = self.core.getRegistry(node, 'position'),
            type = self.core.getAttribute(self.getMetaType(node), 'name'),
            origin;

        var addConstraintData = function (targetNodes, targetIds) {
            var data = {
                "@xmlns:eda" : "eda",
                "@xsi:type": "eda:" + type,
                "@XPosition": Math.floor(pos.x),
                "@YPosition": Math.floor(pos.y)
            };
            var copyAttrIfSet = function (attrName, xform) {
                if (!xform) {
                    xform = function (attr) { return attr; };
                }
                var val = self.core.getAttribute(node, attrName);
                if (val !== undefined) {
                    data['@' + attrName] = xform(val);
                }
            };
            if (type === 'RelativeLayoutConstraint') {
                copyAttrIfSet('XOffset');
                copyAttrIfSet('YOffset');
                data['@Origin'] = self.core.getGuid(origin);
            }
            if (type === 'RangeLayoutConstraint') {
                copyAttrIfSet('LayerRange');
                var setRange = function (xOrY) {
                    var range = self.core.getAttribute(node, xOrY + 'Range');
                    if (range !== undefined) {
                        var match = /(-?\d*(?:\.\d*)?)-(-?\d*(?:\.\d*)?)/.exec(range);
                        if (match) {
                            data['@' + xOrY + 'RangeMin'] = match[1];
                            data['@' + xOrY + 'RangeMax'] = match[2];
                        }
                    }
                };
                setRange('X');
                setRange('Y');
            }
            if (type === 'ExactLayoutConstraint') {
                copyAttrIfSet('X');
                copyAttrIfSet('Y');
                copyAttrIfSet('Rotation', function (val) { return 'r' + val; });
                copyAttrIfSet('Layer');
            }

            data['@ConstraintTarget'] = targetNodes
                .filter(function (node) { return node; })
                .map(function (node) { return self.core.getGuid(node); })
                .join(' ');

            containerData.ContainerFeature.push(data);
            callback(null);
        };
        this.loadSetMembers(node, 'ConstraintTarget', function (err, targetNodes, targetIds) {
            if (err) {
                return callback(err);
            }
            if (type === 'RelativeLayoutConstraint') {
                self.core.loadPointer(node, 'Origin', function (err, o) {
                    if (err) {
                        return callback(err);
                    }
                    origin = o;
                    addConstraintData(targetNodes);
                });
            } else {
                addConstraintData(targetNodes);
            }
        });
    };


//<editor-fold desc="=========================== Properties/ValueFlows ==========================">
    AdmExporter.prototype.addProperty = function (node, parent, containerData, callback) {
        var self = this,
            pos = self.core.getRegistry(node, 'position'),
            parentType = self.core.getAttribute(self.getMetaType(parent), 'name'),
            collectionNames = self.core.getCollectionNames(node),
            valueType = self.core.getAttribute(node, 'ValueType'),
            dataType = self.core.getAttribute(node, 'DataType'),
            unit,
            data,
            value,
            id,
            addPropertyData;

        addPropertyData = function (valueSourceID) {
            if (parentType === 'Container') {
                id = self.core.getGuid(node);
                data = {
                    "@xsi:type": "q1:PrimitiveProperty",
                    "@Name": self.core.getAttribute(node, 'name'),
                    "@ID": null,
                    "@XPosition": Math.floor(pos.x),
                    "@YPosition": Math.floor(pos.y),
                    "Value": {
                        "@ID": id,
                        "@DimensionType": "Scalar",
                        "@Dimensions": "",
                        "@DataType": dataType,
                        "ValueExpression": null
                    }
                };
                unit = self.core.getAttribute(node, 'Unit');
                if (unit) {
                    data.Value['@Unit'] = unit;
                }
                value = self.core.getAttribute(node, 'Value') || '';
                if (valueType === 'Parametric') {
                    data['@ID'] = 'param.' + id;
                    data.Value.ValueExpression = {
                        "@xsi:type": "q1:" + valueType + "Value",
                        "Default": {
                            "@xsi:type": "q1:FixedValue",
                            "Value": {
                                "#text": self.core.getAttribute(node, 'Default') || ''
                            }
                        },
                        "Maximum": {
                            "@xsi:type": "q1:FixedValue",
                            "Value": {
                                "#text": self.core.getAttribute(node, 'Maximum') || ''
                            }
                        },
                        "Minimum": {
                            "@xsi:type": "q1:FixedValue",
                            "Value": {
                                "#text": self.core.getAttribute(node, 'Minimum') || ''
                            }
                        },
                        "AssignedValue": null
                    };
                    if (valueSourceID) {
                        data.Value.ValueExpression.AssignedValue = {
                            "@xsi:type": "q1:DerivedValue",
                            "@ValueSource": valueSourceID
                        };
                    } else {
                        data.Value.ValueExpression.AssignedValue = {
                            "@xsi:type": "q1:FixedValue",
                            "Value": {
                                "#text": value
                            }
                        };
                    }
                } else if (valueType === 'Fixed') {
                    data['@ID'] = 'property.' + id;
                    if (valueSourceID) {
                        data.Value.ValueExpression = {
                            "@xsi:type": "q1:DerivedValue",
                            "@ValueSource": valueSourceID
                        };
                    } else {
                        data.Value.ValueExpression = {
                            "@xsi:type": "q1:FixedValue",
                            "Value": {
                                "#text": value
                            }
                        };
                    }
                } else {
                    self.logger.error('Unexpected property value type, ' + valueType);
                }
                containerData.Property.push(data);
            } else if (parentType === 'AVMComponentModel') {
                id = self.core.getAttribute(node, 'ID');
                data = {
                    "@IDinComponentModel": id,
                    "Value": {
                        "@ID": 'id-' + self.core.getGuid(parent) + '-' + id,
                        "@DimensionType": "Scalar",
                        "@Dimensions": "",
                        "@DataType": dataType
                    }
                };
                if (valueSourceID) {
                    data.Value.ValueExpression = {
                        "@xsi:type": "q1:DerivedValue",
                        "@ValueSource": valueSourceID
                    };
                }
                containerData.PrimitivePropertyInstance.push(data);
            } else {
                self.logger.error('Unexpected parentType for property, ' + parentType);
            }

            callback(null);
        };
        if (collectionNames.indexOf('dst') < 0) {
            addPropertyData(null);
        } else {
            self.core.loadCollection(node, 'dst', function (err, valueFlows) {
                if (err) {
                    callback('Could not load collection for ' + self.core.getAttribute(node, 'name') +
                        'err: ' + err.toString());
                    return;
                }
                if (valueFlows.length > 1) {
                    if (self.core.getAttribute(parent, 'Type') !== 'Alternative') {
                        self.createMessage(node, self.core.getAttribute(node, 'name') + ' had more than one incoming value', 'warning');
                        callback(null);
                    } else if (self.selectedAlternatives) {
                        // With only one configuration or within a non-alternative container there should NOT be any muxes.
                        self.getValueSrcId(valueFlows, node, parent, function (err, srcId) {
                            if (err) {
                                callback('Problems getting ValueSrcId in alternative for configuration, err: ' + err);
                            } else {
                                addPropertyData(srcId);
                            }
                        });
                    } else {
                        self.addValueFlowMux(valueFlows, parent, containerData, function (err, muxId) {
                            if (err) {
                                self.createMessage(node, 'Property had multiple incoming value-flows.' +
                                    ' Failed to add valueFlow-mux for it.', 'error');
                                callback(err);
                            } else {
                                addPropertyData(muxId);
                            }
                        });
                    }
                } else {
                    self.getValueSrcId(valueFlows, node, parent, function (err, srcId) {
                        if (err) {
                            callback('Problems getting ValueSrcId, err: ' + err);
                        } else {
                            addPropertyData(srcId);
                        }
                    });
                }
            });
        }
    };

    AdmExporter.prototype.addFormula = function (node, parent, containerData, isSimple, callback) {
        var self = this,
            pos = self.core.getRegistry(node, 'position'),
            collectionNames = self.core.getCollectionNames(node),
            formulaName = self.core.getAttribute(node, 'name'),
            data,
            id = self.core.getGuid(node),
            addFormulaData;
        self.logger.info('At formula "' + formulaName + '".');
        addFormulaData = function (operands, error) {
            var i;
            if (isSimple) {
                data = {
                    "@xmlns:q1": "avm",
                    "@xmlns": "",
                    "@xsi:type": "q1:SimpleFormula",
                    "@ID": id,
                    "@Name": formulaName,
                    "@XPosition": Math.floor(pos.x),
                    "@YPosition": Math.floor(pos.y),
                    "@Operation": self.core.getAttribute(node, 'Method'),
                    "@Operand": ''
                };
                for (i = 0; i < operands.length; i += 1) {
                    data["@Operand"] = self.appendWhiteSpacedString(data["@Operand"], operands[i].id);
                }
            } else {
                data = {
                    "@xmlns:q1": "avm",
                    "@xmlns": "",
                    "@xsi:type": "q1:ComplexFormula",
                    "@ID": id,
                    "@Name": formulaName,
                    "@XPosition": Math.floor(pos.x),
                    "@YPosition": Math.floor(pos.y),
                    "@Expression": self.core.getAttribute(node, 'Expression'),
                    "Operand": []
                };
                for (i = 0; i < operands.length; i += 1) {
                    data.Operand.push({
                        "@Symbol": operands[i].symbol,
                        "@ValueSource": operands[i].id
                    });
                }
            }
            containerData.Formula.push(data);
            callback(error);
        };

        if (collectionNames.indexOf('dst') < 0) {
            addFormulaData(null);
        } else {
            self.core.loadCollection(node, 'dst', function (err, valueFlows) {
                var counter = valueFlows.length,
                    i,
                    error = '',
                    operands = [],
                    counterCallback;
                if (err) {
                    callback('Could not load collection for ' + formulaName + 'err: ' + err.toString());
                    return;
                }
                counter = valueFlows.length;
                counterCallback = function (valueFlow) {

                    return function (err, valueSource) {
                        var symbol,
                            valueSourceId,
                            valueSourceParent,
                            parentMetaType;

                        if (err) {
                            error += err;
                        } else {
                            valueSourceParent = self.core.getParent(valueSource);
                            parentMetaType = self.core.getAttribute(self.getMetaType(valueSourceParent), 'name');
                            if (parentMetaType === 'AVMComponentModel') {
                                if (self.shouldBeGenerated(valueSourceParent)) {
                                    valueSourceId = 'id-' + self.core.getGuid(valueSourceParent) + '-' + self.core.getAttribute(valueSource, 'ID');
                                }
                            } else if (parentMetaType === 'Container') {
                                //If parent of parent is alternative, then only add if parent is in AA.
                                if (self.shouldBeGenerated(valueSourceParent)) {
                                    valueSourceId = self.core.getGuid(valueSource);
                                }
                            } else {
                                self.logger.error('Unexpected parentMetaType of valueSourceNode' + parentMetaType);
                            }

                            if (!isSimple) {
                                symbol = self.core.getAttribute(valueFlow, 'VariableName');
                                if (!symbol) {
                                    symbol = self.core.getAttribute(valueSource, 'name');
                                }
                            }
                            if (valueSourceId) {
                                operands.push({
                                    symbol: symbol,
                                    id: valueSourceId
                                });
                            }
                        }
                        counter -= 1;
                        if (counter <= 0) {
                            addFormulaData(operands, error);
                        }
                    };
                };
                if (counter === 0) {
                    self.logger.warning('Formula "' + formulaName + '" did not have any incoming value flows.');
                    addFormulaData([], error);
                }
                for (i = 0; i < valueFlows.length; i += 1) {
                    if (self.core.hasPointer(valueFlows[i], 'src')) {
                        self.core.loadPointer(valueFlows[i], 'src', counterCallback(valueFlows[i]));
                    } else {
                        self.createMessage(valueFlows[i], 'ValueFlow Connection with no src exists in design.', 'error');
                        counterCallback(valueFlows[i])('A valueFlow with only one direction pointer exists in model.');
                    }
                }
            });
        }
    };

    AdmExporter.prototype.addValueFlowMux = function (valueFlows, parent, containerData, callback) {
        var self = this,
            i,
            counter = valueFlows.length,
            s4 = function () {
                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
            },
            mux = {
                '@ID': 'muxid-' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4(),
                '@Source': ''
            },
            error = '',
            counterCallback = function (err, valueSource) {
                var valueSourceId,
                    valueSourceParent,
                    parentMetaType;

                if (err) {
                    error += err;
                } else {
                    valueSourceParent = self.core.getParent(valueSource);
                    parentMetaType = self.core.getAttribute(self.getMetaType(valueSourceParent), 'name');
                    if (parentMetaType === 'AVMComponentModel') {
                        valueSourceId = 'id-' + self.core.getGuid(valueSourceParent) + '-' + self.core.getAttribute(valueSource, 'ID');
                    } else if (parentMetaType === 'Container') {
                        valueSourceId = self.core.getGuid(valueSource);
                    } else {
                        self.logger.error('Unexpected parentMetaType of valueSourceNode' + parentMetaType);
                    }
                    mux['@Source'] = self.appendWhiteSpacedString(mux['@Source'], valueSourceId);
                }
                counter -= 1;
                if (counter <= 0) {
                    callback(error, mux['@ID']);
                }
            };

        containerData.ValueFlowMux.push(mux);
        for (i = 0; i < valueFlows.length; i += 1) {
            if (self.core.hasPointer(valueFlows[i], 'src')) {
                self.core.loadPointer(valueFlows[i], 'src', counterCallback);
            } else {
                self.createMessage(valueFlows[i], 'ValueFlow Connection with no src exists in design.', 'error');
                counterCallback('A valueFlow with only one direction pointer exists in model.');
            }
        }
    };

    AdmExporter.prototype.getValueSrcId = function (valueFlows, targetNode, targetParent, callback) {
        var self = this,
            error = '',
            i,
            finalSrcId,
            counter = valueFlows.length,
            parentType = self.core.getAttribute(self.getMetaType(targetParent), 'name'),
            atValueFlowNode = function (valueFlow) {
                var srcId;
                counter -= 1;
                if (!self.core.hasPointer(valueFlow, 'src')) {
                    self.createMessage(valueFlow, 'ValueFlow Connection with no src exists in design.', 'error');
                    error += 'A valueFlow with only one direction pointer exists in model.';
                    if (counter <= 0) {
                        callback(error, null);
                    }
                } else {
                    self.core.loadPointer(valueFlow, 'src', function (err, valueSourceNode) {
                        var src,
                            srcParentMetaType;
                        if (err) {
                            error += 'Could not load src pointer for ' + self.core.getAttribute(valueFlow, 'name')
                                + 'err: ' + err.toString();
                        } else if (self.nodeIsWithinDesign(valueSourceNode)) {
                            src = self.core.getParent(valueSourceNode);
                            srcParentMetaType = self.core.getAttribute(self.getMetaType(src), 'name');
                            if (srcParentMetaType === 'AVMComponentModel') {
                                if (parentType === 'AVMComponentModel' && self.core.getPath(src) === self.core.getPath(targetParent)) {
                                    self.logger.info('Skipping connection within same ACM : ' +
                                        self.core.getAttribute(targetNode, 'name'));
                                } else {
                                    // If parent of parent is alternative, then only add if parent is in AA.
                                    if (self.shouldBeGenerated(src)) {
                                        srcId = 'id-' + self.core.getGuid(src) + '-' + self.core.getAttribute(valueSourceNode, 'ID');
                                    }
                                }
                            } else if (srcParentMetaType === 'Container') {
                                //If parent of parent is alternative, then only add if parent is in AA.
                                if (self.shouldBeGenerated(src)) {
                                    srcId = self.core.getGuid(valueSourceNode);
                                }
                            } else {
                                self.logger.error('Unexpected parentMetaType of valueSourceNode' + srcParentMetaType);
                            }
                        }
                        if (srcId) {
                            if (finalSrcId) {
                                self.createMessage(targetNode, 'Cannot have more than one incoming value.', 'error');
                                error += 'There is more than one incoming value..';
                            } else {
                                finalSrcId = srcId;
                            }
                        }
                        if (counter <= 0) {
                            callback(error, finalSrcId);
                        }
                    });
                }
            };
        for (i = 0; i < valueFlows.length; i += 1) {
            atValueFlowNode(valueFlows[i]);
        }
    };
//</editor-fold>

    AdmExporter.prototype.loadSetMembers = function(node, setName, callback) {
        var self = this;
        var pointedIds = self.core.getMemberPaths(node, setName);
        var pointedNodes = [];
        var error = '';


        function getLoadCallback(i) {
            return function(err, pointedNode) {
                if (err) {
                    error += err;
                }
                pointedNodes[i] = pointedNode;
                counter--;
                if (counter === 0) {
                    callback(error, pointedNodes, pointedIds);
                    counter--;
                }
            };
        }
        var counter = pointedIds.length;
        for (var i = 0; i < pointedIds.length; i += 1) {
            if (self.startsWith(pointedIds[i], self.rootPath)) {
                self.core.loadByPath(self.rootNode, pointedIds[i], getLoadCallback(i));
            } else {
                counter--;
                pointedNodes[i] = null;
                // self.logger.warning('AssemblyRoot selection is not within design, see path "' + componentIds[i] + '".');
            }
        }
        if (counter === 0) {
            callback(null, pointedNodes, pointedIds);
            counter--;
        }
    };

    AdmExporter.prototype.addAssemblyRoot = function (node, parent, containerData, callback) {
        var self = this;
        self.loadSetMembers(node, 'Selection', function (err, componentNodes, componentIds) {
            for (var i = 0; i < componentNodes.length; i++) {
                var componentNode = componentNodes[i];
                if (err) {
                    callback('Failed loading node from AssemblyRoot ' + err.toString());
                } else if (componentNode) {
                    if (self.shouldBeGenerated(componentNode)) {
                        //<DomainFeature xmlns:q3="cad" xmlns="" xsi:type="q3:AssemblyRoot" AssemblyRootComponentInstance="{9267c3e4-a944-4a68-85a8-c90dfb5a428c}" />
                        if (self.admData.DomainFeature) {
                            // TODO: Append the selection here when format updated.
                            self.logger.warning('Only one AssemblyRoot can be exported, an arbitrary selection will be made!');
                            self.admData.DomainFeature['@AssemblyRootComponentInstance'] = self.core.getGuid(componentNode);
                        } else {
                            self.admData.DomainFeature = {
                                '@xmlns:q1': 'cad',
                                '@xmlns': '',
                                '@xsi:type': 'q1:AssemblyRoot',
                                '@AssemblyRootComponentInstance': self.core.getGuid(componentNode)
                            };
                        }
                    } else {
                        self.logger.info('Skipping AssemblyRoot Selection of "' + self.core.getPath(componentNode) + '".');
                    }
                } else {
                    self.logger.warning('AssemblyRoot selection is not within design, see path "' + componentIds[i] + '".');
                }
            }
        });
    };

    AdmExporter.prototype.visitAllChildrenFromRootContainer = function (rootNode, callback) {
        var self = this,
            error = '',
            counter,
            counterCallback,
            containerData;

        counter = {visits: 1};
        counterCallback = function (err) {
            error = err ? error + err : error;
            counter.visits -= 1;
            if (counter.visits === 0) {
                callback(error === '' ? undefined : error);
            }
        };

        containerData = self.getContainerData(rootNode, true);
        self.admData.RootContainer = containerData;
        self.visitAllChildrenRec(rootNode, counter, containerData, counterCallback);
    };

    AdmExporter.prototype.visitAllChildrenRec = function (node, counter, containerData, callback) {
        var self = this;
        self.core.loadChildren(node, function (err, children) {
            var i,
                atModelNodeCallback;
            if (err) {
                callback('loadChildren failed for ' + self.core.getAttribute(node, 'name'));
                return;
            }
            if (children.length === 0) {
                callback(null);
            } else {
                counter.visits += children.length;
                counter.visits -= 1;
                atModelNodeCallback = function (childNode) {
                    return function (err) {
                        var subContainerData;
                        if (err) {
                            callback(err);
                            return;
                        }
                        if (self.isMetaTypeOf(childNode, self.meta.Container) && self.shouldBeGenerated(childNode)) {
                            // If containerData is Alternative, then only add if childNode.id is in AA.
                            subContainerData = self.getContainerData(childNode);
                            containerData.Container.push(subContainerData);
                            self.visitAllChildrenRec(childNode, counter, subContainerData, callback);
                        } else {
                            callback(null);
                        }
                    };
                };
                for (i = 0; i < children.length; i += 1) {
                    self.atModelNode(children[i], node, containerData, atModelNodeCallback(children[i]));
                }
            }
        });
    };

    AdmExporter.prototype.getContainerData = function (node, isRoot) {
        var self = this,
            pos,
            containerData = {
                "@xmlns:q1": "avm",
                "@xsi:type": 'q1:' + self.core.getAttribute(node, 'Type'),
                "@Name": self.core.getAttribute(node, 'name'),
                "@xmlns": "",
                "Container": [],
                "Property": [],
                "ComponentInstance": [],
                "Port": [],
                "Connector": [],
                "JoinData": [],
                "Formula": [],
                "ValueFlowMux": [],
                "ContainerFeature": []
            };

        if (!isRoot) {
            pos = self.core.getRegistry(node, 'position');
            containerData["@XPosition"] = Math.floor(pos.x);
            containerData["@YPosition"] = Math.floor(pos.y);
        }

        return containerData;
    };

    AdmExporter.prototype.getConnectorData = function (node, parent) {
        var self = this,
            pos,
            parentType = self.core.getAttribute(self.getMetaType(parent), 'name'),
            data;

        if (parentType === 'Container') {
            pos = self.core.getRegistry(node, 'position');
            data = {
                "@Name": self.core.getAttribute(node, 'name'),
                "@ID": self.core.getGuid(node),
                "@ConnectorComposition": '',
                "@ApplyJoinData": '',
                "@Definition": '',
                "@XPosition": Math.floor(pos.x),
                "@YPosition": Math.floor(pos.y),
                "Role": []
            };
        } else if (parentType === 'AVMComponentModel') {
            data = {
                "@ID": 'id-' + self.core.getGuid(parent) + '-' + self.core.getAttribute(node, 'ID'),
                "@IDinComponentModel": self.core.getAttribute(node, 'ID'),
                "@ConnectorComposition": '',
                "@ApplyJoinData": ''
            };
        } else {
            self.logger.error('Unexpected parent-type, ' + parentType + ', of connector.');
            data = {};
        }

        return data;
    };

    AdmExporter.prototype.getDomainPortData = function (node, parent) {
        var self = this,
            typeName = self.core.getAttribute(node, 'Type'),
            domainNodeName = self.core.getAttribute(node, 'name'),
            parentType = self.core.getAttribute(self.getMetaType(parent), 'name'),
            data,
            pos,
            attributes,
            attr;

        if (parentType === 'Container' || parentType === 'Connector') {
            pos = self.core.getRegistry(node, 'position');
            data = {
                '@ID': self.core.getGuid(node),
                '@PortMap': '',
                '@Name': domainNodeName,
                '@Notes': '',
                '@Definition': '',
                "@XPosition": Math.floor(pos.x),
                "@YPosition": Math.floor(pos.y)
            };
            if (typeName === 'ModelicaConnector') {
                attributes = {
                    '@xmlns:q1': 'modelica',
                    '@xsi:type': 'q1:Connector',
                    '@Locator': domainNodeName,
                    '@Class': self.core.getAttribute(node, 'Class')
                };
            } else if (typeName === 'CadAxis') {
                attributes = {
                    '@xmlns:q1': 'cad',
                    '@xsi:type': 'q1:Axis',
                    '@DatumName': ''
                };
            } else if (typeName === 'CadCoordinateSystem') {
                attributes = {
                    '@xmlns:q1': 'cad',
                    '@xsi:type': 'q1:CoordinateSystem',
                    '@DatumName': ''
                };
            } else if (typeName === 'CadPlane') {
                attributes = {
                    '@xmlns:q1': 'cad',
                    '@xsi:type': 'q1:Plane',
                    '@DatumName': '',
                    '@SurfaceReverseMap': ''
                };
            } else if (typeName === 'CadPoint') {
                attributes = {
                    '@xmlns:q1': 'cad',
                    '@xsi:type': 'q1:Point',
                    '@DatumName': ''
                };
            } else if (typeName === 'SchematicPin') {
                attributes = {
                    '@xmlns:q1': 'schematic',
                    '@xsi:type': 'q1:Pin',
                };
            } else if (typeName === 'SystemCPort') {
                attributes = {
                    '@xmlns:q1': 'systemc',
                    '@xsi:type': 'q1:SystemCPort',
                };
            } else if (typeName === 'RFPort') {
                attributes = {
                    '@xmlns:q1': 'rf',
                    '@xsi:type': 'q1:RFPort',
                };
            }
            for (attr in attributes) {
                if (attributes.hasOwnProperty(attr)) {
                    data[attr] = attributes[attr];
                }
            }
        } else if (parentType === 'AVMComponentModel') {
            data = {
                '@ID': 'id-' + self.core.getGuid(parent) + '-' + self.core.getAttribute(node, 'ID'),
                '@PortMap': '',
                '@IDinComponentModel': self.core.getAttribute(node, 'ID')
            };
        } else {
            self.logger.error('Unexpected parent-type, ' + parentType + ', of domainPort.');
            data = {};
        }

        return data;
    };

    AdmExporter.prototype.appendWhiteSpacedString = function (toBeAppended, appendix) {
        if (appendix) {
            if (toBeAppended) {
                toBeAppended += " " + appendix;
            } else {
                toBeAppended = appendix;
            }
        }
        return toBeAppended;
    };

    AdmExporter.prototype.nodeIsWithinDesign = function (node) {
        var self = this,
            path = self.core.getPath(node);
        if (self.startsWith(path, self.rootPath)) {
            return true;
        }
        self.logger.info('Connection to node with path ' + path + ' will not be generated.' +
            'It is not part of the root-design');
        return false;
    };

    AdmExporter.prototype.startsWith = function (str, start) {
        if (start === '') {
            return true;
        }
        return start.length > 0 && str.substring(0, start.length) === start;
    };

    return AdmExporter;
});
/**
* Generated by PluginGenerator from webgme on Mon Nov 03 2014 15:50:38 GMT-0600 (Central Standard Time).
*/

define('plugin/TestBenchRunner/TestBenchRunner/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'AssemblyRoot': '/1008889918/1502717053',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'Workflow': '/1008889918/891929219',
        'WorkSpace': '/1008889918/1826321976',
    };
});
/* Generated file based on ejs templates */
define('plugin/TestBenchRunner/TestBenchRunner/Templates/Templates',[], function() {
    return {
    "execute.py.ejs": "import os\nimport sys\nimport json\nimport shutil\nimport errno\nimport zipfile\nimport logging\nimport subprocess\nimport pywintypes\nimport win32com.client\n## Setup a logger\nlogger = logging.getLogger()\nlogger.setLevel(logging.DEBUG)\n\n# Create file handler which logs even debug messages.\nif not os.path.isdir('log'):\n    os.mkdir('log')\n\nfh = logging.FileHandler(os.path.join('log', 'execute.log'))\nfh.setLevel(logging.DEBUG)\n\n# Create console handler to stdout with logging level info.\nch = logging.StreamHandler(sys.stdout)\nch.setLevel(logging.INFO)\n\n# Create console handler to stderr with logging level error.\nch_err = logging.StreamHandler()\nch_err.setLevel(logging.ERROR)\n\n# Create formatter and add it to the handlers.\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfh.setFormatter(formatter)\nch.setFormatter(formatter)\nch_err.setFormatter(formatter)\n\n# Add the handlers to the logger.\nlogger.addHandler(fh)\nlogger.addHandler(ch)\nlogger.addHandler(ch_err)\n\ndef close_log():\n    fh.close()\nimport atexit\natexit.register(close_log)\n\n## Obtain the root directory for the META-tools.\n# Get the running meta-python path.\nsys_pieces = sys.executable.split(os.path.sep)\n# Drop the 'bin/Python27/Scripts/python.exe' part.\nif len(sys_pieces) < 4:\n    logger.error('Python script must be called using the META-python virtual env!')\n    sys.exit(1)\nsys_pieces = sys_pieces[:-4]\n# Make sure to get the slashes after e.g. \"C:\".\nif sys_pieces[0].endswith(':'):\n    sys_pieces[0] = sys_pieces[0] + os.path.sep\n# Join the pieces.\nMETA_DIR = os.path.join(*sys_pieces)\n\n# Disable early binding: full of race conditions writing the cache files,\n# and changes the semantics since inheritance isn't handled correctly\nimport win32com.client.gencache\n_savedGetClassForCLSID = win32com.client.gencache.GetClassForCLSID\nwin32com.client.gencache.GetClassForCLSID = lambda x: None\n\n\ndef call_subprocess_with_logging(command, my_env=None):\n    \"\"\"\n    Calls the command, if error occurred logging is made of all non-empty returns.\n    Reraises the exception putting the formatted message in returncode\n\n    :param command: the command to be executed\n    :param my_env: dictionary of environment-variables, None -> uses the default windows\n    \"\"\"\n    logger.info(\"About to call : {0}\".format(command))\n    return_code = 0\n    try:\n        if my_env:\n            return_out = subprocess.check_output(command, stderr=subprocess.STDOUT, env=my_env, shell=True)\n        else:\n            return_out = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)\n        logger.info('console output : \\n{0}'.format(return_out))\n    except subprocess.CalledProcessError as err:\n        msg = \"Subprocess call failed!\"\n        msg += \"\\n  return-code   : {0}\".format(err.returncode)\n        return_code = err.returncode\n        if err.output:\n            msg += \"\\n  console output: \\n\\n{0}\".format(err.output)\n        if err.message:\n            msg += \"\\n  error message : {0}\".format(err.message)\n        logger.error(msg)\n\n    return return_code\n\n\n\ndef parse_xme_and_save_to_mga(file_name):\n    \"\"\"\n    Imports the xme project and saves it to a mga-file with the same name.\n    (Will overwrite any existing mga with same path.)\n\n    returns : mga_path : path to newly created mga\n    \"\"\"\n    mga_file = file_name[:-4] + '.mga'\n    mga_path = os.path.abspath(mga_file)\n    logger.debug(\"About to parse .xme, mga will be saved to \" + mga_path)\n    parser = win32com.client.Dispatch('Mga.MgaParser')\n    (paradigm, paradigm_v, paradigm_guid, basename, version) = parser.GetXMLInfo(file_name)\n    logger.debug('Xme info :')\n    logger.debug('  paradigm     : {0}'.format(paradigm))\n    logger.debug('  paradigm_v   : {0}'.format(paradigm_v))\n    import uuid\n    logger.debug('  paradigm_guid: {0}'.format(str(uuid.UUID(bytes_le=paradigm_guid))))\n    logger.debug('  basename     : {0}'.format(basename))\n    logger.debug('  version      : {0}'.format(version))\n    if paradigm != 'CyPhyML':\n        raise IOError(\"Given xme file must be using CyPhyML as paradigm, not {0}\".format(paradigm))\n\n    project = win32com.client.Dispatch('Mga.MgaProject')\n    project.Create('MGA={0}'.format(mga_path), paradigm)\n    try:\n        parser.ParseProject(project, file_name)\n        project.Save()\n        logging.debug(\"Mga saved to \" + mga_file)\n    finally:\n        project.Close(True)\n\n    return mga_path\n\n\ndef extract_components(src_path='ACMs', dst_path='components_extracted'):\n    if os.path.isdir(dst_path):\n        logging.debug('Found dir :{0} - removing and making new...'.format(dst_path))\n        shutil.rmtree(dst_path)\n        os.mkdir(dst_path)\n    files = os.listdir(src_path)\n    logging.debug('Components found in directory : {0}'.format(files))\n    for f_name in files:\n        if f_name.endswith('.zip'):\n            zippy = zipfile.ZipFile(os.path.join(src_path, f_name))\n            zippy.extractall('\\\\\\\\?\\\\' + os.path.join(os.getcwd(), dst_path, f_name.rstrip('.zip')))\n\n\ndef import_components(mga_path, dir_path='components_extracted'):\n    exec_name = 'CyPhyComponentImporterCL.exe'\n    exec_path = os.path.join(META_DIR, 'bin', exec_name)\n    if not os.path.isfile(exec_path):\n        logging.debug('Did not find {0} in bin directory.'.format(exec_name))\n        logging.debug('Assuming developer machine, looking in src directory...'.format(exec_name))\n        exec_path = os.path.join(META_DIR, 'src', 'CyPhyComponentImporterCL', 'bin', 'Release', exec_name)\n        if not os.path.isfile(exec_path):\n            raise IOError('Did not find {0}'.format(exec_path))\n\n    command = '\"{0}\" -r \"{1}\" \"{2}\"'.format(exec_path, dir_path, mga_path)\n    rc = call_subprocess_with_logging(command)\n\n    return rc\n\n\ndef import_design(mga_path, adm_file, testbench_config):\n    project_conn_str = 'MGA={0}'.format(mga_path)\n    project = win32com.client.Dispatch('Mga.MgaProject')\n    project.Open(project_conn_str)\n    design_ids = []\n    is_in_transaction = False\n    try:\n        design_importer = win32com.client.Dispatch('MGA.Interpreter.CyPhyDesignImporter')\n        design_importer.Initialize(project)\n        logger.debug('About to begin transaction..')\n        project.BeginTransactionInNewTerr()\n        logger.debug('Transaction began.')\n        is_in_transaction = True\n        ## Find the test-bench and find the design placeholder.\n        testbench_mga = project.ObjectByPath(testbench_config['path'])\n        if not testbench_mga:\n            raise RuntimeError('Given test-bench path \"' + testbench_config['path'] + '\" does not exist in project!')\n        try:\n            logger.debug('Path returned MgaObject of type: {0}'.format(testbench_mga.MetaBase.Name))\n            #if not testbench_mga.MetaBase.Name == 'TestBench':\n            #    raise NotImplementedError('Only CyPhy TestBench supported!')\n            testbench_id = testbench_mga.ID\n            logger.debug('Found test-bench \"{0}\".'.format(testbench_mga.Name))\n            logger.debug('Test-bench ID : {0}.'.format(testbench_id))\n            tlsut_mga = [o for o in testbench_mga.GetChildrenOfKind('TopLevelSystemUnderTest')]\n            if tlsut_mga:\n                tlsut_mga = tlsut_mga[0]\n            else:\n                tlsut_role = testbench_mga.Meta.GetRoleByNameDisp('TopLevelSystemUnderTest')\n                tlsut_mga = testbench_mga.CreateChildObject(tlsut_role)\n            logger.debug('TopLevelSystem under test {0} name :'.format(tlsut_mga.Name))\n            if tlsut_mga.Referred:\n                logger.debug(' \"{0}\" ({1})'.format(tlsut_mga.Referred.Name, tlsut_mga.Referred.MetaBase.Name))\n            else:\n                logger.debug(' [null reference]')\n        except pywintypes.com_error as err:\n            logger.error(err.message)\n            raise RuntimeError('Given test-bench not found or setup correctly.')\n        ## Import the design.\n        logger.debug('Calling CyPhyDesignImporter.ImportDesign.')\n        design_mga = design_importer.ImportDesignToDesignSpaceIfApplicable(project, adm_file)\n        design_id = design_mga.ID\n        logger.debug('Design imported:')\n        logger.debug(' Name : {0}'.format(design_mga.Name))\n        logger.debug(' Type : {0}'.format(design_mga.MetaBase.Name))\n        logger.debug(' ID : {0}'.format(design_id))\n        logger.debug(' Path : {0}'.format(design_mga.AbsPath))\n\n        if design_mga.MetaBase.Name == 'DesignContainer':\n            logger.info('Creating DesignSpaceHelper')\n            desert = win32com.client.Dispatch('MGA.Interpreter.DesignSpaceHelper')\n            desert.Initialize(project)\n            logger.info('Calling ApplyConstraintsAndGenerateCWCs')\n            # selectedObjs = win32com.client.Dispatch('Mga.MgaFCOs')\n            desert.ApplyConstraintsAndGenerateCWCs(project, design_mga, False)\n            configurations = design_mga.GetChildrenOfKind('Configurations')\n            if configurations.Count == 0:\n                logger.warning('No Configurations found')\n            for cc in configurations:\n                logger.info('Found Configurations \"{0}\" inside design.'.format(cc.Name))\n                cfg_mgas = cc.GetChildrenOfKind('CWC')\n                for cfg_mga in cfg_mgas:\n                    logger.info(cfg_mga.AbsPath)\n                    design_ids.append(cfg_mga.ID)\n        else:\n            design_ids.append(design_id)\n        ## Reference the design from the top-level-system-under-test.\n        logger.debug('Creating ReferenceSwitcher')\n        ref_switcher = win32com.client.Dispatch('MGA.Interpreter.ReferenceSwitcher')\n        logger.debug('Switching referred in test-bench to design.')\n        tlsut_mga.Name = design_mga.Name\n        ref_switcher.SwitchReference(design_mga, tlsut_mga)\n        logger.debug('Design was placed in test-bench.')\n        logger.debug('About to commit transaction..')\n        project.CommitTransaction()\n        logger.debug('Transaction committed.')\n        is_in_transaction = False\n    finally:\n        if is_in_transaction:\n            logger.debug('About to abort transaction..')\n            project.AbortTransaction()\n            logger.debug('Transaction aborted.')\n            project.Close(True)\n        else:\n            logger.debug('About to save project..')\n            project.Close(False)\n            logger.debug('Project saved.')\n\n    return testbench_id, design_ids\n\n\ndef call_master_interpreter(mga_path, test_bench_id, cfg_ids):\n    project_conn_str = 'MGA={0}'.format(mga_path)\n    project = win32com.client.Dispatch('Mga.MgaProject')\n    project.Open(project_conn_str)\n    nbr_of_failures = 0\n    nbr_of_cfgs = 0\n    try:\n        logger.debug('Creating CyPhyMasterInterpreterAPI')\n        mi = win32com.client.Dispatch('CyPhyMasterInterpreter.CyPhyMasterInterpreterAPI')\n        mi.Initialize(project)\n        logger.debug('Creating ConfigurationSelectionLight')\n        config_light = win32com.client.Dispatch('CyPhyMasterInterpreter.ConfigurationSelectionLight')\n        config_light.ContextId = test_bench_id\n        config_light.SetSelectedConfigurationIds(cfg_ids)\n        config_light.KeepTemporaryModels = False\n        config_light.PostToJobManager = False\n        mi_results = mi.RunInTransactionWithConfigLight(config_light)\n        mi.WriteSummary(mi_results)\n\n        for res in mi_results:\n            nbr_of_cfgs += 1\n            logger.info('MasterInterpreter result : {0}'.format(res.Message))\n            if not res.Success:\n                logger.error('MasterIntpreter failed : {0}, Exception : {1}'.format(res.Message, res.Exception))\n                nbr_of_failures += 1\n        if nbr_of_failures > 0:\n            with open('_FAILED.txt', 'ab+') as f_out:\n                f_out.write('MasterInterprter failed on ' + str(nbr_of_failures) + ' out of ' + str(nbr_of_cfgs) +\n                            ' configurations. See log/execution.log and log/MasterInerpter.xxxx.log for more info.')\n    finally:\n        project.Close(True)\n\n    if nbr_of_failures == nbr_of_cfgs:\n        logger.error('No succeeded configurations from MasterInterpreter, aborting script..')\n        sys.exit(1)\n\n\ndef run_execution_jobs():\n    jobs = []\n    for root, dirs, files in os.walk('results'):\n        for f in files:\n            if f == 'testbench_manifest.json':\n                with open(os.path.join(root, 'testbench_manifest.json'), 'r') as f_in:\n                    tb_dict = json.load(f_in)\n                    if len(tb_dict['Steps']) == 0:\n                        logger.warning('Skipping job for design ' + tb_dict['DesignID'] + ' in ' + root +\n                                       ', since there are no steps. MasterInterpreter probably failed on this design.')\n                    else:\n                        cmd = tb_dict['Steps'][0]['Invocation']\n                        logger.info('Found cmd {0}'.format(cmd))\n                        job = {'cmd': cmd, 'dir': root, 'designId': tb_dict['DesignID']}\n                        jobs.append(job)\n                        logger.info('Added job {0}'.format(job))\n                break\n    root_dir = os.getcwd()\n    if os.path.isdir('testbench_manifests'):\n        shutil.rmtree('testbench_manifests')\n    os.mkdir('testbench_manifests')\n    failed_jobs = 0\n    nbr_of_jobs = len(jobs)\n    for job in jobs:\n        os.chdir(job['dir'])\n        try:\n            rc = call_subprocess_with_logging('\"%s\" -m TestBenchExecutor testbench_manifest.json\"' % sys.executable)\n            if rc != 0:\n                logger.error('call failed! {0} in {1}'.format(job['cmd'], job['dir']))\n                failed_jobs += 1\n            elif os.path.isfile('_FAILED.txt'):\n                logger.error('Job \"{0}\" created _FAILED.txt'.format(job['cmd']))\n                failed_jobs += 1\n                with open('_FAILED.txt', 'r') as f_in:\n                    logger.error('\\r\\n'.join(f_in.readlines()))\n        finally:\n            os.chdir(root_dir)\n    if failed_jobs > 0:\n        with open('_FAILED.txt', 'ab+') as f_out:\n            f_out.write(str(failed_jobs) + ' of ' + str(nbr_of_jobs) +' jobs failed! See log/execute.log.')\n\n\ndef move_dashboard_files(new_dir):\n\n    # Entire directories\n    dashboard_dir = 'dashboard'\n    designs_dir = 'designs'\n    design_space_dir = 'design-space'\n    requirements_dir = 'requirements'\n    test_benches_dir = 'test-benches'\n    results_dir = 'results'\n\n    # Single files\n    meta_results_file = os.path.join(results_dir, 'results.metaresults.json')\n    project_file = 'manifest.project.json'\n    index_html = 'index.html'\n\n    # Delete/Create new result directory.\n    if os.path.isdir(new_dir):\n        shutil.rmtree(new_dir)\n    os.mkdir(new_dir)\n    os.mkdir(os.path.join(new_dir, results_dir))\n    # Copy single files.\n    shutil.copy(meta_results_file, os.path.join(new_dir, meta_results_file))\n    shutil.copy(project_file, os.path.join(new_dir, project_file))\n    shutil.copy(index_html, os.path.join(new_dir, index_html))\n    # Copy entire directories.\n    shutil.copytree(dashboard_dir, os.path.join(new_dir, dashboard_dir))\n    shutil.copytree(designs_dir, os.path.join(new_dir, designs_dir))\n    shutil.copytree(design_space_dir, os.path.join(new_dir, design_space_dir))\n    shutil.copytree(requirements_dir, os.path.join(new_dir, requirements_dir))\n    shutil.copytree(test_benches_dir, os.path.join(new_dir, test_benches_dir))\n\n    for dir_path in (os.path.join(results_dir, dd) for dd in os.listdir(results_dir)):\n        if os.path.isdir(dir_path):\n            tm_path = os.path.join(dir_path, 'testbench_manifest.json')\n            if os.path.isfile(tm_path):\n                os.mkdir(os.path.join(new_dir, dir_path))\n                shutil.copy(tm_path, os.path.join(new_dir, tm_path))\n\n\nif __name__ == '__main__':\n    try:\n        shutil.rmtree('asdfsdf')\n    except OSError as e:\n        if e.errno != errno.ENOENT:\n            raise\n    with zipfile.ZipFile('tbAsset.zip') as zippy:\n        zippy.extractall('.')\n    try:\n        adm_path = [f for f in os.listdir('.') if f.endswith('.adm')][0]\n    except IndexError:\n        logger.error('Could not find an adm at {0}'.format(os.getcwd()))\n        with open('_FAILED.txt', 'ab+') as f_out:\n            f_out.write('Execution failed! See log/execute.log.')\n        sys.exit(1)\n    try:\n        xme_path = [f for f in os.listdir('.') if f.endswith('.xme')][0]\n    except IndexError:\n        logger.error('Could not find an adm or xme file at {0}'.format(os.getcwd()))\n        with open('_FAILED.txt', 'ab+') as f_out:\n            f_out.write('Execution failed! See log/execute.log.')\n        sys.exit(1)\n    with open('testbench_config.json', 'r') as f_in:\n        test_bench_config = json.load(f_in)\n    extract_components()\n    logger.info('(1) Components extracted...')\n    mga_file = parse_xme_and_save_to_mga(xme_path)\n    logger.info('(2) Mga created...')\n    rc = import_components(mga_file)\n    if rc == 0:\n        logger.info('(3) Components imported...')\n    else:\n        logger.error('Components could not be imported!')\n        with open('_FAILED.txt', 'ab+') as f_out:\n            f_out.write('Execution failed! See log/execute.log.')\n        sys.exit(1)\n    try:\n        test_bench_id, cfg_ids = import_design(mga_file, adm_path, test_bench_config)\n    except Exception as err:\n        import traceback\n        the_trace = traceback.format_exc()\n        logger.error('Exception raised in \"import_design\": {0}'.format(the_trace))\n        error_msg = err.message\n        if hasattr(err, 'excepinfo'):\n            error_msg = '{0} : {1}'.format(error_msg, err.excepinfo)\n        with open('_FAILED.txt', 'ab+') as f_out:\n            f_out.write('Could not import design and place it correctly in test-bench. Exception message : ' +\n                        error_msg + ' See logs for more info.')\n            sys.exit(1)\n\n    logger.info('(4) Design imported and placed in test-bench.')\n    call_master_interpreter(mga_file, test_bench_id, cfg_ids)\n    logger.info('(5) MasterInterpreter finished.')\n    run_execution_jobs()\n    logger.info('(6) Job execution completed.')\n",
    "run_execution.cmd.ejs": ":: Executes the package\necho off\npushd %~dp0\n%SystemRoot%\\SysWoW64\\REG.exe query \"HKLM\\software\\META\" /v \"META_PATH\"\n\nSET QUERY_ERRORLEVEL=%ERRORLEVEL%\n\nIF %QUERY_ERRORLEVEL% == 0 (\n        FOR /F \"skip=2 tokens=2,*\" %%A IN ('%SystemRoot%\\SysWoW64\\REG.exe query \"HKLM\\software\\META\" /v \"META_PATH\"') DO SET META_PATH=%%B)\nSET META_PYTHON_EXE=\"%META_PATH%\\bin\\Python27\\Scripts\\Python.exe\"\n    %META_PYTHON_EXE% execute.py %1\n)\nIF %QUERY_ERRORLEVEL% == 1 (\n    echo on\necho \"META tools not installed.\" >> _FAILED.txt\necho \"See Error Log: _FAILED.txt\"\npopd\nexit /b %QUERY_ERRORLEVEL%\n)\npopd\nexit /b %ERRORLEVEL%\n"
}});
/**
* Generated by PluginGenerator from webgme on Wed Nov 19 2014 17:26:52 GMT-0600 (Central Standard Time).
*/

define('plugin/AtmExporter/AtmExporter/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'AssemblyRoot': '/1008889918/1502717053',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'ExactLayoutConstraint': '/1008889918/749469140',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'LayoutConstraint': '/1008889918/236224320',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'RangeLayoutConstraint': '/1008889918/1669293789',
        'RelativeLayoutConstraint': '/1008889918/24011457',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'WorkSpace': '/1008889918/1826321976',
        'Workflow': '/1008889918/891929219',
    };
});
/*globals define */
/**
* Generated by PluginGenerator from webgme on Wed Sep 03 2014 15:36:17 GMT-0500 (Central Daylight Time).
*/

define('plugin/AdmExporter/AtmExporter/AtmExporter',[
    'plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/AtmExporter/AtmExporter/meta',
    'plugin/AdmExporter/AdmExporter/AdmExporter',
    'xmljsonconverter'], function (PluginConfig, PluginBase, MetaTypes, AdmExporter, Converter) {
    

    /**
    * Initializes a new instance of AtmExporter.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin AtmExporter.
    * @constructor
    */
    var AtmExporter = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = null;
        this.atmData = null;
        this.admExporter = null;
    };

    // Prototypal inheritance from PluginBase.
    AtmExporter.prototype = Object.create(PluginBase.prototype);
    AtmExporter.prototype.constructor = AtmExporter;

    /**
    * Gets the name of the AtmExporter.
    * @returns {string} The name of the plugin.
    * @public
    */
    AtmExporter.prototype.getName = function () {
        return "ATM Exporter";
    };

    /**
    * Gets the semantic version (semver.org) of the AtmExporter.
    * @returns {string} The version of the plugin.
    * @public
    */
    AtmExporter.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the description of the AtmExporter.
    * @returns {string} The description of the plugin.
    * @public
    */
    AtmExporter.prototype.getDescription = function () {
        return "Exports an ATM based on the AVMTestBenchModel.";
    };

    /**
    * Gets the configuration structure for the AtmExporter.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    AtmExporter.prototype.getConfigStructure = function () {
        return [ ];
    };


    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    AtmExporter.prototype.main = function (callback) {
        var self = this;

        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }
        if (self.isMetaTypeOf(self.activeNode, self.META.AVMTestBenchModel) === false) {
            self.createMessage(null, 'This plugin must be called from a AVMTestBenchModel.', 'error');
            callback(null, self.result);
            return;
        }
        self.meta = MetaTypes;
        self.updateMETA(self.meta);
        self.getTlsutInterface(self.activeNode, function (err, tlsut) {
            var artifact,
                atmXmlStr,
                jsonToXml = new Converter.Json2xml();
            if (err) {
                self.logger.error('Error when exploring TestBench, err: ' + err);
                callback(null, self.result);
                return;
            }
            artifact = self.blobClient.createArtifact('testBench');
            atmXmlStr = jsonToXml.convertToString({TestBench: self.atmData});
            artifact.addFile(self.atmData['@Name'] + '.atm', atmXmlStr, function (err, hash) {
                if (err) {
                    callback('Could not add atm file : err' + err.toString(), self.result);
                    return;
                }
                self.logger.info('Added atm files to artifact, it has hash: ' + hash);
                artifact.save(function (err, hash) {
                    if (err) {
                        callback('Could not save atm artifact : err' + err.toString(), self.result);
                        return;
                    }
                    self.result.addArtifact(hash);
                    self.result.setSuccess(true);
                    callback(null, self.result);
                });
            });
        });
    };

    AtmExporter.prototype.getTlsutInterface = function (testBenchNode, callback) {
        var self = this,
            rootPath = self.core.getPath(testBenchNode),
            name = self.core.getAttribute(testBenchNode, 'name');

        self.atmData = {
            "@xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
            "@xmlns:xsd": "http://www.w3.org/2001/XMLSchema",
            "@Name": name,
            "@xmlns": "avm",
            "TopLevelSystemUnderTest": null,
            "Parameter": [],
            "Metric": [],
            "TestInjectionPoint": [],
            "TestComponent": [],
            "Workflow": null,
            "Settings": [],
            "TestStructure": []
        };

        self.initializeAdmExporter(rootPath);

        self.core.loadChildren(testBenchNode, function (err, children) {
            var counter, i,
                error = '',
                metaTypeName,
                counterCallback,
                tlsutData;
            if (err) {
                callback('loadChildren failed for test-bench "' + name + '" with err:' + err.toString());
                return;
            }
            counter = children.length;
            counterCallback = function (err) {
                error = err ? error + err : error;
                counter -= 1;
                if (counter <= 0) {
                    if (tlsutData) {
                        callback(error, tlsutData);
                    } else {
                        callback(error + ' there was no Container in the test-bench "' + name + '".');
                    }
                }
            };

            if (children.length === 0) {
                self.createMessage(testBenchNode, 'Test-bench "' + name + '" was empty!', 'error');
                counterCallback('Test-bench "' + name + '" was empty!');
            }

            for (i = 0; i < children.length; i += 1) {
                metaTypeName = self.core.getAttribute(self.getMetaType(children[i]), 'name');
                if (metaTypeName === 'Container') {
                    if (tlsutData) {
                        self.createMessage(testBenchNode, 'There was more than one TLSUT in test-bench "' + name + '".', 'error');
                        counterCallback('There was more than one TLSUT in test-bench "' + name + '".');
                    } else {
                        self.exploreTlsut(children[i], function (err, retrievedData) {
                            tlsutData = retrievedData;
                            counterCallback(err);
                        });
                    }
                } else if (metaTypeName === 'Workflow') {
                    self.addWorkflow(children[i], counterCallback);
                } else if (metaTypeName === 'Metric') {
                    self.addMetric(children[i], counterCallback);
                } else if (metaTypeName === 'AVMComponentModel') {
                    self.admExporter.addComponentInstance(children[i], testBenchNode, self.atmData, counterCallback);
                } else {
                    counterCallback(null);
                }
            }
        });
    };

    AtmExporter.prototype.exploreTlsut = function (tlsutNode, callback) {
        var self = this;
        self.core.loadChildren(tlsutNode, function (err, children) {
            var counter, i,
                error = '',
                metaTypeName,
                childName,
                counterCallback,
                tlsutData = {
                    properties: {},
                    connectors: {}
                };
            if (err) {
                callback('loadChildren failed for tlsut with err:' + err.toString());
                return;
            }
            counter = children.length;
            counterCallback = function (err) {
                error = err ? error + err : error;
                counter -= 1;
                if (counter <= 0) {
                    callback(error, tlsutData);
                }
            };

            if (children.length === 0) {
                counterCallback(null);
            }

            for (i = 0; i < children.length; i += 1) {
                metaTypeName = self.core.getAttribute(self.getMetaType(children[i]), 'name');
                childName = self.core.getAttribute(children[i], 'name');
                if (metaTypeName === 'Property') {
                    //TODO: Elaborate on the info stored, e.g. units, type etc. For now just use names.
                    if (tlsutData.properties[childName]) {
                        counterCallback('Duplicate name, "' + childName + '"  of properties in top level system under test!');
                    } else {
                        tlsutData.properties[childName] = children[i];
                        counterCallback(null);
                    }
                } else if (metaTypeName === 'Connector') {
                    //TODO: Elaborate on the info stored, e.g. domainConnectors, Classes etc.
                    if (tlsutData.connectors[childName]) {
                        counterCallback('Duplicate name, "' + childName + '"  of connectors in top level system under test!');
                    } else {
                        tlsutData.connectors[childName] = children[i];
                        counterCallback(null);
                    }
                } else {
                    counterCallback(null);
                }
            }
        });
    };

    AtmExporter.prototype.addWorkflow = function (wfNode, callback) {
        var self = this,
            name = self.core.getAttribute(wfNode, 'name'),
            wfData = {
                '@Name': name,
                '@xmlns': '',
                'Task': []
            };
        self.atmData.Workflow = wfData;
        self.core.loadChildren(wfNode, function (err, children) {
            var counter, i,
                addTask,
                metaTypeName,
                taskData;
            if (err) {
                callback('loadChildren failed for work-flow with err: ' + err.toString());
                return;
            }
            counter = children.length;
            addTask = function (taskNode) {
                if (taskNode) {
                    if (self.core.getAttribute(taskNode, 'Type') === 'InterpreterTask') {
                        taskData = {
                            '@xmlns:q1': 'avm',
                            '@xsi:type': 'q1:InterpreterTask',
                            '@Name': self.core.getAttribute(taskNode, 'name'),
                            '@COMName': self.core.getAttribute(taskNode, 'COMName'),
                            '@Parameters': self.core.getAttribute(taskNode, 'Parameters')
                        };
                        wfData.Task.push(taskData);
                    }
                }
                counter -= 1;
                if (counter <= 0) {
                    callback(null);
                }
            };

            if (children.length === 0) {
                self.createMessage(wfNode, 'No task defined in Workflow!', 'error');
                callback('No task defined in workflow');
            }

            for (i = 0; i < children.length; i += 1) {
                metaTypeName = self.core.getAttribute(self.getMetaType(children[i]), 'name');
                if (metaTypeName === 'Task') {
                    addTask(children[i]);
                } else {
                    addTask(null, null);
                }
            }
        });

    };

    AtmExporter.prototype.addMetric = function (metricNode, callback) {
        var self = this,
            name = self.core.getAttribute(metricNode, 'name'),
            pos = self.core.getRegistry(metricNode, 'position');
        self.atmData.Metric.push({
            '@xmlns': '',
            '@Name': name,
            '@Notes': self.core.getAttribute(metricNode, 'INFO'),
            "@XPosition": Math.floor(pos.x),
            "@YPosition": Math.floor(pos.y),
            "Value": null
        });
        callback(null);
    };

    AtmExporter.prototype.initializeAdmExporter = function (rootPath) {
        var self = this;
        self.admExporter = new AdmExporter();
        self.admExporter.meta = self.meta;
        self.admExporter.META = self.META;
        self.admExporter.core = self.core;
        self.admExporter.logger = self.logger;
        self.admExporter.result = self.result;
        self.admExporter.rootPath = rootPath;
        // TODO: delete next line when ATM-flow is more mature.
        self.admExporter.includeAcms = false;
        self.logger.info('AdmExporter initialized.');
    };

    return AtmExporter;
});
//noinspection JSLint
/**
* Generated by PluginGenerator from webgme on Thu May 22 2014 22:27:57 GMT-0500 (Central Daylight Time).
*/

define('plugin/TestBenchRunner/TestBenchRunner/TestBenchRunner',['plugin/PluginConfig',
        'plugin/PluginBase',
        'plugin/TestBenchRunner/TestBenchRunner/meta',
        'plugin/TestBenchRunner/TestBenchRunner/Templates/Templates',
        'plugin/AdmExporter/AdmExporter/AdmExporter',
        'plugin/AdmExporter/AtmExporter/AtmExporter',
        'xmljsonconverter',
        'executor/ExecutorClient',
        'ejs'
    ],function (PluginConfig, PluginBase, MetaTypes, TEMPLATES, AdmExporter, AtmExporter, Converter, ExecutorClient, ejs) {
    
//<editor-fold desc="============================ Class Definition ================================">
    /**
    * Initializes a new instance of TestBenchRunner.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin TestBenchRunner.
    * @constructor
    */
    var TestBenchRunner = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = MetaTypes;
        this.referencedDesign = null;
        this.saveToModel = false;
        this.resultsData = {};
        // Execution frame-work.
        this.runExecution = false;
        this.run_exec_cmd = null;
        this.exec_py = null;
        this.executorClient = null;
        // AVM design format
        this.designAcmFiles = null;
        this.admData = null;
        this.admString = null;

        this.admExporter = null;
        this.atmExporter = null;
    };

    // Prototypal inheritance from PluginBase.
    TestBenchRunner.prototype = Object.create(PluginBase.prototype);
    TestBenchRunner.prototype.constructor = TestBenchRunner;

    /**
    * Gets the name of the TestBenchRunner.
    * @returns {string} The name of the plugin.
    * @public
    */
    TestBenchRunner.prototype.getName = function () {
        return "Test bench runner";
    };

    /**
    * Gets the semantic version (semver.org) of the TestBenchRunner.
    * @returns {string} The version of the plugin.
    * @public
    */
    TestBenchRunner.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the description of the TestBenchRunner.
    * @returns {string} The description of the plugin.
    * @public
    */
    TestBenchRunner.prototype.getDescription = function () {
        return "Exports the design and run the test-bench from where it is called.";
    };

    /**
    * Gets the configuration structure for the TestBenchRunner.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    TestBenchRunner.prototype.getConfigStructure = function () {
        return [
            {
                'name': 'run',
                'displayName': 'Run test-bench',
                'description': 'Will start a job and run the test-bench.',
                'value': false,
                'valueType': 'boolean',
                'readOnly': false
            },
            {
                'name': 'save',
                'displayName': 'Save results',
                'description': 'Will save the results back to the model (only applicable when run is selected).',
                'value': false,
                'valueType': 'boolean',
                'readOnly': false
            },
            {
                'name': 'configurationPath',
                'displayName': 'DesertConfigurationID',
                'description': 'ID of DesertConfiguration object inside referenced TopLevelSystemUnderTest.',
                'value': '',
                'valueType': 'string',
                'readOnly': false
            }
        ];
    };
//</editor-fold>

    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    TestBenchRunner.prototype.main = function (callback) {
        // Use self to access core, project, result, logger etc from PluginBase.
        // These are all instantiated at this point.
        var self = this,
            currentConfig = self.getCurrentConfig();

        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }
        if (self.isMetaTypeOf(self.activeNode, self.META.AVMTestBenchModel) === false) {
            self.createMessage(null, 'This plugin must be called from an AVMTestBenchModel.', 'error');
            callback(null, self.result);
            return;
        }
        self.updateMETA(self.meta);
        self.runExecution = currentConfig.run;
        self.saveToModel = currentConfig.save;
        self.cfgPath = currentConfig.configurationPath;

        self.getTestBenchInfo(self.activeNode, function (err, testBenchInfo) {
            if (err) {
                self.logger.error('getTestBenchInfo returned with error: ' + err.toString());
                self.createMessage(self.activeNode, 'Something went wrong when exploring the test-bench.', 'error');
                callback(null, self.result);
                return;
            }
            self.getAdmAndAcms(self.referencedDesign, [testBenchInfo], function (err) {
                if (err) {
                    self.logger.error(err);
                    self.createMessage(self.referencedDesign, 'Something went wrong when exploring the referenced design.', 'error');
                    callback(null, self.result);
                    return;
                }
                self.generateExecutionFiles(testBenchInfo, function (err, artifact) {
                    if (err) {
                        callback('Could generateExecutionFiles : err' + err.toString(), self.result);
                        return;
                    }
                    artifact.save(function (err, hash) {
                        if (err) {
                            callback('Could not save artifact : err' + err.toString(), self.result);
                            return;
                        }
                        self.result.addArtifact(hash);
                        if (self.runExecution) {
                            self.executeJob(hash, testBenchInfo, function (err, success) {
                                if (err) {
                                    self.logger.error(err);
                                    callback(err, self.result);
                                    return;
                                }
                                self.result.setSuccess(success);
                                if (self.saveToModel && self.cfgPath) {
                                    self.loadLatestRoot(function (err, latestRootNode) {
                                        if (err) {
                                            self.logger.error(err);
                                            callback(err, self.result);
                                            return;
                                        }
                                        self.core.loadByPath(latestRootNode, self.resultsData.configurationPath, function (err, cfgNode) {
                                            var resultNode;
                                            if (err) {
                                                self.logger.error(err);
                                                callback(err, self.result);
                                                return;
                                            }
                                            self.core.loadByPath(latestRootNode, self.resultsData.resultMetaNodePath, function (err, resMetaNode) {
                                                if (err) {
                                                    self.logger.error(err);
                                                    callback(err, self.result);
                                                    return;
                                                }

                                                self.core.loadByPath(latestRootNode, self.resultsData.executedTestBenchPath, function (err, tbNode) {
                                                    if (err) {
                                                        self.logger.error(err);
                                                        callback(err, self.result);
                                                        return;
                                                    }
                                                    resultNode = self.core.createNode({parent: cfgNode, base: resMetaNode});
                                                    self.core.setAttribute(resultNode, 'name', new Date().toString());
                                                    self.core.setAttribute(resultNode, 'CfgAdm', self.resultsData.cfgAdm);
                                                    self.core.setPointer(resultNode, 'ExecutedTestBench', tbNode);
                                                    self.core.setAttribute(resultNode, 'TestBenchManifest', 'See Artifacts...');
                                                    self.core.setAttribute(resultNode, 'Artifacts', self.resultsData.testBenchManifest);
                                                    self.logger.info('Execution succeeded for test-bench "' + testBenchInfo.name + '".');
                                                    self.save('Test-bench "' + testBenchInfo.name + '" results was updated after execution.', function (err) {
                                                        if (err) {
                                                            self.result.setSuccess(false);
                                                            callback(err, self.result);
                                                        }
                                                        self.createMessage(resultNode, 'Results saved to result node.', 'info');
                                                        callback(null, self.result);
                                                    });
                                                });
                                            });
                                        });
                                    });
                                } else if (self.saveToModel && success) {
                                    self.save('Test-bench "' + testBenchInfo.name + '" results was updated after execution.', function (err) {
                                        if (err) {
                                            self.result.setSuccess(false);
                                            callback(err, self.result);
                                        }
                                        self.createMessage(null, 'Results saved to test-bench node.', 'info');
                                        callback(null, self.result);
                                    });
                                } else {
                                    callback(null, self.result);
                                }
                            });
                        } else {
                            self.result.setSuccess(true);
                            callback(null, self.result);
                        }
                    });
                });
            });
        });
    };

    TestBenchRunner.prototype.getTestBenchInfo = function (testBenchNode, callback) {
        var self = this,
            testBenchInfo = {};
        testBenchInfo.name = self.core.getAttribute(testBenchNode, 'name');
        testBenchInfo.path = self.core.getAttribute(testBenchNode, 'ID');
        testBenchInfo.testBenchFilesHash = self.core.getAttribute(testBenchNode, 'TestBenchFiles');
        testBenchInfo.node = testBenchNode;
        if (!testBenchInfo.path) {
            self.createMessage(testBenchNode, 'There is no "ID" provided for the test-bench. It must be a path' +
                ' in the project-tree of the xme in asset "TestBenchFiles", e.g. /TestBenches/Dynamics/MyTestBench', 'error');
            callback('TestBench ID not provided.');
            return;
        }
        self.logger.info('Getting data for test-bench "' + testBenchInfo.name + '".');
        self.initializeAtmExporter();
        self.atmExporter.getTlsutInterface(testBenchNode, function (err, tlsut) {
            if (err) {
                self.createMessage(testBenchNode, 'Could not obtain Top Level System Under test interface.', 'error');
                callback('Something went wrong when getting tlsut interface err: ' + err);
                return;
            }
            testBenchInfo.tlsut = tlsut;

            // For single test-benches check the reference for the test-bench and its parent folder.
            if (self.core.hasPointer(testBenchNode, 'TopLevelSystemUnderTest')) {
                self.logger.info('Test-bench has TopLevelSystemUnderTest ref set.');
                self.core.loadPointer(testBenchNode, 'TopLevelSystemUnderTest', function (err, design) {
                    if (err) {
                        self.logger.error('loading TLSUT failed with err: ' + err.toString());
                        callback(err);
                        return;
                    }
                    self.referencedDesign = design;
                    callback(null, testBenchInfo);
                });
            } else {
                self.createMessage(testBenchNode, 'No TopLevelSystemUnderTest reference set for test-bench.', 'error');
                callback('Found no reference to TLSUT.');
            }
        });
    };

    TestBenchRunner.prototype.getAdmAndAcms = function (designNode, testBenchInfos, callback) {
        var self = this;
        self.checkDesignAgainstTLSUTs(designNode, testBenchInfos, function (err, result) {
            if (err) {
                callback(err);
                return;
            }
            if (result !== true) {
                self.createMessage(designNode, 'Design did not match TopLevelSystemUnderTests!', 'error');
                callback('Design did not match TopLevelSystemUnderTests!');
                return;
            }
            self.initializeAdmExporter();
            self.admExporter.rootPath = self.core.getPath(designNode);
            self.admExporter.setupDesertCfg(self.cfgPath, function (err) {
                if (err) {
                    callback('Failed setting up desertConfigurations, err: ' + err);
                    return;
                }
                if (self.admExporter.selectedAlternatives) {
                    self.logger.info('Running on single configuration');
                    self.logger.info(JSON.stringify(self.admExporter.selectedAlternatives, null));
                }
                self.admExporter.exploreDesign(designNode, true, function (err) {
                    if (err) {
                        callback('AdmExporter.exploreDesign failed with error: ' + err);
                        return;
                    }
                    self.admData = self.admExporter.admData;
                    self.designAcmFiles = self.admExporter.acmFiles;
                    callback(null);
                });
            });
        });
    };

    TestBenchRunner.prototype.checkDesignAgainstTLSUTs = function (designNode, testBenchInfos, callback) {
        var self = this,
            k,
            key,
            mergedProperties = {},
            mergedConnectors = {};
        for (k = 0; k < testBenchInfos.length; k += 1) {
            for (key in testBenchInfos[k].tlsut.properties) {
                if (testBenchInfos[k].tlsut.properties.hasOwnProperty(key)) {
                    mergedProperties[key] = testBenchInfos[k].tlsut.properties[key];
                }
            }
            for (key in testBenchInfos[k].tlsut.connectors) {
                if (testBenchInfos[k].tlsut.connectors.hasOwnProperty(key)) {
                    mergedConnectors[key] = testBenchInfos[k].tlsut.connectors[key];
                }
            }
        }

        self.core.loadChildren(designNode, function (err, children) {
            var counter, i,
                error = '',
                metaTypeName,
                childName,
                counterCallback;
            if (err) {
                callback('loadChildren failed for tlsut with err:' + err.toString());
                return;
            }
            counter = children.length;
            counterCallback = function (err) {
                var innerKey,
                    isValid;

                error = err ? error + err : error;
                counter -= 1;
                if (counter <= 0) {
                    isValid = true;
                    for (innerKey in mergedProperties) {
                        if (mergedProperties.hasOwnProperty(innerKey) && mergedProperties[innerKey] !== true) {
                            //isValid = false;
                            self.createMessage(mergedProperties[innerKey], 'Design does not have property "' + innerKey
                                + '". Property checks are currently ignored.', 'warning');
                        }
                    }
                    for (innerKey in mergedConnectors) {
                        if (mergedConnectors.hasOwnProperty(innerKey) && mergedConnectors[innerKey] !== true) {
                            isValid = false;
                            self.createMessage(mergedConnectors[innerKey], 'Design does not have connector "' +
                                innerKey + '".', 'error');
                        }
                    }
                    callback(error, isValid);
                }
            };

            if (children.length === 0) {
                counterCallback(null);
            }

            for (i = 0; i < children.length; i += 1) {
                metaTypeName = self.core.getAttribute(self.getMetaType(children[i]), 'name');
                childName = self.core.getAttribute(children[i], 'name');
                if (metaTypeName === 'Property') {
                    if (mergedProperties[childName] !== undefined) {
                        mergedProperties[childName] = true;
                    }
                    counterCallback(null);
                } else if (metaTypeName === 'Connector') {
                    if (mergedConnectors[childName] !== undefined) {
                        mergedConnectors[childName] = true;
                    }
                    counterCallback(null);
                } else {
                    counterCallback(null);
                }
            }
        });
    };

    TestBenchRunner.prototype.initializeAdmExporter = function () {
        var self = this;
        if (self.admExporter === null) {
            self.admExporter = new AdmExporter();
            self.admExporter.meta = self.meta;
            self.admExporter.META = self.META;
            self.admExporter.core = self.core;
            self.admExporter.logger = self.logger;
            self.admExporter.result = self.result;
            self.admExporter.rootNode = self.rootNode;
            self.logger.info('AdmExporter had not been initialized - created a new instance.');
        } else {
            self.admExporter.acmFiles = {};
            self.admExporter.gatheredAcms = {};
            self.admExporter.rootPath = null;
            self.admExporter.includeAcms = true;
            self.logger.info('AdmExporter had already been initialized - reset acmFiles, gatheredAcms and rootPath.');
        }
    };

    TestBenchRunner.prototype.initializeAtmExporter = function () {
        var self = this;
        self.atmExporter = new AtmExporter();
        self.atmExporter.meta = self.meta;
        self.atmExporter.META = self.META;
        self.atmExporter.core = self.core;
        self.atmExporter.logger = self.logger;
        self.atmExporter.result = self.result;
        self.atmExporter.atmData = null;
        self.logger.info('AtmExporter initialized.');
    };

    TestBenchRunner.prototype.generateExecutionFiles = function (testBenchInfo, callback) {
        var self = this,
            artifact,
            executorConfig,
            jsonToXml,
            testbenchConfig,
            filesToAdd = {};
        self.logger.info('Generating execution files.');
        if (!self.admString) {
            // Only convert the common ejs files once.
            self.logger.info('This was first generation of common filesToAdd.');
            jsonToXml = new Converter.Json2xml();
            self.admString = jsonToXml.convertToString({Design: self.admData});
            self.run_exec_cmd = ejs.render(TEMPLATES['run_execution.cmd.ejs']);
            self.exec_py = ejs.render(TEMPLATES['execute.py.ejs']);
        }
        filesToAdd[self.admData['@Name'] + '.adm'] = self.admString;
        filesToAdd['run_execution.cmd'] = self.run_exec_cmd;
        filesToAdd['execute.py'] = self.exec_py;
        executorConfig = JSON.stringify({
            cmd: 'run_execution.cmd',
            resultArtifacts: [
                {
                    name: 'dashboard',
                    resultPatterns: ['dashboard/**', 'designs/**', 'design-space/**', 'requirements/**',
                        'test-benches/**', 'results/*/testbench_manifest.json', 'results/results.metaresults.json',
                        'manifest.project.json', 'index.html', '*.svg']
                },
                {
                    name: 'logs',
                    resultPatterns: [ 'log/**', '_FAILED.txt']
                },
                {
                    name: 'all',
                    resultPatterns: []
                },
                {
                    name: 'testBenchManifest',
                    resultPatterns: ['results/*/testbench_manifest.json']
                },
                {
                    name: 'cfgAdm',
                    resultPatterns: ['designs/**']
                }
            ]

        }, null, 4);
        filesToAdd['executor_config.json'] = executorConfig;
        testbenchConfig = JSON.stringify({ name: testBenchInfo.name, path: testBenchInfo.path }, null, 4);
        filesToAdd['testbench_config.json'] = testbenchConfig;
        self.logger.info('TestBenchConfig : ' + testbenchConfig);
        self.logger.info('ExecutorConfig  : ' + executorConfig);

        artifact = self.blobClient.createArtifact(testBenchInfo.name);
        artifact.addMetadataHash('tbAsset.zip', testBenchInfo.testBenchFilesHash, function (err, hash) {
            if (err) {
                callback('Could not add tbAsset.zip from test-bench : err' + err.toString());
                return;
            }
            artifact.addObjectHashes(self.designAcmFiles, function (err, hashes) {
                if (err) {
                    callback('Could not add acm files : err' + err.toString());
                    return;
                }
                artifact.addFiles(filesToAdd, function (err, hashes) {
                    if (err) {
                        callback('Could not add script files : err' + err.toString());
                        return;
                    }
                    callback(null, artifact);
                });
            });
        });
    };

    TestBenchRunner.prototype.executeJob = function (artifactHash, testBenchInfo, callback) {
        var self = this;

        if (!self.executorClient) {
            self.logger.info('First execution, creating executor client..');
            self.executorClient = new ExecutorClient();
        }
        self.executorClient.createJob(artifactHash, function (err, jobInfo) {
            var intervalID,
                atSucceedJob;
            if (err) {
                callback('Creating job failed for "' + testBenchInfo.name + '", err: '  + err.toString(), false);
                return;
            }
            self.logger.info('Initial job-info:' + JSON.stringify(jobInfo, null, 4));

            atSucceedJob = function (jInfo) {
                var key;
                self.logger.info('Execution for test-bench "' + testBenchInfo.name + '"  succeeded.');
                self.logger.info('Its final JobInfo looks like : ' + JSON.stringify(jInfo, null, 4));
                for (key in jInfo.resultHashes) {
                    if (jInfo.resultHashes.hasOwnProperty(key)) {
                        self.result.addArtifact(jInfo.resultHashes[key]);
                    }
                }
                self.blobClient.getMetadata(jInfo.resultHashes.logs, function (err, metadata) {
                    if (err) {
                        callback('Could not get metadata for result. Err: ' + err, false);
                        return;
                    }
                    if (metadata.content.hasOwnProperty('_FAILED.txt')) {
                        self.createMessage(testBenchInfo.node, 'Execution had errors - download execution_results for "' +
                            testBenchInfo.name + '" and read _FAILED.txt', 'error');
                        callback(null, false);
                        return;
                    }
                    self.core.setAttribute(testBenchInfo.node, 'Results', jInfo.resultHashes.dashboard);
                    // Save data that is needed for storing data result node.
                    self.resultsData = {
                        cfgAdm: jInfo.resultHashes.cfgAdm,
                        executedTestBenchPath: self.core.getPath(testBenchInfo.node),
                        testBenchManifest: jInfo.resultHashes.testBenchManifest,
                        resultMetaNodePath: self.core.getPath(self.meta.Result),
                        configurationPath: self.cfgPath
                    };
                    self.logger.info('Execution succeeded for test-bench "' + testBenchInfo.name + '".');
                    callback(null, true);
                });
            };

            //noinspection JSLint
            intervalID = setInterval(function () {
                // Get the job-info at intervals and check for a non-CREATED status.
                self.executorClient.getInfo(artifactHash, function (err, jInfo) {
                    self.logger.info(JSON.stringify(jInfo, null, 4));
                    if (jInfo.status === 'CREATED' || jInfo.status === 'RUNNING') {
                        // The job is still running..
                        return;
                    }
                    //noinspection JSLint
                    clearInterval(intervalID);
                    if (jInfo.status === 'SUCCESS') {
                        atSucceedJob(jInfo);
                    } else {
                        self.result.addArtifact(jInfo.resultHashes[testBenchInfo.name + '_logs']);
                        self.result.addArtifact(jInfo.resultHashes[testBenchInfo.name + '_all']);
                        callback('Job execution failed', false);
                    }
                });
            }, 2000);
        });
    };

    TestBenchRunner.prototype.endsWith = function (str, ending) {
        var lastIndex = str.lastIndexOf(ending);
        return (lastIndex !== -1) && (lastIndex + ending.length === str.length);
    };

    TestBenchRunner.prototype.loadLatestRoot = function (callback) {
        var self = this;
        if (self.branchName) {
            self.project.getBranchNames(function (err, branchNames) {
                var branchHash;
                if (err) {
                    callback(err);
                    return;
                }
                if (branchNames.hasOwnProperty(self.branchName)) {
                    branchHash = branchNames[self.branchName];
                    if (branchHash === self.branchHash) {
                        // The branch does not have any new commits - return with original rootNode.
                        self.logger.info('Branch did not change during execution..');
                        callback(null, self.rootNode);
                    } else {
                        // There were commits to the branch since the plugin started.
                        self.logger.info('Loading latest commit, from ' + self.branchHash);
                        self.project.getBranchHash(self.branchName, self.branchHash, function (err, latestHash) {
                            if (err) {
                                self.logger.error(err);
                                callback(err);
                                return;
                            }
                            self.logger.info('Obtained latest commit hash for "' + self.branchName + '": ' + latestHash +
                                '. Attempting to load commit..');
                            self.project.loadObject(latestHash, function (err, commitObj) {
                                if (err) {
                                    callback(err);
                                    return;
                                }
                                self.core.loadRoot(commitObj.root, function (err, latestRoot) {
                                    if (err) {
                                        callback(err);
                                        return;
                                    }
                                    self.branchHash = branchHash;
                                    self.rootNode = latestRoot;
                                    callback(null, latestRoot);
                                });
                            });
                        });
                    }
                } else {
                    callback(null, self.rootNode);
                }
            });
        } else {
            callback(null, self.rootNode);
        }
    };

    return TestBenchRunner;
});
/**
* Generated by PluginGenerator from webgme on Mon Nov 03 2014 15:50:38 GMT-0600 (Central Standard Time).
*/

define('plugin/ExportWorkspace/ExportWorkspace/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'AssemblyRoot': '/1008889918/1502717053',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'Workflow': '/1008889918/891929219',
        'WorkSpace': '/1008889918/1826321976',
    };
});
/* Generated file based on ejs templates */
define('plugin/ExportWorkspace/ExportWorkspace/Templates/Templates',[], function() {
    return {
    "workspace.xme.ejs": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE project SYSTEM \"mga.dtd\">\r\n\r\n<project guid=\"{13ABCA2C-6976-4585-BD00-E7A0D848FC39}\" cdate=\"Thu Jul 17 10:16:59 2014\" mdate=\"Thu Jul 17 10:16:59 2014\" version=\"\" metaguid=\"{5724B9A1-EFED-46B2-83B6-205745BFC5FE}\" metaversion=\"$Rev: 27234 $\" metaname=\"CyPhyML\">\r\n    <name>RootFolder</name>\r\n    <comment></comment>\r\n    <author></author>\r\n    <folder id=\"id-006a-00000001\" relid=\"0x1\" childrelidcntr=\"0x4\" kind=\"RootFolder\" guid=\"{5bd6859e-5be3-40f4-bf8d-bf844760b7cd}\">\r\n        <name>RootFolder</name>\r\n    </folder>\r\n</project>"
}});
/*globals define*/
/**
* Generated by PluginGenerator from webgme on Thu Jul 17 2014 10:06:34 GMT-0500 (Central Daylight Time).
*/

define('plugin/ExportWorkspace/ExportWorkspace/ExportWorkspace',['plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/ExportWorkspace/ExportWorkspace/meta',
    'plugin/ExportWorkspace/ExportWorkspace/Templates/Templates',
    'plugin/AdmExporter/AdmExporter/AdmExporter',
    'xmljsonconverter',
    'ejs'], function (PluginConfig, PluginBase, MetaTypes, TEMPLATES, AdmExporter, Converter, ejs) {
    

    /**
    * Initializes a new instance of ExportWorkspace.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin ExportWorkspace.
    * @constructor
    */
    var ExportWorkspace = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = null;
        this.admExporter = null;
        this.artifact = null;
        this.addedAdms = {};
        this.designNodes = [];
    };

    // Prototypal inheritance from PluginBase.
    ExportWorkspace.prototype = Object.create(PluginBase.prototype);
    ExportWorkspace.prototype.constructor = ExportWorkspace;

    /**
    * Gets the name of the ExportWorkspace.
    * @returns {string} The name of the plugin.
    * @public
    */
    ExportWorkspace.prototype.getName = function () {
        return "Export Workspace";
    };

    /**
    * Gets the semantic version (semver.org) of the ExportWorkspace.
    * @returns {string} The version of the plugin.
    * @public
    */
    ExportWorkspace.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the description of the ExportWorkspace.
    * @returns {string} The description of the plugin.
    * @public
    */
    ExportWorkspace.prototype.getDescription = function () {
        return "Exports everything in the work-space for desktop gme.";
    };

    /**
    * Gets the configuration structure for the ExportWorkspace.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    ExportWorkspace.prototype.getConfigStructure = function () {
        return [
        ];
    };


    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    ExportWorkspace.prototype.main = function (callback) {
        // Use self to access core, project, result, logger etc from PluginBase.
        // These are all instantiated at this point.
        var self = this;
        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }
        if (self.isMetaTypeOf(self.activeNode, self.META.WorkSpace) === false) {
            self.createMessage(null, 'This plugin must be called from a WorkSpace.', 'error');
            callback(null, self.result);
            return;
        }

        self.meta = MetaTypes;
        self.updateMETA(self.meta);
        self.artifact = self.blobClient.createArtifact('workspace');
        self.visitAllChildrenFromWorkspace(self.activeNode, function (err) {
            if (err) {
                self.result.setSuccess(false);
                self.logger.error(err);
                callback(null, self.result);
                return;
            }
            self.exportAdms(function (err) {
                if (err) {
                    self.result.setSuccess(false);
                    self.logger.error(err);
                    callback(null, self.result);
                    return;
                }
                self.artifact.addFile('workspace.xme', ejs.render(TEMPLATES['workspace.xme.ejs']), function (err, hash) {
                    if (err) {
                        self.result.setSuccess(false);
                        self.createMessage(null, 'Could not add workspace.xme to artifact.', 'error');
                        callback(null, self.result);
                        return;
                    }
                    self.artifact.save(function (err, hash) {
                        if (err) {
                            self.result.setSuccess(false);
                            callback(err, self.result);
                            return;
                        }
                        self.result.addArtifact(hash);
                        self.result.setSuccess(true);
                        callback(null, self.result);
                    });
                });
            });
        });
    };

    ExportWorkspace.prototype.addAcm = function (node, callback) {
        var self = this,
            acmHash = self.core.getAttribute(node, 'Resource'),
            componentID = self.core.getAttribute(node, 'ID'),
            name = self.core.getAttribute(node, 'name'),
            filename = 'acms/' + name + '__' + componentID.replace(/[^\w]/gi, '_') + '.zip';
        if (acmHash) {
            self.artifact.addObjectHash(filename, acmHash, function (err, hash) {
                if (err) {
                    callback(err);
                    return;
                }
                callback(null);
            });
        } else {
            self.logger.warning('Acm did not have a resource');
        }
    };

    ExportWorkspace.prototype.addAdm = function (node, callback) {
        var self = this;
        self.designNodes.push(node);
        callback(null);
    };

    ExportWorkspace.prototype.exportAdms = function (callback) {
        var self = this,
            error = '',
            counter = self.designNodes.length,
            exportAdm = function () {
                counter -= 1;
                if (counter < 0) {
                    callback(error);
                    return;
                }
                self.initializeAdmExporter();
                self.admExporter.exploreDesign(self.designNodes[counter], false, function (err) {
                    var jsonToXml = new Converter.Json2xml(),
                        designName,
                        filename,
                        admString;
                    if (err) {
                        error += 'AdmExporter.exploreDesign failed with error: ' + err;
                        exportAdm();
                        return;
                    }
                    designName = self.admExporter.admData['@Name'];
                    filename = 'adms/' + designName + '.adm';
                    admString = jsonToXml.convertToString({Design: self.admExporter.admData});
                    if (self.addedAdms[filename]) {
                        self.logger.warning(designName + ' occurs more than once, appending its guid to filename.');
                        filename = 'adms/' + designName + '__' +
                            self.core.getGuid(self.designNodes[counter]).replace(/[^\w]/gi, '_') + '.adm';
                    }
                    self.addedAdms[filename] = true;
                    self.artifact.addFile(filename, admString, function (err, hash) {
                        if (err) {
                            error += 'Saving adm failed: ' + err;
                        }
                        exportAdm();
                    });
                });
            };
        exportAdm();
    };

    ExportWorkspace.prototype.addAtm = function (node, callback) {
        var self = this;
        self.logger.warning('TODO: Export ATMs...');
        callback(null);
    };

    ExportWorkspace.prototype.atModelNode = function (node, parent, callback) {
        var self = this,
            nodeType = self.core.getAttribute(self.getMetaType(node), 'name'),
            nodeName = self.core.getAttribute(node, 'name'),
            parentName = self.core.getAttribute(parent, 'name');

        self.logger.info('At node "' + nodeName + '" of type "' + nodeType + '" with parent "' + parentName + '".');

        if (nodeType === 'AVMComponentModel') {
            self.addAcm(node, callback);
        } else if (nodeType === 'Container') {
            self.addAdm(node, callback);
        } else if (nodeType === 'AVMTestBenchModel') {
            self.addAtm(node, callback);
        } else if (nodeType === 'ACMFolder' || nodeType === 'ADMFolder' || nodeType === 'ATMFolder') {
            callback(null, true);
        } else {
            callback(null);
        }
    };

    ExportWorkspace.prototype.visitAllChildrenFromWorkspace = function (wsNode, callback) {
        var self = this,
            error = '',
            counter,
            counterCallback;

        counter = {visits: 1};
        counterCallback = function (err) {
            error = err ? error + err : error;
            counter.visits -= 1;
            if (counter.visits === 0) {
                callback(error);
            }
        };

        self.visitAllChildrenRec(wsNode, counter, counterCallback);
    };

    ExportWorkspace.prototype.visitAllChildrenRec = function (node, counter, callback) {
        var self = this;
        self.core.loadChildren(node, function (err, children) {
            var i,
                atModelNodeCallback;
            if (err) {
                callback('loadChildren failed for ' + self.core.getAttribute(node, 'name'));
                return;
            }
            counter.visits += children.length;
            if (children.length === 0) {
                callback(null);
            } else {
                counter.visits -= 1;
                atModelNodeCallback = function (childNode) {
                    return function (err, isFolder) {
                        if (err) {
                            callback(err);
                        }

                        if (isFolder) {
                            self.visitAllChildrenRec(childNode, counter, callback);
                        } else {
                            callback(null);
                        }
                    };
                };
                for (i = 0; i < children.length; i += 1) {
                    self.atModelNode(children[i], node, atModelNodeCallback(children[i]));
                }
            }
        });
    };

    ExportWorkspace.prototype.initializeAdmExporter = function () {
        var self = this;
        if (self.admExporter === null) {
            self.admExporter = new AdmExporter();
            self.admExporter.meta = self.meta;
            self.admExporter.META = self.META;
            self.admExporter.core = self.core;
            self.admExporter.logger = self.logger;
            self.admExporter.result = self.result;
            self.admExporter.rootNode = self.rootNode;
            self.logger.info('AdmExporter had not been initialized - created a new instance.');
        } else {
            self.admExporter.rootPath = null;
            self.admExporter.includeAcms = false;
            self.logger.info('AdmExporter had already been initialized - reset rootPath.');
        }
    };

    return ExportWorkspace;
});
/* Generated file based on ejs templates */
define('plugin/GenerateDashboard/GenerateDashboard/Templates/Templates',[], function() {
    return {
    "index.html.ejs": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Offline Dashboard - RollingWheel</title>\r\n    <script type=\"text/javascript\" src=\"./dashboard/inc/jquery.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"./dashboard/inc/jquery-ui.min.js\"></script>\r\n\r\n    <link rel=\"stylesheet\"\r\n          type=\"text/css\"\r\n          href=\"./dashboard/_local/embedder/vf_visualizer_embedder.css\"\r\n\t>\r\n    <link rel=\"stylesheet\"\r\n          type=\"text/css\"\r\n          href=\"./dashboard/inc/bootstrap/css/bootstrap.css\"\r\n\t>\r\n\t\t<script type=\"text/javascript\">\r\n        $(document).ready(function () {\r\n\r\n            visualizerContainerE = $('#visualizerContainer');\r\n            lessHeight = $('#visualizerToolbar').outerHeight()+$('#visualizerFooter').outerHeight()+2;\r\n\r\n            visualizerContainerE.height($(window).height() - lessHeight);\r\n\r\n            $(window).resize(function() {\r\n                visualizerContainerE.height($(window).height() - lessHeight);\r\n            });\r\n\r\n        });\r\n    </script>\r\n\r\n</head>\r\n<body style=\"background-color: black;\">\r\n<div class=\"visualizerToolbar\" id=\"visualizerToolbar\">\r\n    <a href=\"https://www.vehicleforge.net\" target=\"_blank\" id=\"vfLink\" title=\"Vehicle Forge\"></a>\r\n</div>\r\n<iframe src=\"./dashboard/index.html?resource_url=../manifest.project.json\" class=\"visualizerContainer\" id=\"visualizerContainer\"></iframe>\r\n<div class=\"visualizerFooter\" id=\"visualizerFooter\">\r\n    <div class=\"srepLocation\">Source: [%%Location of the resource%%]</div>\r\n</div>\r\n</body>\r\n</html>\r\n\r\n\r\n",
    "launch_SimpleHTTPServer.cmd.ejs": ":: Use System Python to start a SimpleHTTPServer\r\necho off\r\nif exist \"C:\\Python27\\python.exe\" (\r\n\"C:\\Python27\\python.exe\" -m SimpleHTTPServer\r\nexit /b %ERRORLEVEL%\r\n) else (\r\necho ERROR: \"C:\\Python27\\python.exe\" does not exist.\r\npause\r\n)"
}});
/**
* Generated by PluginGenerator from webgme on Mon Nov 03 2014 15:50:38 GMT-0600 (Central Standard Time).
*/

define('plugin/GenerateDashboard/GenerateDashboard/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'AssemblyRoot': '/1008889918/1502717053',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'Workflow': '/1008889918/891929219',
        'WorkSpace': '/1008889918/1826321976',
    };
});
/**
 * Created by J on 11/6/2014.
 */

define('plugin/GenerateDashboard/GenerateDashboard/dashboardTypes',[], function () {
    

    function manifestProjectJson(cyPhyProjectName) {
        return {
            Project: {
                Components: [],
                DesignSpaceModels: [],
                Configurations: [],
                TestBenches: [],
                Results: {
                    UrlHints: [
                        "./results/results.metaresults.json"
                    ]
                },
                Requirements: {
                    UrlHints: [
                        "./requirements/requirements.json"
                    ],
                    id: "",
                    vfLink: "",
                    text: ""
                },
                CyPhyProjectFileName: cyPhyProjectName || "None provided",
                LastModified: "2014-11-5"
            }
        };
    }

    function resultsMetaresultsJson() {
        return {
            Results: []
        };
    }

    function resultMetaresult(designID, testbenchName, timeStamp, summaryPath) {
        return {
            "Design": null,
            "DesignID": '{' + designID + '}' || "{aaabbbccc111222333}",
            "TestBench": testbenchName + ".testbench.json" || "some testbench",
            "Time": timeStamp,
            "Summary": "./" + summaryPath + "/testbench_manifest.json" || "random dir name / testbench manifest destiny"
        };
    }

    function testbenchJson(name) {
        return {
            $id: "1",
            Name: name || "SinusInput",
            Metrics: [],
            Parameters: [],
            Requirements: []
        };
    }

    function testbenchMetric(name, value, unit, id) {
        return {
            $id: id || Math.round(1000*Math.random()),
            Requirement: null,
            Name: name || "DefaultName (dashboardTypes.js line 87)",
            Unit: unit || "Unitless",
            Value: value || null
        };
    }

    function testbenchParameter(name, value, unit, id) {
        return {
            $id: id || Math.round(1000*Math.random()),
            Name: name || "DefaultName (dashboardTypes.js line 87)",
            Unit: unit || "Unitless",
            Value: value || null
        };
    }

    function requirementsJson() {
        return {
            name: "Undefined",
            children: [ ]
        };
    }

    function testbenchManifest(designID, designName, testbenchName) {
        return {
            "Status": "OK",
            "CopyTestResults": false,
            "Parameters": [],
            "TierLevel": 0,
            "Artifacts": [],
            "VisualizationArtifacts": [],
            "DesignName": designName || "no design name provided",
            "LimitChecks": [],
            "Metrics": [],
            "DesignID": designID || "no id provided",
            "Dependencies": [],
            "Steps": [],
            "TestBench": testbenchName || "No name provided",
            "Created": "some time in the future"
        };
    }

return {
    manifestProjectJson: manifestProjectJson,
    resultsMetaresultsJson: resultsMetaresultsJson,
    resultMetaresult: resultMetaresult,
    testbenchJson: testbenchJson,
    testbenchMetric: testbenchMetric,
    requirementsJson: requirementsJson,
    testbenchParameter: testbenchParameter
};

});
/**
 * Generated by PluginGenerator from webgme on Tue Nov 04 2014 13:59:08 GMT-0600 (Central Standard Time).
 */

define('plugin/GenerateDashboard/GenerateDashboard/GenerateDashboard',['plugin/PluginConfig',
        'plugin/PluginBase',
        'ejs',
        'plugin/GenerateDashboard/GenerateDashboard/Templates/Templates',
        'jszip',
        'plugin/GenerateDashboard/GenerateDashboard/meta',
        'plugin/GenerateDashboard/GenerateDashboard/dashboardTypes',
        'plugin/AdmExporter/AdmExporter/AdmExporter',
        'xmljsonconverter'
    ], function (PluginConfig, PluginBase, ejs, TEMPLATES, JSZip, MetaTypes, DashboardTypes, AdmExporter, Converter) {
    

    /**
    * Initializes a new instance of GenerateDashboard.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin GenerateDashboard.
    * @constructor
    */
    var GenerateDashboard = function () {
        // Call base class' constructor.
        PluginBase.call(this);

        this.metaTypes = MetaTypes;
        this.admExporter = null;
        this.designSpaceNode = null;
        this.json2xml = null;
        this.testResultObjectIDs = [
            "/243203739/1914067160/1594627875/738670268/1604609344/1138983316",
            "/243203739/1914067160/1594627875/738670268/1604609344/638117119",
            "/243203739/1914067160/1594627875/738670268/14675327/721601556",
            "/243203739/1914067160/1594627875/738670268/14675327/669656366"
        ];

        this.dashboardObject = {
            dashboardHashLF: "ada66617178a84bc9d9b7d9a2510019e1e6ade06",
            dashboardHashCRLF: "ed3320752e9598774183d92a0600b9c53d85d3c2",
            designs: {},
            designSpace: {
                name: null,
                data: null
            },
            requirements: "dummy requirements blob hash",
            results: {
                resultsMetaresultsJson: null,
                results: {}
            },
            testBenches: {},
            manifestProjectJson: null
        };
    };

    // Prototypal inheritance from PluginBase.
    GenerateDashboard.prototype = Object.create(PluginBase.prototype);
    GenerateDashboard.prototype.constructor = GenerateDashboard;

    /**
    * Gets the name of the GenerateDashboard.
    * @returns {string} The name of the plugin.
    * @public
    */
    GenerateDashboard.prototype.getName = function () {
        return "Generate Dashboard";
    };

    /**
    * Gets the semantic version (semver.org) of the GenerateDashboard.
    * @returns {string} The version of the plugin.
    * @public
    */
    GenerateDashboard.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the description of the GenerateDashboard.
    * @returns {string} The description of the plugin.
    * @public
    */
    GenerateDashboard.prototype.getDescription = function () {
        return "Takes a list of Result Object IDs, and create a Dashboard package for visualization";
    };

    /**
     * Gets the configuration structure for the TestBenchRunner.
     * The ConfigurationStructure defines the configuration for the plugin
     * and will be used to populate the GUI when invoking the plugin from webGME.
     * @returns {object} The version of the plugin.
     * @public
     */
    GenerateDashboard.prototype.getConfigStructure = function () {
        return [
            {
                'name': 'resultIDs',
                'displayName': 'Result Object IDs',
                'description': 'IDs of Result objects to add to the Generated Dashboard, separated by semicolons.',
                'value': '',
                'valueType': 'string',
                'readOnly': false
            }
        ];
    };

    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    GenerateDashboard.prototype.main = function (callback) {
        // Use self to access core, project, result, logger etc from PluginBase.
        // These are all instantiated at this point.
        var self = this,
            //config = self.getCurrentConfig(),
            workSpaceName,
            workSpaceNode,
            designName = self.core.getAttribute(self.activeNode, 'name'),
            designObjectID = self.core.getPath(self.activeNode),
            designID = self.core.getGuid(self.activeNode),
            currentConfig = self.getCurrentConfig(),
            resultObjectIDs = [];

        if (self.isMetaTypeOf(self.activeNode, self.META.Container) === false) {
            self.createMessage(null, 'This plugin must be called from a Container.', 'error');
            callback(null, self.result);
            return;
        }

        if (currentConfig.resultIDs) {
            resultObjectIDs = currentConfig.resultIDs.split(';');
        }

        self.updateMETA(self.metaTypes);
        self.json2xml = new Converter.Json2xml();
        self.designSpaceNode = self.activeNode;

        // Run AdmExporter to get design_space/%ThisDesignName%.adm
        self.initializeAdmExporter(designObjectID);

        // self.activeNode needs to be the design, 2nd argument is bool: include/return acm files
        var exploreDesignCallbackFunction = function (err) {
            if (err) {
                self.logger.error('AdmExporter.exploreDesign failed with error: ' + err);
                self.logger.error(err);
                self.result.setSuccess(false);
                return callback(err, self.result);
            }

            // get the DesignSpace adm
            self.dashboardObject.designSpace.name = designName;
            self.dashboardObject.designSpace.data = {Design: self.admExporter.admData};

            // Create the manifest.project.json
            workSpaceNode = self.getWorkspaceNode(self.designSpaceNode);
            workSpaceName = self.core.getAttribute(workSpaceNode, 'name');

            self.dashboardObject.manifestProjectJson = new DashboardTypes.manifestProjectJson(workSpaceName);

            // Create the results.metaresults.json
            self.dashboardObject.results.resultsMetaresultsJson = new DashboardTypes.resultsMetaresultsJson();

            // Create requirements
            self.dashboardObject.requirements = new DashboardTypes.requirementsJson();

            var getResultsCallbackFunction = function (err) {
                if (err) {
                    self.logger.error(err);
                    self.result.setSuccess(false);
                    return callback(err, self.result);
                }

                self.createDashboardArtifact(function (err, dashboardArtifactHash) {
                    if (err) {
                        self.logger.error(err);
                        self.result.setSuccess(false);
                        return callback(err, self.result);
                    }

                    self.result.addArtifact(dashboardArtifactHash);
                    self.result.setSuccess(true);
                    self.save('added obj', function (err) {
                        callback(null, self.result);
                    });
                });
            };

            self.getResults(designName, designID, resultObjectIDs, getResultsCallbackFunction);

        };
        
        self.admExporter.exploreDesign(self.designSpaceNode, false, exploreDesignCallbackFunction);
    };

    GenerateDashboard.prototype.createDashboardArtifact = function (callback) {
        var self = this,
            filesToAdd = {},
            dashboardArtifact = self.blobClient.createArtifact('dashboard'),
            filePath,
            key;

        // designs (configurations)
        for (key in self.dashboardObject.designs) {
            if (self.dashboardObject.designs.hasOwnProperty(key)) {
                filePath = "designs/" + key + ".adm";
                self.dashboardObject.manifestProjectJson.Project.Configurations.push("./" + filePath);
                filesToAdd[filePath] = self.json2xml.convertToString(self.dashboardObject.designs[key]);
            }
        }

        // design-space
        filePath = "design-space/" + self.dashboardObject.designSpace.name + ".adm";
        self.dashboardObject.manifestProjectJson.Project.DesignSpaceModels.push("./" + filePath);
        filesToAdd[filePath] = self.json2xml.convertToString(self.dashboardObject.designSpace.data);

        // requirements
        filePath = "requirements/requirements.json";
        filesToAdd[filePath] = JSON.stringify(self.dashboardObject.requirements, null, 4);

        // results.metaresults.json
        filePath = "results/results.metaresults.json";
        filesToAdd[filePath] = JSON.stringify(self.dashboardObject.results.resultsMetaresultsJson, null, 4);

        // results
        for (key in self.dashboardObject.results.results) {
            if (self.dashboardObject.results.results.hasOwnProperty(key)) {
                filePath = "results/" + key + "/testbench_manifest.json";
                filesToAdd[filePath] = JSON.stringify(self.dashboardObject.results.results[key], null, 4);
            }
        }

        // test-benches
        for (key in self.dashboardObject.testBenches) {
            if (self.dashboardObject.testBenches.hasOwnProperty(key)) {
                filePath = "test-benches/" + key;
                self.dashboardObject.manifestProjectJson.Project.TestBenches.push("./" + filePath);
                filesToAdd[filePath] = JSON.stringify(self.dashboardObject.testBenches[key], null, 4);
            }
        }

        filesToAdd["manifest.project.json"] = JSON.stringify(self.dashboardObject.manifestProjectJson, null, 4);

        filesToAdd["launch_SimpleHTTPServer.cmd"] = ejs.render(TEMPLATES['launch_SimpleHTTPServer.cmd.ejs']);

        dashboardArtifact.addFiles(filesToAdd, function (err, fileHashes) {
            var addDashboardFiles;
            if (err) {
                callback(err, null);
            }

            // add the dashboard package to the artifact
            addDashboardFiles = function (dashboardMetadata) {
                var path,
                    hashToAdd,
                    mdContent = dashboardMetadata.content,
                    hashCounter = Object.keys(dashboardMetadata.content).length,
                    errors = '',
                    addDashboardHashCounterCallback = function (err, addedHash) {
                        if (err) {
                            errors += err;
                        }

                        self.logger.info("Added hash to artifact: " + addedHash);

                        hashCounter -= 1;
                        if (hashCounter === 0) {
                            if (errors) {
                                callback(errors, null);
                            }

                            dashboardArtifact.save(callback);
                        }
                    };

                for (path in mdContent) {
                    if (mdContent.hasOwnProperty(path)) {
                        hashToAdd = mdContent[path].content;

                        dashboardArtifact.addObjectHash(path, hashToAdd, addDashboardHashCounterCallback);
                    }
                }
            };

            self.blobClient.getMetadata(self.dashboardObject.dashboardHashLF, function (err, dashboardMetadata) {
                if (err) {
                    self.logger.info('Could not find hash for dashboard LF ' + self.dashboardObject.dashboardHashLF);
                    self.blobClient.getMetadata(self.dashboardObject.dashboardHashCRLF, function (err, dashboardMetadata) {
                        if (err) {
                            self.logger.info('Could not find hash for dashboard CRLF ' +
                                self.dashboardObject.dashboardHashCRLF);
                            self.createMessage(self.designSpaceNode, "Could not add dashboard files from blob. Add them manually");
                            dashboardArtifact.save(callback);
                        } else {
                            addDashboardFiles(dashboardMetadata);
                        }
                    });
                } else {
                    addDashboardFiles(dashboardMetadata);
                }
            });
        });
    };

    GenerateDashboard.prototype.getResults = function (designSpaceName, designSpaceID, resultObjectIDs, callback) {
        var self = this,
            resultCounter = resultObjectIDs.length,
            cumulativeError = "",
            decrementCounterCallback,
            loadByPathCallbackFunction,
            loadDesertConfigChildrenCallback,
            loadDesertConfigSetChildrenCallback,
            loadDesignSpaceChildrenCallback,
            i,
            ithChild,
            iResult,
            iConfig,
            finished = false;

        decrementCounterCallback = function (err) {
            if (err) {
                cumulativeError += err;
            }

            resultCounter -= 1;

            if (resultCounter === 0) {
                return callback(cumulativeError);
            }
        };

        if (resultCounter !== 0) {
            // Iterate over the user-defined list of Result IDs (async with counter)
            loadByPathCallbackFunction = function (err, loadedNode) {
                if (err) {
                    return decrementCounterCallback(err);
                }

                self.readAndModifyResultData(loadedNode, designSpaceName, designSpaceID, decrementCounterCallback);
            };

            for (i = 0; i < resultObjectIDs.length; i++) {

                self.core.loadByPath(self.rootNode, resultObjectIDs[i], loadByPathCallbackFunction);
            }

        } else {

            loadDesertConfigChildrenCallback = function (err, resultNodes) {
                if (err) {
                    return callback(err);
                }

                if (resultNodes.length > 0) {
                    // only want to get results from one configuration set ("firstOrDefault")
                    finished = true;
                }

                resultCounter += resultNodes.length;

                for (iResult = 0; iResult < resultNodes.length; iResult++) {
                    if (self.isMetaTypeOf(resultNodes[iResult], self.metaTypes.Result)) {
                        self.readAndModifyResultData(resultNodes[iResult], designSpaceName, designSpaceID, decrementCounterCallback);
                    }
                }
            };

            loadDesertConfigSetChildrenCallback = function (err, desertConfigs) {
                if (err) {
                    return callback(err);
                }

                for (iConfig = 0; iConfig < desertConfigs.length; iConfig++) {
                    if (self.isMetaTypeOf(desertConfigs[iConfig], self.metaTypes.DesertConfiguration)) {
                        self.core.loadChildren(desertConfigs[iConfig], loadDesertConfigChildrenCallback);
                    }
                }
            };

            loadDesignSpaceChildrenCallback = function (err, designSpaceChildren) {
                if (err) {
                    return callback(err);
                }

                for (i = 0; i < designSpaceChildren.length; i++) {
                    if (finished) {
                        // only want to get results from one configuration set ("firstOrDefault")
                        continue;
                    }

                    ithChild = designSpaceChildren[i];
                    if (self.isMetaTypeOf(ithChild, self.metaTypes.DesertConfigurationSet)) {
                        self.createMessage(ithChild, "Created dashboard for DesertConfigurationSet.", 'info');
                        self.core.loadChildren(ithChild, loadDesertConfigSetChildrenCallback);
                    }
                }
            };

            self.core.loadChildren(self.designSpaceNode, loadDesignSpaceChildrenCallback);
        }
    };

    GenerateDashboard.prototype.readAndModifyResultData = function (resultNode, designSpaceName, designSpaceID, callback) {
        var self = this,
            tbManifestHash = self.core.getAttribute(resultNode, 'Artifacts'),
            cfgAdmHash = self.core.getAttribute(resultNode, 'CfgAdm'),
            configNode = self.core.getParent(resultNode),  // the parent config object
            configNodeName = self.core.getAttribute(configNode, 'name'),  // the webgme name for the config
            configName = configNodeName.replace(". ", "_").replace(": ", "_"),  // the 'safer' name
            configNodeGuid = self.core.getGuid(configNode);  // the DesignID for this result's config

        self.getTestbenchManifest(tbManifestHash, function (err, tbManifestJson) {
            if (err) {
                return callback(err);
            }

            // Append the config name to the design space name (e.g., Wheel + _ + Conf_no_1)
            configName = designSpaceName + '_' + configName;

            self.processTestbenchManifest(tbManifestJson, designSpaceName, configName, configNodeGuid);

            // Check if there is already an adm for this config (multiple results per config)
            if (self.dashboardObject.designs.hasOwnProperty(configName)) {
                callback(null);
            } else {
                self.getCfgAdm(cfgAdmHash, function (err, admJson) {
                    if (err) {
                        return callback(err);
                    }

                    // 'rename' it (designSpaceName), and set the ID (designSpaceID)
                    admJson.Design['@DesignID'] = configNodeGuid;
                    admJson.Design['@Name'] = configName;
                    admJson.Design.RootContainer['@Name'] = configName;
                    admJson.Design['@DesignSpaceSrcID'] = '{' + designSpaceID + '}';

                    self.dashboardObject.designs[configName] = admJson;

                    callback(null);
                });
            }
        });
    };

    GenerateDashboard.prototype.processTestbenchManifest = function (tbManifestJson, designSpaceName, configName, configNodeGuid) {
        var self = this,
            resultDirName,
            resultMetaresult,
            testBenchName = tbManifestJson.TestBench,
            testbenchJson = new DashboardTypes.testbenchJson(testBenchName),
            tbParam,
            tbMetric,
            i;

        // modify the testbench_manifest.json
        tbManifestJson.DesignName = configName;
        tbManifestJson.DesignID = '{' + configNodeGuid + '}';

        // add to the results.metaresults.json object
        // generate a semi-random result directory name
        resultDirName = Math.random().toString(36).substring(8);
        resultDirName += Object.keys(self.dashboardObject.results.results).length;

        resultMetaresult =
            new DashboardTypes.resultMetaresult(configNodeGuid, tbManifestJson.TestBench, tbManifestJson.Created, resultDirName);

        self.dashboardObject.results.results[resultDirName] = tbManifestJson;
        self.dashboardObject.results.resultsMetaresultsJson.Results.push(resultMetaresult);

        // Generate a testbench description
        // Parameters
        for (i = 0; i < tbManifestJson.Parameters.length; i++) {
            tbParam = tbManifestJson.Parameters[i];
            testbenchJson.Parameters.push(
                new DashboardTypes.testbenchParameter(tbParam.Name, tbParam.Value, tbParam.Unit, i + 1));
        }
        // Metrics
        for (i = 0; i < tbManifestJson.Metrics.length; i++) {
            tbMetric = tbManifestJson.Metrics[i];
            testbenchJson.Metrics.push(
                new DashboardTypes.testbenchMetric(tbMetric.Name, tbMetric.Value, tbMetric.Unit, i + 1));
        }

        testBenchName += ".testbench.json";
        self.dashboardObject.testBenches[testBenchName] = testbenchJson;
    };

    GenerateDashboard.prototype.getTestbenchManifest = function (tbManifestHash, callback) {
        var self = this,
            errMsg;

        self.blobClient.getObject(tbManifestHash, function (err, tbManifestContent) {
            if (err) {
                errMsg = "Could not get testbench_manifest from " + tbManifestHash + ": " + err;
                return callback(errMsg, null);
            }

            var tbManifestZip = new JSZip(tbManifestContent),
                tbManifestObject = tbManifestZip.file(/testbench_manifest.json/),
                tbManifestJson;

            if (tbManifestObject === null) {
                errMsg = "Could not get testbench_manifest from " + tbManifestHash + ": " + err;
                self.logger.error(errMsg);
                return callback(errMsg, null);
            }

            // regular expression will return an array, so we need to get the first item
            tbManifestJson = JSON.parse(tbManifestObject[0].asText());

            callback(null, tbManifestJson);
        });
    };

    GenerateDashboard.prototype.getCfgAdm = function (cfgAdmHash, callback) {
        var self = this,
            errMsg;

        self.blobClient.getObject(cfgAdmHash, function (err, cfgAdmObjectContent) {
            if (err) {
                errMsg = "Could not get adm from xml " + cfgAdmHash + ": " + err;
                return callback(errMsg, null);
            }

            var zip = new JSZip(cfgAdmObjectContent),
                cfgAdmXml = zip.file(/\.adm/),  // regular expression will return an array
                cfgAdmJson;

            if (cfgAdmXml === null) {
                errMsg = "Could not get adm from xml " + cfgAdmHash + ": " + err;
                self.logger.error(errMsg);
                return callback(errMsg, null);
            }

            // need to convert to json for editing
            cfgAdmJson = self.convertXml2Json(cfgAdmXml[0].asArrayBuffer());

            if (cfgAdmJson instanceof Error) {
                errMsg = 'Given adm not valid xml: ' + cfgAdmJson.message;
                return callback(errMsg, null);
            }

            callback(null, cfgAdmJson);
        });
    };

    GenerateDashboard.prototype.convertXml2Json = function (modelDescriptionXml) {
        var self = this,
            arrayElementsInXml = {
                Design: false,
                RootContainer: false,
                Value: false,
                Container: true,
                Connector: true,
                Property: true,
                Formula: true,
                Operand: true,
                ValueFlowMux: true,
                ComponentInstance: true,
                PrimitivePropertyInstance: true,
                ConnectorInstance: true,
                PortInstance: true,
                Role: true,
                Port: true
            },
            converter = new Converter.Xml2json({
                skipWSText: true,
                arrayElements: arrayElementsInXml
            });

        return converter.convertFromBuffer(modelDescriptionXml);
    };

    GenerateDashboard.prototype.initializeAdmExporter = function (designPath) {
        var self = this;
        if (self.admExporter === null) {
            self.admExporter = new AdmExporter();
            self.admExporter.meta = self.metaTypes;  // meta is defined here (points to adjacent meta.js file)
            self.admExporter.META = self.META;  // META is from PluginBase
            self.admExporter.core = self.core;
            self.admExporter.logger = self.logger;
            self.admExporter.result = self.result;
            self.admExporter.rootPath = designPath || null;
            self.admExporter.rootNode = self.rootNode;
            self.logger.info('AdmExporter had not been initialized - created a new instance.');
        } else {
            self.admExporter.acmFiles = {};
            self.admExporter.gatheredAcms = {};
            self.admExporter.rootPath = designPath || null;
            self.admExporter.includeAcms = true;
            self.logger.info('AdmExporter had already been initialized - reset acmFiles, gatheredAcms and rootPath.');
        }
    };

    GenerateDashboard.prototype.getWorkspaceNode = function (node) {
        var self = this;
        while (node) {
            if (self.isMetaTypeOf(node, self.metaTypes.WorkSpace)) {
                return node;
            }
            node = self.core.getParent(node);
        }
        self.logger.error('Could not find WorkSpace!!');
    };

    return GenerateDashboard;
});
/**
* Generated by PluginGenerator from webgme on Fri Nov 14 2014 16:45:18 GMT-0600 (Central Standard Time).
*/

define('plugin/SaveDesertConfigurations/SaveDesertConfigurations/meta',[], function () {
    
    return {
        'ACMFolder': '/1008889918/398267330',
        'ADMEditorModelingLanguage': '/1008889918',
        'ADMFolder': '/1008889918/755698918',
        'AssemblyRoot': '/1008889918/1502717053',
        'ATMFolder': '/1008889918/794302266',
        'AVMComponentModel': '/1008889918/1998840078',
        'AVMTestBenchModel': '/1008889918/1624079113',
        'Connector': '/1008889918/1045980796',
        'ConnectorComposition': '/1008889918/488584186',
        'Container': '/1008889918/1993805430',
        'CustomFormula': '/1008889918/1299690106',
        'DesertConfiguration': '/1008889918/1949671222',
        'DesertConfigurationSet': '/1008889918/206008088',
        'DomainModel': '/1008889918/481954284',
        'DomainPort': '/1008889918/126974487',
        'FCO': '/1',
        'Formula': '/1008889918/803021327',
        'Metric': '/1008889918/1328879441',
        'PortMap': '/1008889918/1474284259',
        'Property': '/1008889918/34094492',
        'Requirement': '/1008889918/1220837843',
        'RequirementBase': '/1008889918/1010911100',
        'RequirementCategory': '/1008889918/1598195376',
        'RequirementsFolder': '/1008889918/1675023230',
        'Result': '/1008889918/1368062975',
        'Settings': '/1008889918/319211427',
        'SimpleFormula': '/1008889918/711037118',
        'Task': '/1008889918/91705197',
        'Test': '/1008889918/1922772359',
        'ValueFlowComposition': '/1008889918/756182296',
        'Workflow': '/1008889918/891929219',
        'WorkSpace': '/1008889918/1826321976',
    };
});
/*globals define */

/**
* Generated by PluginGenerator from webgme on Fri Nov 14 2014 16:45:18 GMT-0600 (Central Standard Time).
*/

define('plugin/SaveDesertConfigurations/SaveDesertConfigurations/SaveDesertConfigurations',['plugin/PluginConfig',
    'plugin/PluginBase',
    'plugin/SaveDesertConfigurations/SaveDesertConfigurations/meta'], function (PluginConfig, PluginBase, MetaTypes) {
    

    /**
    * Initializes a new instance of SaveDesertConfigurations.
    * @class
    * @augments {PluginBase}
    * @classdesc This class represents the plugin SaveDesertConfigurations.
    * @constructor
    */
    var SaveDesertConfigurations = function () {
        // Call base class' constructor.
        PluginBase.call(this);
        this.meta = MetaTypes;
    };

    // Prototypal inheritance from PluginBase.
    SaveDesertConfigurations.prototype = Object.create(PluginBase.prototype);
    SaveDesertConfigurations.prototype.constructor = SaveDesertConfigurations;

    /**
    * Gets the name of the SaveDesertConfigurations.
    * @returns {string} The name of the plugin.
    * @public
    */
    SaveDesertConfigurations.prototype.getName = function () {
        return "Save Desert Configurations";
    };

    /**
    * Gets the semantic version (semver.org) of the SaveDesertConfigurations.
    * @returns {string} The version of the plugin.
    * @public
    */
    SaveDesertConfigurations.prototype.getVersion = function () {
        return "0.1.0";
    };

    /**
    * Gets the configuration structure for the SaveDesertConfigurations.
    * The ConfigurationStructure defines the configuration for the plugin
    * and will be used to populate the GUI when invoking the plugin from webGME.
    * @returns {object} The version of the plugin.
    * @public
    */
    SaveDesertConfigurations.prototype.getConfigStructure = function () {
        return [
            {
                'name': 'setData',
                'displayName': 'Configuration Set Data',
                'description': '',
                'value': '',
                'valueType': 'string',
                'readOnly': false
            },
            {
                'name': 'configurations',
                'displayName': 'Configurations',
                'description': 'List of configurations.',
                'value': '',
                'valueType': 'string',
                'readOnly': false
            }
        ];
    };


    /**
    * Main function for the plugin to execute. This will perform the execution.
    * Notes:
    * - Always log with the provided logger.[error,warning,info,debug].
    * - Do NOT put any user interaction logic UI, etc. inside this method.
    * - callback always has to be called even if error happened.
    *
    * @param {function(string, plugin.PluginResult)} callback - the result callback
    */
    SaveDesertConfigurations.prototype.main = function (callback) {
        // Use self to access core, project, result, logger etc from PluginBase.
        // These are all instantiated at this point.
        var self = this,
            currentConfig = self.getCurrentConfig(),
            setData,
            setNode,
            configurations;

        if (!self.activeNode) {
            self.createMessage(null, 'Active node is not present! This happens sometimes... Loading another model ' +
                'and trying again will solve it most of times.', 'error');
            callback('Active node is not present!', self.result);
            return;
        }

        if (self.isMetaTypeOf(self.activeNode, self.META.Container) === false) {
            self.createMessage(null, 'This plugin must be called from an Container.', 'error');
            callback(null, self.result);
            return;
        }

        self.updateMETA(self.meta);
        setData = JSON.parse(currentConfig.setData);
//        console.log(setData);
        setNode = self.saveSetNode(self.activeNode, setData);

        configurations = JSON.parse(currentConfig.configurations);
//        console.log(configurations);
        self.saveConfigurations(setNode, configurations);
        self.result.setSuccess(true);
        self.save('Configurations saved to model.', function (err) {
            callback(null, self.result);
        });

    };

    SaveDesertConfigurations.prototype.saveSetNode = function (containerNode, setData) {
        var self = this,
            setNode;
        setNode = self.core.createNode({parent: containerNode, base: MetaTypes.DesertConfigurationSet });
        self.core.setAttribute(setNode, 'name', setData.name);
        if (setData.description) {
            self.core.setAttribute(setNode, 'INFO', setData.description);
        }

        return setNode;
    };

    SaveDesertConfigurations.prototype.saveConfigurations = function (setNode, configurations) {
        var self = this,
            i,
            configData,
            configNode;
        for (i = 0; i < configurations.length; i += 1) {
            configData = configurations[i];
            configNode = self.core.createNode({parent: setNode, base: MetaTypes.DesertConfiguration });
            self.core.setAttribute(configNode, 'name', configData.name);
            self.core.setAttribute(configNode, 'AlternativeAssignment', JSON.stringify(configData.alternativeAssignments));
        }

    };


    return SaveDesertConfigurations;
});
/*globals define, WebGMEGlobal */
define('webcyphy.plugins',
    [
        'xmljsonconverter',
        'executor/ExecutorClient',
        'plugin/AcmImporter/AcmImporter/AcmImporter',
        'plugin/AdmImporter/AdmImporter/AdmImporter',
        'plugin/AtmImporter/AtmImporter/AtmImporter',
        'plugin/AdmExporter/AdmExporter/AdmExporter',
        'plugin/TestBenchRunner/TestBenchRunner/TestBenchRunner',
        'plugin/ExportWorkspace/ExportWorkspace/ExportWorkspace',
        'plugin/GenerateDashboard/GenerateDashboard/GenerateDashboard',
        'plugin/SaveDesertConfigurations/SaveDesertConfigurations/SaveDesertConfigurations'
    ], function (Converters,
                 ExecutorClient,
                 AcmImporter,
                 AdmImporter,
                 AtmImporter,
                 AdmExporter,
                 TestBenchRunner,
                 ExportWorkspace,
                 GenerateDashboard,
                 SaveDesertConfigurations) {
        
        WebGMEGlobal.classes = WebGMEGlobal.classes || {};
        WebGMEGlobal.classes.ExecutorClient = ExecutorClient;
        WebGMEGlobal.classes.Converters = Converters;
        WebGMEGlobal.plugins.AcmImporter = AcmImporter;
        WebGMEGlobal.plugins.AdmImporter = AdmImporter;
        WebGMEGlobal.plugins.AtmImporter = AtmImporter;
        WebGMEGlobal.plugins.AdmExporter = AdmExporter;
        WebGMEGlobal.plugins.ExportWorkspace = ExportWorkspace;
        WebGMEGlobal.plugins.TestBenchRunner = TestBenchRunner;
        WebGMEGlobal.plugins.GenerateDashboard = GenerateDashboard;
        WebGMEGlobal.plugins.SaveDesertConfigurations = SaveDesertConfigurations;
    });


require(["webcyphy.plugins"]);
}());