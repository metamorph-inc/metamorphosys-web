/**
 * angular-growl-v2 - v0.6.1 - 2014-06-19
 * http://janstevens.github.io/angular-growl-2
 * Copyright (c) 2014 Marco Rinck,Jan Stevens; Licensed MIT
 */
angular.module( "angular-growl", [] ), angular.module( "angular-growl" )
    .directive( "growl", [ "$rootScope", "$sce",
        function ( a, b ) {
            "use strict";
            return {
                restrict: "A",
                templateUrl: "templates/growl/growl.html",
                replace: !1,
                scope: {
                    reference: "@",
                    inline: "@"
                },
                controller: [ "$scope", "$timeout", "growl",
                    function ( c, d, e ) {
                        function f( a ) {
                            d( function () {
                                a.text = b.trustAsHtml( String( a.text ) ), e.reverseOrder() ? c.messages.unshift(
                                    a ) : c.messages.push( a ), a.ttl && -1 !== a.ttl && d( function () {
                                    c.deleteMessage( a )
                                }, a.ttl )
                            }, !0 )
                        }
                        var g = e.onlyUnique();
                        c.messages = [];
                        var h = c.reference || 0;
                        c.inlineMessage = c.inline || e.inlineMessages(), a.$on( "growlMessage", function ( a, d ) {
                            var e, i;
                            parseInt( h, 10 ) === parseInt( d.referenceId, 10 ) && ( g ? ( angular.forEach( c.messages,
                                function ( a ) {
                                    i = b.getTrustedHtml( a.text ), d.text === i && d.severity === a.severity &&
                                        a.title === a.title && ( e = !0 )
                                } ), e || f( d ) ) : f( d ) )
                        } ), c.deleteMessage = function ( a ) {
                            var b = c.messages.indexOf( a );
                            b > -1 && c.messages.splice( b, 1 )
                        }, c.alertClasses = function ( a ) {
                            return {
                                "alert-success": "success" === a.severity,
                                "alert-error": "error" === a.severity,
                                "alert-danger": "error" === a.severity,
                                "alert-info": "info" === a.severity,
                                "alert-warning": "warning" === a.severity,
                                icon: a.disableIcons === !1,
                                "alert-dismissable": !a.disableCloseButton
                            }
                        }, c.wrapperClasses = function () {
                            var a = {};
                            return a[ "growl-fixed" ] = !c.inlineMessage, a[ e.position() ] = !0, a
                        }, c.computeTitle = function ( a ) {
                            var b = {
                                success: "Success",
                                error: "Error",
                                info: "Information",
                                warn: "Warning"
                            };
                            return b[ a.severity ]
                        }
                    }
                ]
            }
        }
    ] ), angular.module( "angular-growl" )
    .run( [ "$templateCache",
        function ( a ) {
            "use strict";
            a.put( "templates/growl/growl.html",
                '<div class="growl-container" ng-class="wrapperClasses()"><div class="growl-item alert" ng-repeat="message in messages" ng-class="alertClasses(message)"><button type="button" class="close" data-dismiss="alert" aria-hidden="true" ng-click="deleteMessage(message)" ng-show="!message.disableCloseButton">&times;</button><h4 class="growl-title" ng-show="message.title" ng-bind="message.title"></h4><div class="growl-message" ng-bind-html="message.text"></div></div></div>'
            )
        }
    ] ), angular.module( "angular-growl" )
    .provider( "growl", function () {
        "use strict";
        var a = {
            success: null,
            error: null,
            warning: null,
            info: null
        }, b = "messages",
            c = "text",
            d = "title",
            e = "severity",
            f = !0,
            g = "variables",
            h = 0,
            i = !1,
            j = "top-right",
            k = !1,
            l = !1,
            m = !1;
        this.globalTimeToLive = function ( b ) {
            if ( "object" == typeof b )
                for ( var c in b ) b.hasOwnProperty( c ) && ( a[ c ] = b[ c ] );
            else
                for ( var d in a ) a.hasOwnProperty( d ) && ( a[ d ] = b )
        }, this.globalDisableCloseButton = function ( a ) {
            k = a
        }, this.globalDisableIcons = function ( a ) {
            l = a
        }, this.globalReversedOrder = function ( a ) {
            m = a
        }, this.messageVariableKey = function ( a ) {
            g = a
        }, this.globalInlineMessages = function ( a ) {
            i = a
        }, this.globalPosition = function ( a ) {
            j = a
        }, this.messagesKey = function ( a ) {
            b = a
        }, this.messageTextKey = function ( a ) {
            c = a
        }, this.messageTitleKey = function ( a ) {
            d = a
        }, this.messageSeverityKey = function ( a ) {
            e = a
        }, this.onlyUniqueMessages = function ( a ) {
            f = a
        }, this.serverMessagesInterceptor = [ "$q", "growl",
            function ( a, c ) {
                function d( a ) {
                    a.data[ b ] && a.data[ b ].length > 0 && c.addServerMessages( a.data[ b ] )
                }
                return {
                    response: function ( a ) {
                        return d( a ), a
                    },
                    responseError: function ( b ) {
                        return d( b ), a.reject( b )
                    }
                }
            }
        ], this.$get = [ "$rootScope", "$interpolate", "$filter",
            function ( b, n, o ) {
                function p( a ) {
                    if ( A ) a.text = A( a.text, a.variables );
                    else {
                        var c = n( a.text );
                        a.text = c( a.variables )
                    }
                    b.$broadcast( "growlMessage", a )
                }

                function q( b, c, d ) {
                    var e, f = c || {};
                    e = {
                        text: b,
                        title: f.title,
                        severity: d,
                        ttl: f.ttl || a[ d ],
                        variables: f.variables || {},
                        disableCloseButton: f.disableCloseButton || k,
                        disableIcons: void 0 === f.disableIcons ? l : f.disableIcons,
                        position: f.position || j,
                        referenceId: f.referenceId || h
                    }, p( e )
                }

                function r( a, b ) {
                    q( a, b, "warning" )
                }

                function s( a, b ) {
                    q( a, b, "error" )
                }

                function t( a, b ) {
                    q( a, b, "info" )
                }

                function u( a, b ) {
                    q( a, b, "success" )
                }

                function v( a ) {
                    var b, f, h, i;
                    for ( i = a.length, b = 0; i > b; b++ )
                        if ( f = a[ b ], f[ c ] ) {
                            h = f[ e ] || "error";
                            var j = {};
                            j.variables = f[ g ] || {}, j.title = f[ d ], q( f[ c ], j, h )
                        }
                }

                function w() {
                    return f
                }

                function x() {
                    return m
                }

                function y() {
                    return i
                }

                function z() {
                    return j
                }
                var A;
                try {
                    A = o( "translate" )
                } catch ( B ) {}
                return {
                    warning: r,
                    error: s,
                    info: t,
                    success: u,
                    addServerMessages: v,
                    onlyUnique: w,
                    reverseOrder: x,
                    inlineMessages: y,
                    position: z
                }
            }
        ]
    } );