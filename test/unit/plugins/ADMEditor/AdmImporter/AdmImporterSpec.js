/* global it,describe,before */
/**
* Generated by PluginGenerator from webgme on Mon Apr 14 2014 10:15:45 GMT-0500 (Central Daylight Time).
*/

'use strict';
if (typeof window === 'undefined') {
    // server-side setup
    var requirejs = require("../../../../../test-conf.js").requirejs;

    var chai = require('chai'),
        should = chai.should(),
        assert = chai.assert,
        expect = chai.expect;
}

var semanticVersionPattern = /^\d+\.\d+\.\d+$/;

describe('AdmImporter', function () {
    var plugin;

    before(function (done) {
        requirejs(['plugin/AdmImporter/AdmImporter/AdmImporter'], function (AdmImporter) {
            plugin = new AdmImporter();
            // TODO: Add option for generating createMETATypesTests and including core etc.
            //core = new Core();
            //meta = createMETATypesTests(core);
            //rootNode = core.getRootNode();
            //modelsNode = core.createNode({base: meta.ModelElement, parent: rootNode});
            //core.setAttribute(modelsNode, 'name', 'Models');
            done();
        });
    });

    it('getVersion', function () {
        expect(semanticVersionPattern.test(plugin.getVersion())).to.equal(true);
    });

    it('getDescription', function () {
        var description = plugin.getDescription();
        expect(typeof description === 'string' || description instanceof String).to.equal(true);
    });

    it('getName', function () {
        var name = plugin.getName();
        expect(typeof name === 'string' || name instanceof String).to.equal(true);
    });

    it('main should be implemented', function () {
        var proto = Object.getPrototypeOf(plugin);
        expect(proto.hasOwnProperty('main')).to.equal(true);
    });
    it('endsWith should return true 1', function () {
        expect(plugin.endsWith('Adms', 'dms')).to.equal(true);
    });

    it('endsWith should return true 2', function () {
        expect(plugin.endsWith('Adms', 'Adms')).to.equal(true);
    });

    it('endsWith should return true 3', function () {
        expect(plugin.endsWith('Adms', '')).to.equal(true);
    });

    it('endsWith should return false 1', function () {
        expect(plugin.endsWith('Adms', 'ADms')).to.equal(false);
    });

    it('endsWith should return false 2', function () {
        expect(plugin.endsWith('Adm', 'sAdm')).to.equal(false);
    });

    it('endsWith should return false 3', function () {
        expect(plugin.endsWith('Adm', 'dm ')).to.equal(false);
    });
});